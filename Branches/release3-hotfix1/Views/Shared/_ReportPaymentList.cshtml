@{TempData.Keep("AllData");}
@if (ViewBag.paymentList != null)
{
    <div id="result">
        @{
    if (ViewBag.paymentList != null && (ViewBag.type == 1|| ViewBag.type==3))
    {
        List<EIF.Helper.PaymentReport> paymentReslts = ViewBag.paymentList;
        
         if(ViewBag.type==3 && ViewBag.domainType == "all")
         {
          paymentReslts=   paymentReslts.GroupBy(c => new { c.AgencyTitle, c.MonthYear }).Select(c => new EIF.Helper.PaymentReport()
             {
                 DomainType = "",
                 MonthYear = c.Key.MonthYear,
                 AgencyTitle = c.Key.AgencyTitle,
                 
                 Payment = c.Sum(s => double.Parse(s.Payment)).ToString(),
                 PastDue = c.Sum(s => double.Parse(s.PastDue)).ToString(),
                 Balance = c.Sum(s => double.Parse(s.Balance)).ToString()
             }).ToList();
         }
        
        
        var Results = paymentReslts.OrderByDescending(c => c.BranchTitle).GroupBy(c => c.BranchTitle);
        var totalBalance = 0.0;
        var totalPayment = 0.0;
        var totalPastDue = 0.0;

        <div class="row">
            @foreach (var item1 in Results)
            {

                var k = item1.OrderBy(c => int.Parse(c.MonthYear)).GroupBy(c => c.MonthYear);

                foreach (var item2 in k)
                {var id =  item1.Key + @item2.Key + "_" + ViewBag.domainType;
                    <div class="col-6">
                        <table cellpadding="0" border="0" class="table table-striped table-bordered " id="tbl3_@id">
                            <thead>
                                @{ var month = int.Parse(item2.Key) > 12 ? item2.Key.ToString() + " Year" : ((enum_Months.eMonths)int.Parse(item2.Key)).ToString() + " Month";}
                                <tr><th colspan="4">  @month For @item1.Key (@ViewBag.domainType) </th></tr>

                                <tr>
                                    <th>Row Labels</th>
                                   @if (ViewBag.type != 3) {<th> Domain Name </th>}
                                    <th>Sum Of Payment</th>
                                    <th>Sum Of O.S. </th>
                                    <th>Sum Of P.D.</th>

                                </tr>
                            </thead>
                            @foreach (var item in item2.ToList())
                            {

                                totalBalance += double.Parse(item.Balance);
                                totalPayment += double.Parse(item.Payment);
                                totalPastDue += double.Parse(item.PastDue);

                                <tr>
                                    <td title="Row Labels">@item.AgencyTitle</td>
                                   @if (ViewBag.type != 3){ <td title=" Domain Name"> @item.DomainTitle</td>}
                                    <td title="Sum Of Payment">@item.Payment</td>
                                    <td title="Sum Of O.S.">@item.Balance</td>
                                    <td title="Sum Of P.D.">@item.PastDue</td>
                                </tr>
                            }
                            <tr>
                               @if (ViewBag.type != 3){ <td colspan="2"><h3>Grand Total </h3> </td>}
                                                                                                   else
                              { <td colspan="1"><h3>Grand Total </h3> </td>}
                                <td title=" Sum Of Payment">@totalPayment</td>
                                <td title="Sum Of O.S.">@totalBalance</td>
                                <td title="Sum Of P.D.">@totalPastDue</td>
                            </tr>
                            @{
                            totalPayment = 0;
                            totalBalance = 0;
                            totalPastDue = 0;
                            }
                        </table>
                    </div>


                }

            }
        </div>
    }


    else
    {
        List<EIF.Helper.PaymentReport> paymentReslts = ViewBag.paymentList;
        var Results = paymentReslts.OrderByDescending(c => c.BranchTitle).GroupBy(c => c.BranchTitle);    
        var totalBalance = 0.0;
        var totalPayment = 0.0;
        var totalPastDue = 0.0;
        
        <div class="row">
            @foreach (var item1 in Results)
{
    var id = item1.Key + "_" + ViewBag.domainType;

    <table cellpadding="0" border="0" class="table table-striped table-bordered " id="tbl3_@id">


        <tr><th colspan="5"> @item1.Key (@ViewBag.domainType)</th></tr>

        <tr>
            <th>Row Labels</th>
            <th> Domain Name</th>
            <th>Sum Of Payment</th>

            <th>Sum Of O.S. </th>
            <th>Sum Of P.D.</th>


        </tr>

        @foreach (var item in item1.ToList())
        {

            <tr>
                <td title="Row Labels">@item.AgencyTitle</td>
                <td title="Domain Name">@item.DomainTitle</td>
                <td title="Sum Of Payment">@item.Payment</td>
                <td title="Sum Of O.S.">@item.Balance</td>
                <td title="Sum Of P.D.">@item.PastDue</td>
            </tr>

            totalBalance += double.Parse(item.Balance);
            totalPayment += double.Parse(item.Payment);
            totalPastDue += double.Parse(item.PastDue);



        }
        <tr>
            <td colspan="2"><h3>Grand Total </h3> </td>
            <td title="Sum Of Payment">@totalPayment</td>
            <td title="Sum Of O.S.">@totalBalance</td>
            <td title="Sum Of P.D.">@totalPastDue</td>
        </tr>
        @{
        totalPayment = 0;
        totalBalance = 0;
        totalPastDue = 0;
        }





    </table>

}
        </div>
            
            
            
            
            
            
            
            
            
            
            
            
            
    }
    
    
    
    
    
    
    
    
    
        }

    </div>
}
