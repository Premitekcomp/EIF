//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TMS.AppDataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ClinicReception")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ClinicReception : global::System.Data.DataSet {
        
        private Grid_ClinicTimeTableDataTable tableGrid_ClinicTimeTable;
        
        private RreservationGridDataTable tableRreservationGrid;
        
        private Clinic_Bsk_ReservationTableDataTable tableClinic_Bsk_ReservationTable;
        
        private ClinicDoctorsLinkDataTable tableClinicDoctorsLink;
        
        private ClinicListGridDataTable tableClinicListGrid;
        
        private DoctorDegreeDataTable tableDoctorDegree;
        
        private Clinic_Lup_MedicalDgreeListDataTable tableClinic_Lup_MedicalDgreeList;
        
        private RecepitionFinTransViewDataTable tableRecepitionFinTransView;
        
        private Combo_ReceptionDRListDataTable tableCombo_ReceptionDRList;
        
        private GridPullSamplesDataTable tableGridPullSamples;
        
        private CountPatientDataTable tableCountPatient;
        
        private GridExaminationSerialDataTable tableGridExaminationSerial;
        
        private Inv_ItemsDataTable tableInv_Items;
        
        private DrListforRefDataTable tableDrListforRef;
        
        private EMR_PF_BasicDataTable tableEMR_PF_Basic;
        
        private RreservationGrid1DataTable tableRreservationGrid1;
        
        private Clinic_Reservation_Lup_HourSlotDataTable tableClinic_Reservation_Lup_HourSlot;
        
        private global::System.Data.DataRelation relationFK_Msk_ReservationTable_Bsk_ClinicList;
        
        private global::System.Data.DataRelation relationFK_Msk_ReservationTable_Bsk_ClinicList1;
        
        private global::System.Data.DataRelation relationFK_Msk_ReservationTable_Bsk_ClinicList2;
        
        private global::System.Data.DataRelation relationFK_Msk_ReservationTable_EMR_PF_Basic;
        
        private global::System.Data.DataRelation relationFK_Msk_ReservationTable_Bsk_ClinicList3;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ClinicReception() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ClinicReception(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Grid_ClinicTimeTable"] != null)) {
                    base.Tables.Add(new Grid_ClinicTimeTableDataTable(ds.Tables["Grid_ClinicTimeTable"]));
                }
                if ((ds.Tables["RreservationGrid"] != null)) {
                    base.Tables.Add(new RreservationGridDataTable(ds.Tables["RreservationGrid"]));
                }
                if ((ds.Tables["Clinic_Bsk_ReservationTable"] != null)) {
                    base.Tables.Add(new Clinic_Bsk_ReservationTableDataTable(ds.Tables["Clinic_Bsk_ReservationTable"]));
                }
                if ((ds.Tables["ClinicDoctorsLink"] != null)) {
                    base.Tables.Add(new ClinicDoctorsLinkDataTable(ds.Tables["ClinicDoctorsLink"]));
                }
                if ((ds.Tables["ClinicListGrid"] != null)) {
                    base.Tables.Add(new ClinicListGridDataTable(ds.Tables["ClinicListGrid"]));
                }
                if ((ds.Tables["DoctorDegree"] != null)) {
                    base.Tables.Add(new DoctorDegreeDataTable(ds.Tables["DoctorDegree"]));
                }
                if ((ds.Tables["Clinic_Lup_MedicalDgreeList"] != null)) {
                    base.Tables.Add(new Clinic_Lup_MedicalDgreeListDataTable(ds.Tables["Clinic_Lup_MedicalDgreeList"]));
                }
                if ((ds.Tables["RecepitionFinTransView"] != null)) {
                    base.Tables.Add(new RecepitionFinTransViewDataTable(ds.Tables["RecepitionFinTransView"]));
                }
                if ((ds.Tables["Combo_ReceptionDRList"] != null)) {
                    base.Tables.Add(new Combo_ReceptionDRListDataTable(ds.Tables["Combo_ReceptionDRList"]));
                }
                if ((ds.Tables["GridPullSamples"] != null)) {
                    base.Tables.Add(new GridPullSamplesDataTable(ds.Tables["GridPullSamples"]));
                }
                if ((ds.Tables["CountPatient"] != null)) {
                    base.Tables.Add(new CountPatientDataTable(ds.Tables["CountPatient"]));
                }
                if ((ds.Tables["GridExaminationSerial"] != null)) {
                    base.Tables.Add(new GridExaminationSerialDataTable(ds.Tables["GridExaminationSerial"]));
                }
                if ((ds.Tables["Inv_Items"] != null)) {
                    base.Tables.Add(new Inv_ItemsDataTable(ds.Tables["Inv_Items"]));
                }
                if ((ds.Tables["DrListforRef"] != null)) {
                    base.Tables.Add(new DrListforRefDataTable(ds.Tables["DrListforRef"]));
                }
                if ((ds.Tables["EMR_PF_Basic"] != null)) {
                    base.Tables.Add(new EMR_PF_BasicDataTable(ds.Tables["EMR_PF_Basic"]));
                }
                if ((ds.Tables["RreservationGrid1"] != null)) {
                    base.Tables.Add(new RreservationGrid1DataTable(ds.Tables["RreservationGrid1"]));
                }
                if ((ds.Tables["Clinic_Reservation_Lup_HourSlot"] != null)) {
                    base.Tables.Add(new Clinic_Reservation_Lup_HourSlotDataTable(ds.Tables["Clinic_Reservation_Lup_HourSlot"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Grid_ClinicTimeTableDataTable Grid_ClinicTimeTable {
            get {
                return this.tableGrid_ClinicTimeTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RreservationGridDataTable RreservationGrid {
            get {
                return this.tableRreservationGrid;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Clinic_Bsk_ReservationTableDataTable Clinic_Bsk_ReservationTable {
            get {
                return this.tableClinic_Bsk_ReservationTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClinicDoctorsLinkDataTable ClinicDoctorsLink {
            get {
                return this.tableClinicDoctorsLink;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClinicListGridDataTable ClinicListGrid {
            get {
                return this.tableClinicListGrid;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DoctorDegreeDataTable DoctorDegree {
            get {
                return this.tableDoctorDegree;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Clinic_Lup_MedicalDgreeListDataTable Clinic_Lup_MedicalDgreeList {
            get {
                return this.tableClinic_Lup_MedicalDgreeList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RecepitionFinTransViewDataTable RecepitionFinTransView {
            get {
                return this.tableRecepitionFinTransView;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Combo_ReceptionDRListDataTable Combo_ReceptionDRList {
            get {
                return this.tableCombo_ReceptionDRList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GridPullSamplesDataTable GridPullSamples {
            get {
                return this.tableGridPullSamples;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CountPatientDataTable CountPatient {
            get {
                return this.tableCountPatient;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GridExaminationSerialDataTable GridExaminationSerial {
            get {
                return this.tableGridExaminationSerial;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Inv_ItemsDataTable Inv_Items {
            get {
                return this.tableInv_Items;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DrListforRefDataTable DrListforRef {
            get {
                return this.tableDrListforRef;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EMR_PF_BasicDataTable EMR_PF_Basic {
            get {
                return this.tableEMR_PF_Basic;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RreservationGrid1DataTable RreservationGrid1 {
            get {
                return this.tableRreservationGrid1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Clinic_Reservation_Lup_HourSlotDataTable Clinic_Reservation_Lup_HourSlot {
            get {
                return this.tableClinic_Reservation_Lup_HourSlot;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ClinicReception cln = ((ClinicReception)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Grid_ClinicTimeTable"] != null)) {
                    base.Tables.Add(new Grid_ClinicTimeTableDataTable(ds.Tables["Grid_ClinicTimeTable"]));
                }
                if ((ds.Tables["RreservationGrid"] != null)) {
                    base.Tables.Add(new RreservationGridDataTable(ds.Tables["RreservationGrid"]));
                }
                if ((ds.Tables["Clinic_Bsk_ReservationTable"] != null)) {
                    base.Tables.Add(new Clinic_Bsk_ReservationTableDataTable(ds.Tables["Clinic_Bsk_ReservationTable"]));
                }
                if ((ds.Tables["ClinicDoctorsLink"] != null)) {
                    base.Tables.Add(new ClinicDoctorsLinkDataTable(ds.Tables["ClinicDoctorsLink"]));
                }
                if ((ds.Tables["ClinicListGrid"] != null)) {
                    base.Tables.Add(new ClinicListGridDataTable(ds.Tables["ClinicListGrid"]));
                }
                if ((ds.Tables["DoctorDegree"] != null)) {
                    base.Tables.Add(new DoctorDegreeDataTable(ds.Tables["DoctorDegree"]));
                }
                if ((ds.Tables["Clinic_Lup_MedicalDgreeList"] != null)) {
                    base.Tables.Add(new Clinic_Lup_MedicalDgreeListDataTable(ds.Tables["Clinic_Lup_MedicalDgreeList"]));
                }
                if ((ds.Tables["RecepitionFinTransView"] != null)) {
                    base.Tables.Add(new RecepitionFinTransViewDataTable(ds.Tables["RecepitionFinTransView"]));
                }
                if ((ds.Tables["Combo_ReceptionDRList"] != null)) {
                    base.Tables.Add(new Combo_ReceptionDRListDataTable(ds.Tables["Combo_ReceptionDRList"]));
                }
                if ((ds.Tables["GridPullSamples"] != null)) {
                    base.Tables.Add(new GridPullSamplesDataTable(ds.Tables["GridPullSamples"]));
                }
                if ((ds.Tables["CountPatient"] != null)) {
                    base.Tables.Add(new CountPatientDataTable(ds.Tables["CountPatient"]));
                }
                if ((ds.Tables["GridExaminationSerial"] != null)) {
                    base.Tables.Add(new GridExaminationSerialDataTable(ds.Tables["GridExaminationSerial"]));
                }
                if ((ds.Tables["Inv_Items"] != null)) {
                    base.Tables.Add(new Inv_ItemsDataTable(ds.Tables["Inv_Items"]));
                }
                if ((ds.Tables["DrListforRef"] != null)) {
                    base.Tables.Add(new DrListforRefDataTable(ds.Tables["DrListforRef"]));
                }
                if ((ds.Tables["EMR_PF_Basic"] != null)) {
                    base.Tables.Add(new EMR_PF_BasicDataTable(ds.Tables["EMR_PF_Basic"]));
                }
                if ((ds.Tables["RreservationGrid1"] != null)) {
                    base.Tables.Add(new RreservationGrid1DataTable(ds.Tables["RreservationGrid1"]));
                }
                if ((ds.Tables["Clinic_Reservation_Lup_HourSlot"] != null)) {
                    base.Tables.Add(new Clinic_Reservation_Lup_HourSlotDataTable(ds.Tables["Clinic_Reservation_Lup_HourSlot"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableGrid_ClinicTimeTable = ((Grid_ClinicTimeTableDataTable)(base.Tables["Grid_ClinicTimeTable"]));
            if ((initTable == true)) {
                if ((this.tableGrid_ClinicTimeTable != null)) {
                    this.tableGrid_ClinicTimeTable.InitVars();
                }
            }
            this.tableRreservationGrid = ((RreservationGridDataTable)(base.Tables["RreservationGrid"]));
            if ((initTable == true)) {
                if ((this.tableRreservationGrid != null)) {
                    this.tableRreservationGrid.InitVars();
                }
            }
            this.tableClinic_Bsk_ReservationTable = ((Clinic_Bsk_ReservationTableDataTable)(base.Tables["Clinic_Bsk_ReservationTable"]));
            if ((initTable == true)) {
                if ((this.tableClinic_Bsk_ReservationTable != null)) {
                    this.tableClinic_Bsk_ReservationTable.InitVars();
                }
            }
            this.tableClinicDoctorsLink = ((ClinicDoctorsLinkDataTable)(base.Tables["ClinicDoctorsLink"]));
            if ((initTable == true)) {
                if ((this.tableClinicDoctorsLink != null)) {
                    this.tableClinicDoctorsLink.InitVars();
                }
            }
            this.tableClinicListGrid = ((ClinicListGridDataTable)(base.Tables["ClinicListGrid"]));
            if ((initTable == true)) {
                if ((this.tableClinicListGrid != null)) {
                    this.tableClinicListGrid.InitVars();
                }
            }
            this.tableDoctorDegree = ((DoctorDegreeDataTable)(base.Tables["DoctorDegree"]));
            if ((initTable == true)) {
                if ((this.tableDoctorDegree != null)) {
                    this.tableDoctorDegree.InitVars();
                }
            }
            this.tableClinic_Lup_MedicalDgreeList = ((Clinic_Lup_MedicalDgreeListDataTable)(base.Tables["Clinic_Lup_MedicalDgreeList"]));
            if ((initTable == true)) {
                if ((this.tableClinic_Lup_MedicalDgreeList != null)) {
                    this.tableClinic_Lup_MedicalDgreeList.InitVars();
                }
            }
            this.tableRecepitionFinTransView = ((RecepitionFinTransViewDataTable)(base.Tables["RecepitionFinTransView"]));
            if ((initTable == true)) {
                if ((this.tableRecepitionFinTransView != null)) {
                    this.tableRecepitionFinTransView.InitVars();
                }
            }
            this.tableCombo_ReceptionDRList = ((Combo_ReceptionDRListDataTable)(base.Tables["Combo_ReceptionDRList"]));
            if ((initTable == true)) {
                if ((this.tableCombo_ReceptionDRList != null)) {
                    this.tableCombo_ReceptionDRList.InitVars();
                }
            }
            this.tableGridPullSamples = ((GridPullSamplesDataTable)(base.Tables["GridPullSamples"]));
            if ((initTable == true)) {
                if ((this.tableGridPullSamples != null)) {
                    this.tableGridPullSamples.InitVars();
                }
            }
            this.tableCountPatient = ((CountPatientDataTable)(base.Tables["CountPatient"]));
            if ((initTable == true)) {
                if ((this.tableCountPatient != null)) {
                    this.tableCountPatient.InitVars();
                }
            }
            this.tableGridExaminationSerial = ((GridExaminationSerialDataTable)(base.Tables["GridExaminationSerial"]));
            if ((initTable == true)) {
                if ((this.tableGridExaminationSerial != null)) {
                    this.tableGridExaminationSerial.InitVars();
                }
            }
            this.tableInv_Items = ((Inv_ItemsDataTable)(base.Tables["Inv_Items"]));
            if ((initTable == true)) {
                if ((this.tableInv_Items != null)) {
                    this.tableInv_Items.InitVars();
                }
            }
            this.tableDrListforRef = ((DrListforRefDataTable)(base.Tables["DrListforRef"]));
            if ((initTable == true)) {
                if ((this.tableDrListforRef != null)) {
                    this.tableDrListforRef.InitVars();
                }
            }
            this.tableEMR_PF_Basic = ((EMR_PF_BasicDataTable)(base.Tables["EMR_PF_Basic"]));
            if ((initTable == true)) {
                if ((this.tableEMR_PF_Basic != null)) {
                    this.tableEMR_PF_Basic.InitVars();
                }
            }
            this.tableRreservationGrid1 = ((RreservationGrid1DataTable)(base.Tables["RreservationGrid1"]));
            if ((initTable == true)) {
                if ((this.tableRreservationGrid1 != null)) {
                    this.tableRreservationGrid1.InitVars();
                }
            }
            this.tableClinic_Reservation_Lup_HourSlot = ((Clinic_Reservation_Lup_HourSlotDataTable)(base.Tables["Clinic_Reservation_Lup_HourSlot"]));
            if ((initTable == true)) {
                if ((this.tableClinic_Reservation_Lup_HourSlot != null)) {
                    this.tableClinic_Reservation_Lup_HourSlot.InitVars();
                }
            }
            this.relationFK_Msk_ReservationTable_Bsk_ClinicList = this.Relations["FK_Msk_ReservationTable_Bsk_ClinicList"];
            this.relationFK_Msk_ReservationTable_Bsk_ClinicList1 = this.Relations["FK_Msk_ReservationTable_Bsk_ClinicList1"];
            this.relationFK_Msk_ReservationTable_Bsk_ClinicList2 = this.Relations["FK_Msk_ReservationTable_Bsk_ClinicList2"];
            this.relationFK_Msk_ReservationTable_EMR_PF_Basic = this.Relations["FK_Msk_ReservationTable_EMR_PF_Basic"];
            this.relationFK_Msk_ReservationTable_Bsk_ClinicList3 = this.Relations["FK_Msk_ReservationTable_Bsk_ClinicList3"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ClinicReception";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ClinicReception.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGrid_ClinicTimeTable = new Grid_ClinicTimeTableDataTable();
            base.Tables.Add(this.tableGrid_ClinicTimeTable);
            this.tableRreservationGrid = new RreservationGridDataTable();
            base.Tables.Add(this.tableRreservationGrid);
            this.tableClinic_Bsk_ReservationTable = new Clinic_Bsk_ReservationTableDataTable();
            base.Tables.Add(this.tableClinic_Bsk_ReservationTable);
            this.tableClinicDoctorsLink = new ClinicDoctorsLinkDataTable();
            base.Tables.Add(this.tableClinicDoctorsLink);
            this.tableClinicListGrid = new ClinicListGridDataTable();
            base.Tables.Add(this.tableClinicListGrid);
            this.tableDoctorDegree = new DoctorDegreeDataTable();
            base.Tables.Add(this.tableDoctorDegree);
            this.tableClinic_Lup_MedicalDgreeList = new Clinic_Lup_MedicalDgreeListDataTable();
            base.Tables.Add(this.tableClinic_Lup_MedicalDgreeList);
            this.tableRecepitionFinTransView = new RecepitionFinTransViewDataTable();
            base.Tables.Add(this.tableRecepitionFinTransView);
            this.tableCombo_ReceptionDRList = new Combo_ReceptionDRListDataTable();
            base.Tables.Add(this.tableCombo_ReceptionDRList);
            this.tableGridPullSamples = new GridPullSamplesDataTable();
            base.Tables.Add(this.tableGridPullSamples);
            this.tableCountPatient = new CountPatientDataTable();
            base.Tables.Add(this.tableCountPatient);
            this.tableGridExaminationSerial = new GridExaminationSerialDataTable();
            base.Tables.Add(this.tableGridExaminationSerial);
            this.tableInv_Items = new Inv_ItemsDataTable();
            base.Tables.Add(this.tableInv_Items);
            this.tableDrListforRef = new DrListforRefDataTable();
            base.Tables.Add(this.tableDrListforRef);
            this.tableEMR_PF_Basic = new EMR_PF_BasicDataTable();
            base.Tables.Add(this.tableEMR_PF_Basic);
            this.tableRreservationGrid1 = new RreservationGrid1DataTable();
            base.Tables.Add(this.tableRreservationGrid1);
            this.tableClinic_Reservation_Lup_HourSlot = new Clinic_Reservation_Lup_HourSlotDataTable();
            base.Tables.Add(this.tableClinic_Reservation_Lup_HourSlot);
            this.relationFK_Msk_ReservationTable_Bsk_ClinicList = new global::System.Data.DataRelation("FK_Msk_ReservationTable_Bsk_ClinicList", new global::System.Data.DataColumn[] {
                        this.tableClinicDoctorsLink.ClinicIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableClinic_Bsk_ReservationTable.ClinicIDColumn}, false);
            this.Relations.Add(this.relationFK_Msk_ReservationTable_Bsk_ClinicList);
            this.relationFK_Msk_ReservationTable_Bsk_ClinicList1 = new global::System.Data.DataRelation("FK_Msk_ReservationTable_Bsk_ClinicList1", new global::System.Data.DataColumn[] {
                        this.tableRreservationGrid.ClinicIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableClinic_Bsk_ReservationTable.ClinicIDColumn}, false);
            this.Relations.Add(this.relationFK_Msk_ReservationTable_Bsk_ClinicList1);
            this.relationFK_Msk_ReservationTable_Bsk_ClinicList2 = new global::System.Data.DataRelation("FK_Msk_ReservationTable_Bsk_ClinicList2", new global::System.Data.DataColumn[] {
                        this.tableClinicListGrid.ClinicIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableClinic_Bsk_ReservationTable.ClinicIDColumn}, false);
            this.Relations.Add(this.relationFK_Msk_ReservationTable_Bsk_ClinicList2);
            this.relationFK_Msk_ReservationTable_EMR_PF_Basic = new global::System.Data.DataRelation("FK_Msk_ReservationTable_EMR_PF_Basic", new global::System.Data.DataColumn[] {
                        this.tableEMR_PF_Basic.RecordIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableClinic_Bsk_ReservationTable.PIDColumn}, false);
            this.Relations.Add(this.relationFK_Msk_ReservationTable_EMR_PF_Basic);
            this.relationFK_Msk_ReservationTable_Bsk_ClinicList3 = new global::System.Data.DataRelation("FK_Msk_ReservationTable_Bsk_ClinicList3", new global::System.Data.DataColumn[] {
                        this.tableRreservationGrid1.ClinicIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableClinic_Bsk_ReservationTable.ClinicIDColumn}, false);
            this.Relations.Add(this.relationFK_Msk_ReservationTable_Bsk_ClinicList3);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGrid_ClinicTimeTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRreservationGrid() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeClinic_Bsk_ReservationTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeClinicDoctorsLink() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeClinicListGrid() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDoctorDegree() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeClinic_Lup_MedicalDgreeList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRecepitionFinTransView() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCombo_ReceptionDRList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGridPullSamples() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCountPatient() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGridExaminationSerial() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeInv_Items() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDrListforRef() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEMR_PF_Basic() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRreservationGrid1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeClinic_Reservation_Lup_HourSlot() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ClinicReception ds = new ClinicReception();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Grid_ClinicTimeTableRowChangeEventHandler(object sender, Grid_ClinicTimeTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RreservationGridRowChangeEventHandler(object sender, RreservationGridRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Clinic_Bsk_ReservationTableRowChangeEventHandler(object sender, Clinic_Bsk_ReservationTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ClinicDoctorsLinkRowChangeEventHandler(object sender, ClinicDoctorsLinkRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ClinicListGridRowChangeEventHandler(object sender, ClinicListGridRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DoctorDegreeRowChangeEventHandler(object sender, DoctorDegreeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Clinic_Lup_MedicalDgreeListRowChangeEventHandler(object sender, Clinic_Lup_MedicalDgreeListRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RecepitionFinTransViewRowChangeEventHandler(object sender, RecepitionFinTransViewRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Combo_ReceptionDRListRowChangeEventHandler(object sender, Combo_ReceptionDRListRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GridPullSamplesRowChangeEventHandler(object sender, GridPullSamplesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CountPatientRowChangeEventHandler(object sender, CountPatientRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GridExaminationSerialRowChangeEventHandler(object sender, GridExaminationSerialRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Inv_ItemsRowChangeEventHandler(object sender, Inv_ItemsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DrListforRefRowChangeEventHandler(object sender, DrListforRefRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EMR_PF_BasicRowChangeEventHandler(object sender, EMR_PF_BasicRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RreservationGrid1RowChangeEventHandler(object sender, RreservationGrid1RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Clinic_Reservation_Lup_HourSlotRowChangeEventHandler(object sender, Clinic_Reservation_Lup_HourSlotRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Grid_ClinicTimeTableDataTable : global::System.Data.TypedTableBase<Grid_ClinicTimeTableRow> {
            
            private global::System.Data.DataColumn columnRecordSerial;
            
            private global::System.Data.DataColumn columnClinicID;
            
            private global::System.Data.DataColumn columnClinicTitle;
            
            private global::System.Data.DataColumn columnDrID;
            
            private global::System.Data.DataColumn columnDrName;
            
            private global::System.Data.DataColumn columnMedicalDgreeTitle;
            
            private global::System.Data.DataColumn columnTimeFragment;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnAvalableDates;
            
            private global::System.Data.DataColumn columnNotes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Grid_ClinicTimeTableDataTable() {
                this.TableName = "Grid_ClinicTimeTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Grid_ClinicTimeTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Grid_ClinicTimeTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecordSerialColumn {
                get {
                    return this.columnRecordSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClinicIDColumn {
                get {
                    return this.columnClinicID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClinicTitleColumn {
                get {
                    return this.columnClinicTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrIDColumn {
                get {
                    return this.columnDrID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrNameColumn {
                get {
                    return this.columnDrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MedicalDgreeTitleColumn {
                get {
                    return this.columnMedicalDgreeTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimeFragmentColumn {
                get {
                    return this.columnTimeFragment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AvalableDatesColumn {
                get {
                    return this.columnAvalableDates;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Grid_ClinicTimeTableRow this[int index] {
                get {
                    return ((Grid_ClinicTimeTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Grid_ClinicTimeTableRowChangeEventHandler Grid_ClinicTimeTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Grid_ClinicTimeTableRowChangeEventHandler Grid_ClinicTimeTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Grid_ClinicTimeTableRowChangeEventHandler Grid_ClinicTimeTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Grid_ClinicTimeTableRowChangeEventHandler Grid_ClinicTimeTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGrid_ClinicTimeTableRow(Grid_ClinicTimeTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Grid_ClinicTimeTableRow AddGrid_ClinicTimeTableRow(byte ClinicID, string ClinicTitle, short DrID, string DrName, string MedicalDgreeTitle, string TimeFragment, bool IsDeleted, string AvalableDates, string Notes) {
                Grid_ClinicTimeTableRow rowGrid_ClinicTimeTableRow = ((Grid_ClinicTimeTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ClinicID,
                        ClinicTitle,
                        DrID,
                        DrName,
                        MedicalDgreeTitle,
                        TimeFragment,
                        IsDeleted,
                        AvalableDates,
                        Notes};
                rowGrid_ClinicTimeTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGrid_ClinicTimeTableRow);
                return rowGrid_ClinicTimeTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Grid_ClinicTimeTableRow FindByRecordSerial(short RecordSerial) {
                return ((Grid_ClinicTimeTableRow)(this.Rows.Find(new object[] {
                            RecordSerial})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Grid_ClinicTimeTableDataTable cln = ((Grid_ClinicTimeTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Grid_ClinicTimeTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRecordSerial = base.Columns["RecordSerial"];
                this.columnClinicID = base.Columns["ClinicID"];
                this.columnClinicTitle = base.Columns["ClinicTitle"];
                this.columnDrID = base.Columns["DrID"];
                this.columnDrName = base.Columns["DrName"];
                this.columnMedicalDgreeTitle = base.Columns["MedicalDgreeTitle"];
                this.columnTimeFragment = base.Columns["TimeFragment"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnAvalableDates = base.Columns["AvalableDates"];
                this.columnNotes = base.Columns["Notes"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRecordSerial = new global::System.Data.DataColumn("RecordSerial", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordSerial);
                this.columnClinicID = new global::System.Data.DataColumn("ClinicID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClinicID);
                this.columnClinicTitle = new global::System.Data.DataColumn("ClinicTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClinicTitle);
                this.columnDrID = new global::System.Data.DataColumn("DrID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrID);
                this.columnDrName = new global::System.Data.DataColumn("DrName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrName);
                this.columnMedicalDgreeTitle = new global::System.Data.DataColumn("MedicalDgreeTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicalDgreeTitle);
                this.columnTimeFragment = new global::System.Data.DataColumn("TimeFragment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeFragment);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnAvalableDates = new global::System.Data.DataColumn("AvalableDates", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAvalableDates);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRecordSerial}, true));
                this.columnRecordSerial.AutoIncrement = true;
                this.columnRecordSerial.AutoIncrementSeed = -1;
                this.columnRecordSerial.AutoIncrementStep = -1;
                this.columnRecordSerial.AllowDBNull = false;
                this.columnRecordSerial.ReadOnly = true;
                this.columnRecordSerial.Unique = true;
                this.columnClinicTitle.MaxLength = 50;
                this.columnDrName.AllowDBNull = false;
                this.columnDrName.MaxLength = 50;
                this.columnMedicalDgreeTitle.AllowDBNull = false;
                this.columnMedicalDgreeTitle.MaxLength = 50;
                this.columnTimeFragment.MaxLength = 2147483647;
                this.columnIsDeleted.AllowDBNull = false;
                this.columnAvalableDates.MaxLength = 2147483647;
                this.columnNotes.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Grid_ClinicTimeTableRow NewGrid_ClinicTimeTableRow() {
                return ((Grid_ClinicTimeTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Grid_ClinicTimeTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Grid_ClinicTimeTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Grid_ClinicTimeTableRowChanged != null)) {
                    this.Grid_ClinicTimeTableRowChanged(this, new Grid_ClinicTimeTableRowChangeEvent(((Grid_ClinicTimeTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Grid_ClinicTimeTableRowChanging != null)) {
                    this.Grid_ClinicTimeTableRowChanging(this, new Grid_ClinicTimeTableRowChangeEvent(((Grid_ClinicTimeTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Grid_ClinicTimeTableRowDeleted != null)) {
                    this.Grid_ClinicTimeTableRowDeleted(this, new Grid_ClinicTimeTableRowChangeEvent(((Grid_ClinicTimeTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Grid_ClinicTimeTableRowDeleting != null)) {
                    this.Grid_ClinicTimeTableRowDeleting(this, new Grid_ClinicTimeTableRowChangeEvent(((Grid_ClinicTimeTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGrid_ClinicTimeTableRow(Grid_ClinicTimeTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClinicReception ds = new ClinicReception();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Grid_ClinicTimeTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RreservationGridDataTable : global::System.Data.TypedTableBase<RreservationGridRow> {
            
            private global::System.Data.DataColumn columnRecordSerial;
            
            private global::System.Data.DataColumn columnPID;
            
            private global::System.Data.DataColumn columnPatientName;
            
            private global::System.Data.DataColumn columnDrID;
            
            private global::System.Data.DataColumn columnDrName;
            
            private global::System.Data.DataColumn columnClinicID;
            
            private global::System.Data.DataColumn columnClinicTitle;
            
            private global::System.Data.DataColumn columnVisitDate;
            
            private global::System.Data.DataColumn columnNotes;
            
            private global::System.Data.DataColumn columnIsEstshara;
            
            private global::System.Data.DataColumn columnEnterOrder;
            
            private global::System.Data.DataColumn columnIsAchived;
            
            private global::System.Data.DataColumn columnVisitCost;
            
            private global::System.Data.DataColumn columnHadPayied;
            
            private global::System.Data.DataColumn columnServiceLevelID;
            
            private global::System.Data.DataColumn columnAmountPaid;
            
            private global::System.Data.DataColumn columnAccountBalance;
            
            private global::System.Data.DataColumn columnInvoiceDetailsRecordID;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnRCDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnLADate;
            
            private global::System.Data.DataColumn columnREye;
            
            private global::System.Data.DataColumn columnLEye;
            
            private global::System.Data.DataColumn columnLate;
            
            private global::System.Data.DataColumn columnVisitDay;
            
            private global::System.Data.DataColumn columnAttended;
            
            private global::System.Data.DataColumn columnPrepared;
            
            private global::System.Data.DataColumn columnTransferd;
            
            private global::System.Data.DataColumn columnIsCurrent;
            
            private global::System.Data.DataColumn columnTakeService;
            
            private global::System.Data.DataColumn columnBookingTimeString;
            
            private global::System.Data.DataColumn columnSubServiceName;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnPFileID;
            
            private global::System.Data.DataColumn columnProfileNotes;
            
            private global::System.Data.DataColumn columnOldID;
            
            private global::System.Data.DataColumn columnArchiveLocation;
            
            private global::System.Data.DataColumn columnGetFile;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnHourSlotTitle;
            
            private global::System.Data.DataColumn columnAccountTitle;
            
            private global::System.Data.DataColumn columnAttendTime;
            
            private global::System.Data.DataColumn columnAttendOrder;
            
            private global::System.Data.DataColumn columnPaiedString;
            
            private global::System.Data.DataColumn columnDailyTransSerial;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RreservationGridDataTable() {
                this.TableName = "RreservationGrid";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RreservationGridDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RreservationGridDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecordSerialColumn {
                get {
                    return this.columnRecordSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PIDColumn {
                get {
                    return this.columnPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientNameColumn {
                get {
                    return this.columnPatientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrIDColumn {
                get {
                    return this.columnDrID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrNameColumn {
                get {
                    return this.columnDrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClinicIDColumn {
                get {
                    return this.columnClinicID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClinicTitleColumn {
                get {
                    return this.columnClinicTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitDateColumn {
                get {
                    return this.columnVisitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsEstsharaColumn {
                get {
                    return this.columnIsEstshara;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnterOrderColumn {
                get {
                    return this.columnEnterOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsAchivedColumn {
                get {
                    return this.columnIsAchived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitCostColumn {
                get {
                    return this.columnVisitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HadPayiedColumn {
                get {
                    return this.columnHadPayied;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceLevelIDColumn {
                get {
                    return this.columnServiceLevelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountPaidColumn {
                get {
                    return this.columnAmountPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountBalanceColumn {
                get {
                    return this.columnAccountBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceDetailsRecordIDColumn {
                get {
                    return this.columnInvoiceDetailsRecordID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RCDateColumn {
                get {
                    return this.columnRCDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LADateColumn {
                get {
                    return this.columnLADate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REyeColumn {
                get {
                    return this.columnREye;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LEyeColumn {
                get {
                    return this.columnLEye;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LateColumn {
                get {
                    return this.columnLate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitDayColumn {
                get {
                    return this.columnVisitDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttendedColumn {
                get {
                    return this.columnAttended;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PreparedColumn {
                get {
                    return this.columnPrepared;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransferdColumn {
                get {
                    return this.columnTransferd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsCurrentColumn {
                get {
                    return this.columnIsCurrent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TakeServiceColumn {
                get {
                    return this.columnTakeService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingTimeStringColumn {
                get {
                    return this.columnBookingTimeString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubServiceNameColumn {
                get {
                    return this.columnSubServiceName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PFileIDColumn {
                get {
                    return this.columnPFileID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProfileNotesColumn {
                get {
                    return this.columnProfileNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OldIDColumn {
                get {
                    return this.columnOldID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArchiveLocationColumn {
                get {
                    return this.columnArchiveLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GetFileColumn {
                get {
                    return this.columnGetFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HourSlotTitleColumn {
                get {
                    return this.columnHourSlotTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountTitleColumn {
                get {
                    return this.columnAccountTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttendTimeColumn {
                get {
                    return this.columnAttendTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttendOrderColumn {
                get {
                    return this.columnAttendOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaiedStringColumn {
                get {
                    return this.columnPaiedString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DailyTransSerialColumn {
                get {
                    return this.columnDailyTransSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RreservationGridRow this[int index] {
                get {
                    return ((RreservationGridRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RreservationGridRowChangeEventHandler RreservationGridRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RreservationGridRowChangeEventHandler RreservationGridRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RreservationGridRowChangeEventHandler RreservationGridRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RreservationGridRowChangeEventHandler RreservationGridRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRreservationGridRow(RreservationGridRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RreservationGridRow AddRreservationGridRow(
                        long PID, 
                        string PatientName, 
                        short DrID, 
                        string DrName, 
                        byte ClinicID, 
                        string ClinicTitle, 
                        System.DateTime VisitDate, 
                        string Notes, 
                        bool IsEstshara, 
                        byte EnterOrder, 
                        bool IsAchived, 
                        decimal VisitCost, 
                        bool HadPayied, 
                        byte ServiceLevelID, 
                        decimal AmountPaid, 
                        decimal AccountBalance, 
                        int InvoiceDetailsRecordID, 
                        string CreatedBy, 
                        System.DateTime RCDate, 
                        string ModifiedBy, 
                        System.DateTime LADate, 
                        bool REye, 
                        bool LEye, 
                        decimal Late, 
                        string VisitDay, 
                        bool Attended, 
                        bool Prepared, 
                        bool Transferd, 
                        bool IsCurrent, 
                        bool TakeService, 
                        string BookingTimeString, 
                        string SubServiceName, 
                        string Age, 
                        string PFileID, 
                        string ProfileNotes, 
                        string OldID, 
                        string ArchiveLocation, 
                        bool GetFile, 
                        string Address, 
                        string HourSlotTitle, 
                        string AccountTitle, 
                        string AttendTime, 
                        short AttendOrder, 
                        string PaiedString, 
                        short DailyTransSerial) {
                RreservationGridRow rowRreservationGridRow = ((RreservationGridRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PID,
                        PatientName,
                        DrID,
                        DrName,
                        ClinicID,
                        ClinicTitle,
                        VisitDate,
                        Notes,
                        IsEstshara,
                        EnterOrder,
                        IsAchived,
                        VisitCost,
                        HadPayied,
                        ServiceLevelID,
                        AmountPaid,
                        AccountBalance,
                        InvoiceDetailsRecordID,
                        CreatedBy,
                        RCDate,
                        ModifiedBy,
                        LADate,
                        REye,
                        LEye,
                        Late,
                        VisitDay,
                        Attended,
                        Prepared,
                        Transferd,
                        IsCurrent,
                        TakeService,
                        BookingTimeString,
                        SubServiceName,
                        Age,
                        PFileID,
                        ProfileNotes,
                        OldID,
                        ArchiveLocation,
                        GetFile,
                        Address,
                        HourSlotTitle,
                        AccountTitle,
                        AttendTime,
                        AttendOrder,
                        PaiedString,
                        DailyTransSerial};
                rowRreservationGridRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRreservationGridRow);
                return rowRreservationGridRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RreservationGridRow FindByRecordSerial(int RecordSerial) {
                return ((RreservationGridRow)(this.Rows.Find(new object[] {
                            RecordSerial})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RreservationGridDataTable cln = ((RreservationGridDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RreservationGridDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRecordSerial = base.Columns["RecordSerial"];
                this.columnPID = base.Columns["PID"];
                this.columnPatientName = base.Columns["PatientName"];
                this.columnDrID = base.Columns["DrID"];
                this.columnDrName = base.Columns["DrName"];
                this.columnClinicID = base.Columns["ClinicID"];
                this.columnClinicTitle = base.Columns["ClinicTitle"];
                this.columnVisitDate = base.Columns["VisitDate"];
                this.columnNotes = base.Columns["Notes"];
                this.columnIsEstshara = base.Columns["IsEstshara"];
                this.columnEnterOrder = base.Columns["EnterOrder"];
                this.columnIsAchived = base.Columns["IsAchived"];
                this.columnVisitCost = base.Columns["VisitCost"];
                this.columnHadPayied = base.Columns["HadPayied"];
                this.columnServiceLevelID = base.Columns["ServiceLevelID"];
                this.columnAmountPaid = base.Columns["AmountPaid"];
                this.columnAccountBalance = base.Columns["AccountBalance"];
                this.columnInvoiceDetailsRecordID = base.Columns["InvoiceDetailsRecordID"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnRCDate = base.Columns["RCDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnLADate = base.Columns["LADate"];
                this.columnREye = base.Columns["REye"];
                this.columnLEye = base.Columns["LEye"];
                this.columnLate = base.Columns["Late"];
                this.columnVisitDay = base.Columns["VisitDay"];
                this.columnAttended = base.Columns["Attended"];
                this.columnPrepared = base.Columns["Prepared"];
                this.columnTransferd = base.Columns["Transferd"];
                this.columnIsCurrent = base.Columns["IsCurrent"];
                this.columnTakeService = base.Columns["TakeService"];
                this.columnBookingTimeString = base.Columns["BookingTimeString"];
                this.columnSubServiceName = base.Columns["SubServiceName"];
                this.columnAge = base.Columns["Age"];
                this.columnPFileID = base.Columns["PFileID"];
                this.columnProfileNotes = base.Columns["ProfileNotes"];
                this.columnOldID = base.Columns["OldID"];
                this.columnArchiveLocation = base.Columns["ArchiveLocation"];
                this.columnGetFile = base.Columns["GetFile"];
                this.columnAddress = base.Columns["Address"];
                this.columnHourSlotTitle = base.Columns["HourSlotTitle"];
                this.columnAccountTitle = base.Columns["AccountTitle"];
                this.columnAttendTime = base.Columns["AttendTime"];
                this.columnAttendOrder = base.Columns["AttendOrder"];
                this.columnPaiedString = base.Columns["PaiedString"];
                this.columnDailyTransSerial = base.Columns["DailyTransSerial"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRecordSerial = new global::System.Data.DataColumn("RecordSerial", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordSerial);
                this.columnPID = new global::System.Data.DataColumn("PID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPID);
                this.columnPatientName = new global::System.Data.DataColumn("PatientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientName);
                this.columnDrID = new global::System.Data.DataColumn("DrID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrID);
                this.columnDrName = new global::System.Data.DataColumn("DrName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrName);
                this.columnClinicID = new global::System.Data.DataColumn("ClinicID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClinicID);
                this.columnClinicTitle = new global::System.Data.DataColumn("ClinicTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClinicTitle);
                this.columnVisitDate = new global::System.Data.DataColumn("VisitDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitDate);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.columnIsEstshara = new global::System.Data.DataColumn("IsEstshara", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsEstshara);
                this.columnEnterOrder = new global::System.Data.DataColumn("EnterOrder", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnterOrder);
                this.columnIsAchived = new global::System.Data.DataColumn("IsAchived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAchived);
                this.columnVisitCost = new global::System.Data.DataColumn("VisitCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitCost);
                this.columnHadPayied = new global::System.Data.DataColumn("HadPayied", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHadPayied);
                this.columnServiceLevelID = new global::System.Data.DataColumn("ServiceLevelID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceLevelID);
                this.columnAmountPaid = new global::System.Data.DataColumn("AmountPaid", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountPaid);
                this.columnAccountBalance = new global::System.Data.DataColumn("AccountBalance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountBalance);
                this.columnInvoiceDetailsRecordID = new global::System.Data.DataColumn("InvoiceDetailsRecordID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceDetailsRecordID);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnRCDate = new global::System.Data.DataColumn("RCDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRCDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnLADate = new global::System.Data.DataColumn("LADate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLADate);
                this.columnREye = new global::System.Data.DataColumn("REye", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREye);
                this.columnLEye = new global::System.Data.DataColumn("LEye", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLEye);
                this.columnLate = new global::System.Data.DataColumn("Late", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLate);
                this.columnVisitDay = new global::System.Data.DataColumn("VisitDay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitDay);
                this.columnAttended = new global::System.Data.DataColumn("Attended", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttended);
                this.columnPrepared = new global::System.Data.DataColumn("Prepared", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrepared);
                this.columnTransferd = new global::System.Data.DataColumn("Transferd", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferd);
                this.columnIsCurrent = new global::System.Data.DataColumn("IsCurrent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCurrent);
                this.columnTakeService = new global::System.Data.DataColumn("TakeService", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTakeService);
                this.columnBookingTimeString = new global::System.Data.DataColumn("BookingTimeString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingTimeString);
                this.columnSubServiceName = new global::System.Data.DataColumn("SubServiceName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubServiceName);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnPFileID = new global::System.Data.DataColumn("PFileID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPFileID);
                this.columnProfileNotes = new global::System.Data.DataColumn("ProfileNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfileNotes);
                this.columnOldID = new global::System.Data.DataColumn("OldID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldID);
                this.columnArchiveLocation = new global::System.Data.DataColumn("ArchiveLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchiveLocation);
                this.columnGetFile = new global::System.Data.DataColumn("GetFile", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGetFile);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnHourSlotTitle = new global::System.Data.DataColumn("HourSlotTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHourSlotTitle);
                this.columnAccountTitle = new global::System.Data.DataColumn("AccountTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountTitle);
                this.columnAttendTime = new global::System.Data.DataColumn("AttendTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendTime);
                this.columnAttendOrder = new global::System.Data.DataColumn("AttendOrder", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendOrder);
                this.columnPaiedString = new global::System.Data.DataColumn("PaiedString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaiedString);
                this.columnDailyTransSerial = new global::System.Data.DataColumn("DailyTransSerial", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDailyTransSerial);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRecordSerial}, true));
                this.columnRecordSerial.AutoIncrement = true;
                this.columnRecordSerial.AutoIncrementSeed = -1;
                this.columnRecordSerial.AutoIncrementStep = -1;
                this.columnRecordSerial.AllowDBNull = false;
                this.columnRecordSerial.ReadOnly = true;
                this.columnRecordSerial.Unique = true;
                this.columnPatientName.AllowDBNull = false;
                this.columnPatientName.MaxLength = 2147483647;
                this.columnDrName.AllowDBNull = false;
                this.columnDrName.MaxLength = 50;
                this.columnClinicTitle.MaxLength = 50;
                this.columnNotes.MaxLength = 2147483647;
                this.columnIsEstshara.AllowDBNull = false;
                this.columnIsAchived.AllowDBNull = false;
                this.columnHadPayied.AllowDBNull = false;
                this.columnServiceLevelID.AllowDBNull = false;
                this.columnAccountBalance.ReadOnly = true;
                this.columnCreatedBy.MaxLength = 50;
                this.columnModifiedBy.MaxLength = 50;
                this.columnLate.ReadOnly = true;
                this.columnVisitDay.ReadOnly = true;
                this.columnVisitDay.MaxLength = 30;
                this.columnBookingTimeString.MaxLength = 50;
                this.columnSubServiceName.MaxLength = 2147483647;
                this.columnAge.ReadOnly = true;
                this.columnAge.MaxLength = 2147483647;
                this.columnPFileID.MaxLength = 50;
                this.columnProfileNotes.MaxLength = 2147483647;
                this.columnOldID.MaxLength = 50;
                this.columnArchiveLocation.MaxLength = 50;
                this.columnAddress.MaxLength = 500;
                this.columnHourSlotTitle.MaxLength = 50;
                this.columnAccountTitle.MaxLength = 200;
                this.columnAttendTime.ReadOnly = true;
                this.columnAttendTime.MaxLength = 15;
                this.columnPaiedString.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RreservationGridRow NewRreservationGridRow() {
                return ((RreservationGridRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RreservationGridRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RreservationGridRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RreservationGridRowChanged != null)) {
                    this.RreservationGridRowChanged(this, new RreservationGridRowChangeEvent(((RreservationGridRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RreservationGridRowChanging != null)) {
                    this.RreservationGridRowChanging(this, new RreservationGridRowChangeEvent(((RreservationGridRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RreservationGridRowDeleted != null)) {
                    this.RreservationGridRowDeleted(this, new RreservationGridRowChangeEvent(((RreservationGridRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RreservationGridRowDeleting != null)) {
                    this.RreservationGridRowDeleting(this, new RreservationGridRowChangeEvent(((RreservationGridRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRreservationGridRow(RreservationGridRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClinicReception ds = new ClinicReception();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RreservationGridDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Clinic_Bsk_ReservationTableDataTable : global::System.Data.TypedTableBase<Clinic_Bsk_ReservationTableRow> {
            
            private global::System.Data.DataColumn columnRecordSerial;
            
            private global::System.Data.DataColumn columnDrID;
            
            private global::System.Data.DataColumn columnClinicID;
            
            private global::System.Data.DataColumn columnVisitDate;
            
            private global::System.Data.DataColumn columnIsEstshara;
            
            private global::System.Data.DataColumn columnSinceInDays;
            
            private global::System.Data.DataColumn columnPID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Bsk_ReservationTableDataTable() {
                this.TableName = "Clinic_Bsk_ReservationTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Clinic_Bsk_ReservationTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Clinic_Bsk_ReservationTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecordSerialColumn {
                get {
                    return this.columnRecordSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrIDColumn {
                get {
                    return this.columnDrID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClinicIDColumn {
                get {
                    return this.columnClinicID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitDateColumn {
                get {
                    return this.columnVisitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsEstsharaColumn {
                get {
                    return this.columnIsEstshara;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SinceInDaysColumn {
                get {
                    return this.columnSinceInDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PIDColumn {
                get {
                    return this.columnPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Bsk_ReservationTableRow this[int index] {
                get {
                    return ((Clinic_Bsk_ReservationTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Clinic_Bsk_ReservationTableRowChangeEventHandler Clinic_Bsk_ReservationTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Clinic_Bsk_ReservationTableRowChangeEventHandler Clinic_Bsk_ReservationTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Clinic_Bsk_ReservationTableRowChangeEventHandler Clinic_Bsk_ReservationTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Clinic_Bsk_ReservationTableRowChangeEventHandler Clinic_Bsk_ReservationTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddClinic_Bsk_ReservationTableRow(Clinic_Bsk_ReservationTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Bsk_ReservationTableRow AddClinic_Bsk_ReservationTableRow(short DrID, ClinicDoctorsLinkRow parentClinicDoctorsLinkRowByFK_Msk_ReservationTable_Bsk_ClinicList, System.DateTime VisitDate, bool IsEstshara, int SinceInDays, EMR_PF_BasicRow parentEMR_PF_BasicRowByFK_Msk_ReservationTable_EMR_PF_Basic) {
                Clinic_Bsk_ReservationTableRow rowClinic_Bsk_ReservationTableRow = ((Clinic_Bsk_ReservationTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DrID,
                        null,
                        VisitDate,
                        IsEstshara,
                        SinceInDays,
                        null};
                if ((parentClinicDoctorsLinkRowByFK_Msk_ReservationTable_Bsk_ClinicList != null)) {
                    columnValuesArray[2] = parentClinicDoctorsLinkRowByFK_Msk_ReservationTable_Bsk_ClinicList[5];
                }
                if ((parentEMR_PF_BasicRowByFK_Msk_ReservationTable_EMR_PF_Basic != null)) {
                    columnValuesArray[6] = parentEMR_PF_BasicRowByFK_Msk_ReservationTable_EMR_PF_Basic[0];
                }
                rowClinic_Bsk_ReservationTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowClinic_Bsk_ReservationTableRow);
                return rowClinic_Bsk_ReservationTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Bsk_ReservationTableRow FindByRecordSerial(short RecordSerial) {
                return ((Clinic_Bsk_ReservationTableRow)(this.Rows.Find(new object[] {
                            RecordSerial})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Clinic_Bsk_ReservationTableDataTable cln = ((Clinic_Bsk_ReservationTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Clinic_Bsk_ReservationTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRecordSerial = base.Columns["RecordSerial"];
                this.columnDrID = base.Columns["DrID"];
                this.columnClinicID = base.Columns["ClinicID"];
                this.columnVisitDate = base.Columns["VisitDate"];
                this.columnIsEstshara = base.Columns["IsEstshara"];
                this.columnSinceInDays = base.Columns["SinceInDays"];
                this.columnPID = base.Columns["PID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRecordSerial = new global::System.Data.DataColumn("RecordSerial", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordSerial);
                this.columnDrID = new global::System.Data.DataColumn("DrID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrID);
                this.columnClinicID = new global::System.Data.DataColumn("ClinicID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClinicID);
                this.columnVisitDate = new global::System.Data.DataColumn("VisitDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitDate);
                this.columnIsEstshara = new global::System.Data.DataColumn("IsEstshara", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsEstshara);
                this.columnSinceInDays = new global::System.Data.DataColumn("SinceInDays", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSinceInDays);
                this.columnPID = new global::System.Data.DataColumn("PID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRecordSerial}, true));
                this.columnRecordSerial.AutoIncrement = true;
                this.columnRecordSerial.AutoIncrementSeed = -1;
                this.columnRecordSerial.AutoIncrementStep = -1;
                this.columnRecordSerial.AllowDBNull = false;
                this.columnRecordSerial.ReadOnly = true;
                this.columnRecordSerial.Unique = true;
                this.columnIsEstshara.AllowDBNull = false;
                this.columnSinceInDays.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Bsk_ReservationTableRow NewClinic_Bsk_ReservationTableRow() {
                return ((Clinic_Bsk_ReservationTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Clinic_Bsk_ReservationTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Clinic_Bsk_ReservationTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Clinic_Bsk_ReservationTableRowChanged != null)) {
                    this.Clinic_Bsk_ReservationTableRowChanged(this, new Clinic_Bsk_ReservationTableRowChangeEvent(((Clinic_Bsk_ReservationTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Clinic_Bsk_ReservationTableRowChanging != null)) {
                    this.Clinic_Bsk_ReservationTableRowChanging(this, new Clinic_Bsk_ReservationTableRowChangeEvent(((Clinic_Bsk_ReservationTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Clinic_Bsk_ReservationTableRowDeleted != null)) {
                    this.Clinic_Bsk_ReservationTableRowDeleted(this, new Clinic_Bsk_ReservationTableRowChangeEvent(((Clinic_Bsk_ReservationTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Clinic_Bsk_ReservationTableRowDeleting != null)) {
                    this.Clinic_Bsk_ReservationTableRowDeleting(this, new Clinic_Bsk_ReservationTableRowChangeEvent(((Clinic_Bsk_ReservationTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveClinic_Bsk_ReservationTableRow(Clinic_Bsk_ReservationTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClinicReception ds = new ClinicReception();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Clinic_Bsk_ReservationTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ClinicDoctorsLinkDataTable : global::System.Data.TypedTableBase<ClinicDoctorsLinkRow> {
            
            private global::System.Data.DataColumn columnClinicTitle;
            
            private global::System.Data.DataColumn columnDrName;
            
            private global::System.Data.DataColumn columnVisitCost;
            
            private global::System.Data.DataColumn columnEstisharaCost;
            
            private global::System.Data.DataColumn columnEstisharaLenght;
            
            private global::System.Data.DataColumn columnClinicID;
            
            private global::System.Data.DataColumn columnDoctorID;
            
            private global::System.Data.DataColumn columnRecordSerial;
            
            private global::System.Data.DataColumn columnServiceLevelID;
            
            private global::System.Data.DataColumn columnClinic_ServiceLevelTitle;
            
            private global::System.Data.DataColumn columnHospitalShare;
            
            private global::System.Data.DataColumn columnDrShare;
            
            private global::System.Data.DataColumn columnLinkedVisitServiceID;
            
            private global::System.Data.DataColumn columnLinkedEstsharServiceID;
            
            private global::System.Data.DataColumn columnLinkedVisitServiceID1;
            
            private global::System.Data.DataColumn columnLinkedEstsharServiceID1;
            
            private global::System.Data.DataColumn columnItemOrgID;
            
            private global::System.Data.DataColumn columnVisitService;
            
            private global::System.Data.DataColumn columnEstsharaService;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClinicDoctorsLinkDataTable() {
                this.TableName = "ClinicDoctorsLink";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ClinicDoctorsLinkDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ClinicDoctorsLinkDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClinicTitleColumn {
                get {
                    return this.columnClinicTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrNameColumn {
                get {
                    return this.columnDrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitCostColumn {
                get {
                    return this.columnVisitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstisharaCostColumn {
                get {
                    return this.columnEstisharaCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstisharaLenghtColumn {
                get {
                    return this.columnEstisharaLenght;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClinicIDColumn {
                get {
                    return this.columnClinicID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DoctorIDColumn {
                get {
                    return this.columnDoctorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecordSerialColumn {
                get {
                    return this.columnRecordSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceLevelIDColumn {
                get {
                    return this.columnServiceLevelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Clinic_ServiceLevelTitleColumn {
                get {
                    return this.columnClinic_ServiceLevelTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HospitalShareColumn {
                get {
                    return this.columnHospitalShare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrShareColumn {
                get {
                    return this.columnDrShare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LinkedVisitServiceIDColumn {
                get {
                    return this.columnLinkedVisitServiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LinkedEstsharServiceIDColumn {
                get {
                    return this.columnLinkedEstsharServiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LinkedVisitServiceID1Column {
                get {
                    return this.columnLinkedVisitServiceID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LinkedEstsharServiceID1Column {
                get {
                    return this.columnLinkedEstsharServiceID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemOrgIDColumn {
                get {
                    return this.columnItemOrgID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitServiceColumn {
                get {
                    return this.columnVisitService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstsharaServiceColumn {
                get {
                    return this.columnEstsharaService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClinicDoctorsLinkRow this[int index] {
                get {
                    return ((ClinicDoctorsLinkRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClinicDoctorsLinkRowChangeEventHandler ClinicDoctorsLinkRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClinicDoctorsLinkRowChangeEventHandler ClinicDoctorsLinkRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClinicDoctorsLinkRowChangeEventHandler ClinicDoctorsLinkRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClinicDoctorsLinkRowChangeEventHandler ClinicDoctorsLinkRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddClinicDoctorsLinkRow(ClinicDoctorsLinkRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClinicDoctorsLinkRow AddClinicDoctorsLinkRow(
                        string ClinicTitle, 
                        string DrName, 
                        decimal VisitCost, 
                        decimal EstisharaCost, 
                        byte EstisharaLenght, 
                        byte ClinicID, 
                        short DoctorID, 
                        byte ServiceLevelID, 
                        string Clinic_ServiceLevelTitle, 
                        decimal HospitalShare, 
                        decimal DrShare, 
                        short LinkedVisitServiceID, 
                        short LinkedEstsharServiceID, 
                        int LinkedVisitServiceID1, 
                        int LinkedEstsharServiceID1, 
                        int ItemOrgID, 
                        string VisitService, 
                        string EstsharaService) {
                ClinicDoctorsLinkRow rowClinicDoctorsLinkRow = ((ClinicDoctorsLinkRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ClinicTitle,
                        DrName,
                        VisitCost,
                        EstisharaCost,
                        EstisharaLenght,
                        ClinicID,
                        DoctorID,
                        null,
                        ServiceLevelID,
                        Clinic_ServiceLevelTitle,
                        HospitalShare,
                        DrShare,
                        LinkedVisitServiceID,
                        LinkedEstsharServiceID,
                        LinkedVisitServiceID1,
                        LinkedEstsharServiceID1,
                        ItemOrgID,
                        VisitService,
                        EstsharaService};
                rowClinicDoctorsLinkRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowClinicDoctorsLinkRow);
                return rowClinicDoctorsLinkRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClinicDoctorsLinkRow FindByRecordSerial(short RecordSerial) {
                return ((ClinicDoctorsLinkRow)(this.Rows.Find(new object[] {
                            RecordSerial})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ClinicDoctorsLinkDataTable cln = ((ClinicDoctorsLinkDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ClinicDoctorsLinkDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnClinicTitle = base.Columns["ClinicTitle"];
                this.columnDrName = base.Columns["DrName"];
                this.columnVisitCost = base.Columns["VisitCost"];
                this.columnEstisharaCost = base.Columns["EstisharaCost"];
                this.columnEstisharaLenght = base.Columns["EstisharaLenght"];
                this.columnClinicID = base.Columns["ClinicID"];
                this.columnDoctorID = base.Columns["DoctorID"];
                this.columnRecordSerial = base.Columns["RecordSerial"];
                this.columnServiceLevelID = base.Columns["ServiceLevelID"];
                this.columnClinic_ServiceLevelTitle = base.Columns["Clinic_ServiceLevelTitle"];
                this.columnHospitalShare = base.Columns["HospitalShare"];
                this.columnDrShare = base.Columns["DrShare"];
                this.columnLinkedVisitServiceID = base.Columns["LinkedVisitServiceID"];
                this.columnLinkedEstsharServiceID = base.Columns["LinkedEstsharServiceID"];
                this.columnLinkedVisitServiceID1 = base.Columns["LinkedVisitServiceID1"];
                this.columnLinkedEstsharServiceID1 = base.Columns["LinkedEstsharServiceID1"];
                this.columnItemOrgID = base.Columns["ItemOrgID"];
                this.columnVisitService = base.Columns["VisitService"];
                this.columnEstsharaService = base.Columns["EstsharaService"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnClinicTitle = new global::System.Data.DataColumn("ClinicTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClinicTitle);
                this.columnDrName = new global::System.Data.DataColumn("DrName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrName);
                this.columnVisitCost = new global::System.Data.DataColumn("VisitCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitCost);
                this.columnEstisharaCost = new global::System.Data.DataColumn("EstisharaCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstisharaCost);
                this.columnEstisharaLenght = new global::System.Data.DataColumn("EstisharaLenght", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstisharaLenght);
                this.columnClinicID = new global::System.Data.DataColumn("ClinicID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClinicID);
                this.columnDoctorID = new global::System.Data.DataColumn("DoctorID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoctorID);
                this.columnRecordSerial = new global::System.Data.DataColumn("RecordSerial", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordSerial);
                this.columnServiceLevelID = new global::System.Data.DataColumn("ServiceLevelID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceLevelID);
                this.columnClinic_ServiceLevelTitle = new global::System.Data.DataColumn("Clinic_ServiceLevelTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClinic_ServiceLevelTitle);
                this.columnHospitalShare = new global::System.Data.DataColumn("HospitalShare", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHospitalShare);
                this.columnDrShare = new global::System.Data.DataColumn("DrShare", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrShare);
                this.columnLinkedVisitServiceID = new global::System.Data.DataColumn("LinkedVisitServiceID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkedVisitServiceID);
                this.columnLinkedEstsharServiceID = new global::System.Data.DataColumn("LinkedEstsharServiceID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkedEstsharServiceID);
                this.columnLinkedVisitServiceID1 = new global::System.Data.DataColumn("LinkedVisitServiceID1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkedVisitServiceID1);
                this.columnLinkedEstsharServiceID1 = new global::System.Data.DataColumn("LinkedEstsharServiceID1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkedEstsharServiceID1);
                this.columnItemOrgID = new global::System.Data.DataColumn("ItemOrgID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemOrgID);
                this.columnVisitService = new global::System.Data.DataColumn("VisitService", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitService);
                this.columnEstsharaService = new global::System.Data.DataColumn("EstsharaService", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstsharaService);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRecordSerial}, true));
                this.columnClinicTitle.MaxLength = 50;
                this.columnDrName.AllowDBNull = false;
                this.columnDrName.MaxLength = 50;
                this.columnVisitCost.AllowDBNull = false;
                this.columnEstisharaCost.AllowDBNull = false;
                this.columnEstisharaLenght.AllowDBNull = false;
                this.columnClinicID.AllowDBNull = false;
                this.columnClinicID.ReadOnly = true;
                this.columnDoctorID.AllowDBNull = false;
                this.columnRecordSerial.AutoIncrement = true;
                this.columnRecordSerial.AutoIncrementSeed = -1;
                this.columnRecordSerial.AutoIncrementStep = -1;
                this.columnRecordSerial.AllowDBNull = false;
                this.columnRecordSerial.ReadOnly = true;
                this.columnRecordSerial.Unique = true;
                this.columnServiceLevelID.AllowDBNull = false;
                this.columnClinic_ServiceLevelTitle.AllowDBNull = false;
                this.columnClinic_ServiceLevelTitle.MaxLength = 50;
                this.columnLinkedVisitServiceID1.Caption = "LinkedVisitServiceID";
                this.columnLinkedEstsharServiceID1.Caption = "LinkedEstsharServiceID";
                this.columnVisitService.MaxLength = 2147483647;
                this.columnEstsharaService.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClinicDoctorsLinkRow NewClinicDoctorsLinkRow() {
                return ((ClinicDoctorsLinkRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ClinicDoctorsLinkRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ClinicDoctorsLinkRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClinicDoctorsLinkRowChanged != null)) {
                    this.ClinicDoctorsLinkRowChanged(this, new ClinicDoctorsLinkRowChangeEvent(((ClinicDoctorsLinkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClinicDoctorsLinkRowChanging != null)) {
                    this.ClinicDoctorsLinkRowChanging(this, new ClinicDoctorsLinkRowChangeEvent(((ClinicDoctorsLinkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClinicDoctorsLinkRowDeleted != null)) {
                    this.ClinicDoctorsLinkRowDeleted(this, new ClinicDoctorsLinkRowChangeEvent(((ClinicDoctorsLinkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClinicDoctorsLinkRowDeleting != null)) {
                    this.ClinicDoctorsLinkRowDeleting(this, new ClinicDoctorsLinkRowChangeEvent(((ClinicDoctorsLinkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveClinicDoctorsLinkRow(ClinicDoctorsLinkRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClinicReception ds = new ClinicReception();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ClinicDoctorsLinkDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ClinicListGridDataTable : global::System.Data.TypedTableBase<ClinicListGridRow> {
            
            private global::System.Data.DataColumn columnClinicID;
            
            private global::System.Data.DataColumn columnClinicTitle;
            
            private global::System.Data.DataColumn columnShowInReception;
            
            private global::System.Data.DataColumn columnClinicIcon;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClinicListGridDataTable() {
                this.TableName = "ClinicListGrid";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ClinicListGridDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ClinicListGridDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClinicIDColumn {
                get {
                    return this.columnClinicID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClinicTitleColumn {
                get {
                    return this.columnClinicTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShowInReceptionColumn {
                get {
                    return this.columnShowInReception;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClinicIconColumn {
                get {
                    return this.columnClinicIcon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClinicListGridRow this[int index] {
                get {
                    return ((ClinicListGridRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClinicListGridRowChangeEventHandler ClinicListGridRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClinicListGridRowChangeEventHandler ClinicListGridRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClinicListGridRowChangeEventHandler ClinicListGridRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClinicListGridRowChangeEventHandler ClinicListGridRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddClinicListGridRow(ClinicListGridRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClinicListGridRow AddClinicListGridRow(byte ClinicID, string ClinicTitle, bool ShowInReception, byte[] ClinicIcon) {
                ClinicListGridRow rowClinicListGridRow = ((ClinicListGridRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ClinicID,
                        ClinicTitle,
                        ShowInReception,
                        ClinicIcon};
                rowClinicListGridRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowClinicListGridRow);
                return rowClinicListGridRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClinicListGridRow FindByClinicID(byte ClinicID) {
                return ((ClinicListGridRow)(this.Rows.Find(new object[] {
                            ClinicID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ClinicListGridDataTable cln = ((ClinicListGridDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ClinicListGridDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnClinicID = base.Columns["ClinicID"];
                this.columnClinicTitle = base.Columns["ClinicTitle"];
                this.columnShowInReception = base.Columns["ShowInReception"];
                this.columnClinicIcon = base.Columns["ClinicIcon"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnClinicID = new global::System.Data.DataColumn("ClinicID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClinicID);
                this.columnClinicTitle = new global::System.Data.DataColumn("ClinicTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClinicTitle);
                this.columnShowInReception = new global::System.Data.DataColumn("ShowInReception", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShowInReception);
                this.columnClinicIcon = new global::System.Data.DataColumn("ClinicIcon", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClinicIcon);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnClinicID}, true));
                this.columnClinicID.AllowDBNull = false;
                this.columnClinicID.ReadOnly = true;
                this.columnClinicID.Unique = true;
                this.columnClinicTitle.MaxLength = 50;
                this.columnShowInReception.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClinicListGridRow NewClinicListGridRow() {
                return ((ClinicListGridRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ClinicListGridRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ClinicListGridRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClinicListGridRowChanged != null)) {
                    this.ClinicListGridRowChanged(this, new ClinicListGridRowChangeEvent(((ClinicListGridRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClinicListGridRowChanging != null)) {
                    this.ClinicListGridRowChanging(this, new ClinicListGridRowChangeEvent(((ClinicListGridRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClinicListGridRowDeleted != null)) {
                    this.ClinicListGridRowDeleted(this, new ClinicListGridRowChangeEvent(((ClinicListGridRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClinicListGridRowDeleting != null)) {
                    this.ClinicListGridRowDeleting(this, new ClinicListGridRowChangeEvent(((ClinicListGridRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveClinicListGridRow(ClinicListGridRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClinicReception ds = new ClinicReception();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ClinicListGridDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DoctorDegreeDataTable : global::System.Data.TypedTableBase<DoctorDegreeRow> {
            
            private global::System.Data.DataColumn columnMedicalDgreeTitle;
            
            private global::System.Data.DataColumn columnDrID;
            
            private global::System.Data.DataColumn columnDrName;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DoctorDegreeDataTable() {
                this.TableName = "DoctorDegree";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DoctorDegreeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DoctorDegreeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MedicalDgreeTitleColumn {
                get {
                    return this.columnMedicalDgreeTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrIDColumn {
                get {
                    return this.columnDrID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrNameColumn {
                get {
                    return this.columnDrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DoctorDegreeRow this[int index] {
                get {
                    return ((DoctorDegreeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DoctorDegreeRowChangeEventHandler DoctorDegreeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DoctorDegreeRowChangeEventHandler DoctorDegreeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DoctorDegreeRowChangeEventHandler DoctorDegreeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DoctorDegreeRowChangeEventHandler DoctorDegreeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDoctorDegreeRow(DoctorDegreeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DoctorDegreeRow AddDoctorDegreeRow(string MedicalDgreeTitle, string DrName, bool IsDeleted) {
                DoctorDegreeRow rowDoctorDegreeRow = ((DoctorDegreeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MedicalDgreeTitle,
                        null,
                        DrName,
                        IsDeleted};
                rowDoctorDegreeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDoctorDegreeRow);
                return rowDoctorDegreeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DoctorDegreeRow FindByDrID(short DrID) {
                return ((DoctorDegreeRow)(this.Rows.Find(new object[] {
                            DrID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DoctorDegreeDataTable cln = ((DoctorDegreeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DoctorDegreeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnMedicalDgreeTitle = base.Columns["MedicalDgreeTitle"];
                this.columnDrID = base.Columns["DrID"];
                this.columnDrName = base.Columns["DrName"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnMedicalDgreeTitle = new global::System.Data.DataColumn("MedicalDgreeTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicalDgreeTitle);
                this.columnDrID = new global::System.Data.DataColumn("DrID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrID);
                this.columnDrName = new global::System.Data.DataColumn("DrName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrName);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDrID}, true));
                this.columnMedicalDgreeTitle.AllowDBNull = false;
                this.columnMedicalDgreeTitle.MaxLength = 50;
                this.columnDrID.AutoIncrement = true;
                this.columnDrID.AutoIncrementSeed = -1;
                this.columnDrID.AutoIncrementStep = -1;
                this.columnDrID.AllowDBNull = false;
                this.columnDrID.ReadOnly = true;
                this.columnDrID.Unique = true;
                this.columnDrName.AllowDBNull = false;
                this.columnDrName.MaxLength = 50;
                this.columnIsDeleted.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DoctorDegreeRow NewDoctorDegreeRow() {
                return ((DoctorDegreeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DoctorDegreeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DoctorDegreeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DoctorDegreeRowChanged != null)) {
                    this.DoctorDegreeRowChanged(this, new DoctorDegreeRowChangeEvent(((DoctorDegreeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DoctorDegreeRowChanging != null)) {
                    this.DoctorDegreeRowChanging(this, new DoctorDegreeRowChangeEvent(((DoctorDegreeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DoctorDegreeRowDeleted != null)) {
                    this.DoctorDegreeRowDeleted(this, new DoctorDegreeRowChangeEvent(((DoctorDegreeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DoctorDegreeRowDeleting != null)) {
                    this.DoctorDegreeRowDeleting(this, new DoctorDegreeRowChangeEvent(((DoctorDegreeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDoctorDegreeRow(DoctorDegreeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClinicReception ds = new ClinicReception();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DoctorDegreeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Clinic_Lup_MedicalDgreeListDataTable : global::System.Data.TypedTableBase<Clinic_Lup_MedicalDgreeListRow> {
            
            private global::System.Data.DataColumn columnMedicalDgreeTitle;
            
            private global::System.Data.DataColumn columnMedicalDgreeID;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Lup_MedicalDgreeListDataTable() {
                this.TableName = "Clinic_Lup_MedicalDgreeList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Clinic_Lup_MedicalDgreeListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Clinic_Lup_MedicalDgreeListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MedicalDgreeTitleColumn {
                get {
                    return this.columnMedicalDgreeTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MedicalDgreeIDColumn {
                get {
                    return this.columnMedicalDgreeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Lup_MedicalDgreeListRow this[int index] {
                get {
                    return ((Clinic_Lup_MedicalDgreeListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Clinic_Lup_MedicalDgreeListRowChangeEventHandler Clinic_Lup_MedicalDgreeListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Clinic_Lup_MedicalDgreeListRowChangeEventHandler Clinic_Lup_MedicalDgreeListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Clinic_Lup_MedicalDgreeListRowChangeEventHandler Clinic_Lup_MedicalDgreeListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Clinic_Lup_MedicalDgreeListRowChangeEventHandler Clinic_Lup_MedicalDgreeListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddClinic_Lup_MedicalDgreeListRow(Clinic_Lup_MedicalDgreeListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Lup_MedicalDgreeListRow AddClinic_Lup_MedicalDgreeListRow(string MedicalDgreeTitle, byte MedicalDgreeID, bool IsDeleted) {
                Clinic_Lup_MedicalDgreeListRow rowClinic_Lup_MedicalDgreeListRow = ((Clinic_Lup_MedicalDgreeListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MedicalDgreeTitle,
                        MedicalDgreeID,
                        IsDeleted};
                rowClinic_Lup_MedicalDgreeListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowClinic_Lup_MedicalDgreeListRow);
                return rowClinic_Lup_MedicalDgreeListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Lup_MedicalDgreeListRow FindByMedicalDgreeID(byte MedicalDgreeID) {
                return ((Clinic_Lup_MedicalDgreeListRow)(this.Rows.Find(new object[] {
                            MedicalDgreeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Clinic_Lup_MedicalDgreeListDataTable cln = ((Clinic_Lup_MedicalDgreeListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Clinic_Lup_MedicalDgreeListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnMedicalDgreeTitle = base.Columns["MedicalDgreeTitle"];
                this.columnMedicalDgreeID = base.Columns["MedicalDgreeID"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnMedicalDgreeTitle = new global::System.Data.DataColumn("MedicalDgreeTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicalDgreeTitle);
                this.columnMedicalDgreeID = new global::System.Data.DataColumn("MedicalDgreeID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicalDgreeID);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMedicalDgreeID}, true));
                this.columnMedicalDgreeTitle.AllowDBNull = false;
                this.columnMedicalDgreeTitle.MaxLength = 50;
                this.columnMedicalDgreeID.AllowDBNull = false;
                this.columnMedicalDgreeID.ReadOnly = true;
                this.columnMedicalDgreeID.Unique = true;
                this.columnIsDeleted.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Lup_MedicalDgreeListRow NewClinic_Lup_MedicalDgreeListRow() {
                return ((Clinic_Lup_MedicalDgreeListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Clinic_Lup_MedicalDgreeListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Clinic_Lup_MedicalDgreeListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Clinic_Lup_MedicalDgreeListRowChanged != null)) {
                    this.Clinic_Lup_MedicalDgreeListRowChanged(this, new Clinic_Lup_MedicalDgreeListRowChangeEvent(((Clinic_Lup_MedicalDgreeListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Clinic_Lup_MedicalDgreeListRowChanging != null)) {
                    this.Clinic_Lup_MedicalDgreeListRowChanging(this, new Clinic_Lup_MedicalDgreeListRowChangeEvent(((Clinic_Lup_MedicalDgreeListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Clinic_Lup_MedicalDgreeListRowDeleted != null)) {
                    this.Clinic_Lup_MedicalDgreeListRowDeleted(this, new Clinic_Lup_MedicalDgreeListRowChangeEvent(((Clinic_Lup_MedicalDgreeListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Clinic_Lup_MedicalDgreeListRowDeleting != null)) {
                    this.Clinic_Lup_MedicalDgreeListRowDeleting(this, new Clinic_Lup_MedicalDgreeListRowChangeEvent(((Clinic_Lup_MedicalDgreeListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveClinic_Lup_MedicalDgreeListRow(Clinic_Lup_MedicalDgreeListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClinicReception ds = new ClinicReception();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Clinic_Lup_MedicalDgreeListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RecepitionFinTransViewDataTable : global::System.Data.TypedTableBase<RecepitionFinTransViewRow> {
            
            private global::System.Data.DataColumn columnRecordSerial;
            
            private global::System.Data.DataColumn columnVisitDate;
            
            private global::System.Data.DataColumn columnPID;
            
            private global::System.Data.DataColumn columnDrID;
            
            private global::System.Data.DataColumn columnClinicID;
            
            private global::System.Data.DataColumn columnIsEstshara;
            
            private global::System.Data.DataColumn columnVisitCost;
            
            private global::System.Data.DataColumn columnServiceLevelID;
            
            private global::System.Data.DataColumn columnDrShareDiscount;
            
            private global::System.Data.DataColumn columnHospitalShareDiscount;
            
            private global::System.Data.DataColumn columnDrValue;
            
            private global::System.Data.DataColumn columnHospitalValue;
            
            private global::System.Data.DataColumn columnClinicTitle;
            
            private global::System.Data.DataColumn columnDrName;
            
            private global::System.Data.DataColumn columnClinic_ServiceLevelTitle;
            
            private global::System.Data.DataColumn columnPatientName;
            
            private global::System.Data.DataColumn columnVisitType;
            
            private global::System.Data.DataColumn columnDrShareStatus;
            
            private global::System.Data.DataColumn columnAmountPaid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RecepitionFinTransViewDataTable() {
                this.TableName = "RecepitionFinTransView";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RecepitionFinTransViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RecepitionFinTransViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecordSerialColumn {
                get {
                    return this.columnRecordSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitDateColumn {
                get {
                    return this.columnVisitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PIDColumn {
                get {
                    return this.columnPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrIDColumn {
                get {
                    return this.columnDrID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClinicIDColumn {
                get {
                    return this.columnClinicID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsEstsharaColumn {
                get {
                    return this.columnIsEstshara;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitCostColumn {
                get {
                    return this.columnVisitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceLevelIDColumn {
                get {
                    return this.columnServiceLevelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrShareDiscountColumn {
                get {
                    return this.columnDrShareDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HospitalShareDiscountColumn {
                get {
                    return this.columnHospitalShareDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrValueColumn {
                get {
                    return this.columnDrValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HospitalValueColumn {
                get {
                    return this.columnHospitalValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClinicTitleColumn {
                get {
                    return this.columnClinicTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrNameColumn {
                get {
                    return this.columnDrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Clinic_ServiceLevelTitleColumn {
                get {
                    return this.columnClinic_ServiceLevelTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientNameColumn {
                get {
                    return this.columnPatientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitTypeColumn {
                get {
                    return this.columnVisitType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrShareStatusColumn {
                get {
                    return this.columnDrShareStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountPaidColumn {
                get {
                    return this.columnAmountPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RecepitionFinTransViewRow this[int index] {
                get {
                    return ((RecepitionFinTransViewRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RecepitionFinTransViewRowChangeEventHandler RecepitionFinTransViewRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RecepitionFinTransViewRowChangeEventHandler RecepitionFinTransViewRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RecepitionFinTransViewRowChangeEventHandler RecepitionFinTransViewRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RecepitionFinTransViewRowChangeEventHandler RecepitionFinTransViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRecepitionFinTransViewRow(RecepitionFinTransViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RecepitionFinTransViewRow AddRecepitionFinTransViewRow(
                        short RecordSerial, 
                        System.DateTime VisitDate, 
                        short PID, 
                        short DrID, 
                        byte ClinicID, 
                        bool IsEstshara, 
                        decimal VisitCost, 
                        byte ServiceLevelID, 
                        bool DrShareDiscount, 
                        bool HospitalShareDiscount, 
                        decimal DrValue, 
                        decimal HospitalValue, 
                        string ClinicTitle, 
                        string DrName, 
                        string Clinic_ServiceLevelTitle, 
                        string PatientName, 
                        string VisitType, 
                        string DrShareStatus, 
                        decimal AmountPaid) {
                RecepitionFinTransViewRow rowRecepitionFinTransViewRow = ((RecepitionFinTransViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RecordSerial,
                        VisitDate,
                        PID,
                        DrID,
                        ClinicID,
                        IsEstshara,
                        VisitCost,
                        ServiceLevelID,
                        DrShareDiscount,
                        HospitalShareDiscount,
                        DrValue,
                        HospitalValue,
                        ClinicTitle,
                        DrName,
                        Clinic_ServiceLevelTitle,
                        PatientName,
                        VisitType,
                        DrShareStatus,
                        AmountPaid};
                rowRecepitionFinTransViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRecepitionFinTransViewRow);
                return rowRecepitionFinTransViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RecepitionFinTransViewRow FindByRecordSerial(short RecordSerial) {
                return ((RecepitionFinTransViewRow)(this.Rows.Find(new object[] {
                            RecordSerial})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RecepitionFinTransViewDataTable cln = ((RecepitionFinTransViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RecepitionFinTransViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRecordSerial = base.Columns["RecordSerial"];
                this.columnVisitDate = base.Columns["VisitDate"];
                this.columnPID = base.Columns["PID"];
                this.columnDrID = base.Columns["DrID"];
                this.columnClinicID = base.Columns["ClinicID"];
                this.columnIsEstshara = base.Columns["IsEstshara"];
                this.columnVisitCost = base.Columns["VisitCost"];
                this.columnServiceLevelID = base.Columns["ServiceLevelID"];
                this.columnDrShareDiscount = base.Columns["DrShareDiscount"];
                this.columnHospitalShareDiscount = base.Columns["HospitalShareDiscount"];
                this.columnDrValue = base.Columns["DrValue"];
                this.columnHospitalValue = base.Columns["HospitalValue"];
                this.columnClinicTitle = base.Columns["ClinicTitle"];
                this.columnDrName = base.Columns["DrName"];
                this.columnClinic_ServiceLevelTitle = base.Columns["Clinic_ServiceLevelTitle"];
                this.columnPatientName = base.Columns["PatientName"];
                this.columnVisitType = base.Columns["VisitType"];
                this.columnDrShareStatus = base.Columns["DrShareStatus"];
                this.columnAmountPaid = base.Columns["AmountPaid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRecordSerial = new global::System.Data.DataColumn("RecordSerial", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordSerial);
                this.columnVisitDate = new global::System.Data.DataColumn("VisitDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitDate);
                this.columnPID = new global::System.Data.DataColumn("PID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPID);
                this.columnDrID = new global::System.Data.DataColumn("DrID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrID);
                this.columnClinicID = new global::System.Data.DataColumn("ClinicID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClinicID);
                this.columnIsEstshara = new global::System.Data.DataColumn("IsEstshara", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsEstshara);
                this.columnVisitCost = new global::System.Data.DataColumn("VisitCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitCost);
                this.columnServiceLevelID = new global::System.Data.DataColumn("ServiceLevelID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceLevelID);
                this.columnDrShareDiscount = new global::System.Data.DataColumn("DrShareDiscount", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrShareDiscount);
                this.columnHospitalShareDiscount = new global::System.Data.DataColumn("HospitalShareDiscount", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHospitalShareDiscount);
                this.columnDrValue = new global::System.Data.DataColumn("DrValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrValue);
                this.columnHospitalValue = new global::System.Data.DataColumn("HospitalValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHospitalValue);
                this.columnClinicTitle = new global::System.Data.DataColumn("ClinicTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClinicTitle);
                this.columnDrName = new global::System.Data.DataColumn("DrName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrName);
                this.columnClinic_ServiceLevelTitle = new global::System.Data.DataColumn("Clinic_ServiceLevelTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClinic_ServiceLevelTitle);
                this.columnPatientName = new global::System.Data.DataColumn("PatientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientName);
                this.columnVisitType = new global::System.Data.DataColumn("VisitType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitType);
                this.columnDrShareStatus = new global::System.Data.DataColumn("DrShareStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrShareStatus);
                this.columnAmountPaid = new global::System.Data.DataColumn("AmountPaid", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountPaid);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRecordSerial}, true));
                this.columnRecordSerial.AllowDBNull = false;
                this.columnRecordSerial.Unique = true;
                this.columnIsEstshara.AllowDBNull = false;
                this.columnServiceLevelID.AllowDBNull = false;
                this.columnDrShareDiscount.AllowDBNull = false;
                this.columnHospitalShareDiscount.AllowDBNull = false;
                this.columnDrValue.ReadOnly = true;
                this.columnHospitalValue.ReadOnly = true;
                this.columnClinicTitle.MaxLength = 50;
                this.columnDrName.AllowDBNull = false;
                this.columnDrName.MaxLength = 50;
                this.columnClinic_ServiceLevelTitle.AllowDBNull = false;
                this.columnClinic_ServiceLevelTitle.MaxLength = 50;
                this.columnPatientName.AllowDBNull = false;
                this.columnPatientName.MaxLength = 2147483647;
                this.columnVisitType.ReadOnly = true;
                this.columnVisitType.MaxLength = 7;
                this.columnDrShareStatus.ReadOnly = true;
                this.columnDrShareStatus.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RecepitionFinTransViewRow NewRecepitionFinTransViewRow() {
                return ((RecepitionFinTransViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RecepitionFinTransViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RecepitionFinTransViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RecepitionFinTransViewRowChanged != null)) {
                    this.RecepitionFinTransViewRowChanged(this, new RecepitionFinTransViewRowChangeEvent(((RecepitionFinTransViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RecepitionFinTransViewRowChanging != null)) {
                    this.RecepitionFinTransViewRowChanging(this, new RecepitionFinTransViewRowChangeEvent(((RecepitionFinTransViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RecepitionFinTransViewRowDeleted != null)) {
                    this.RecepitionFinTransViewRowDeleted(this, new RecepitionFinTransViewRowChangeEvent(((RecepitionFinTransViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RecepitionFinTransViewRowDeleting != null)) {
                    this.RecepitionFinTransViewRowDeleting(this, new RecepitionFinTransViewRowChangeEvent(((RecepitionFinTransViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRecepitionFinTransViewRow(RecepitionFinTransViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClinicReception ds = new ClinicReception();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RecepitionFinTransViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Combo_ReceptionDRListDataTable : global::System.Data.TypedTableBase<Combo_ReceptionDRListRow> {
            
            private global::System.Data.DataColumn columnRecordSerial;
            
            private global::System.Data.DataColumn columnClinicID;
            
            private global::System.Data.DataColumn columnServiceLevelID;
            
            private global::System.Data.DataColumn columnDoctorID;
            
            private global::System.Data.DataColumn columnDrName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Combo_ReceptionDRListDataTable() {
                this.TableName = "Combo_ReceptionDRList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Combo_ReceptionDRListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Combo_ReceptionDRListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecordSerialColumn {
                get {
                    return this.columnRecordSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClinicIDColumn {
                get {
                    return this.columnClinicID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceLevelIDColumn {
                get {
                    return this.columnServiceLevelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DoctorIDColumn {
                get {
                    return this.columnDoctorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrNameColumn {
                get {
                    return this.columnDrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Combo_ReceptionDRListRow this[int index] {
                get {
                    return ((Combo_ReceptionDRListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Combo_ReceptionDRListRowChangeEventHandler Combo_ReceptionDRListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Combo_ReceptionDRListRowChangeEventHandler Combo_ReceptionDRListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Combo_ReceptionDRListRowChangeEventHandler Combo_ReceptionDRListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Combo_ReceptionDRListRowChangeEventHandler Combo_ReceptionDRListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCombo_ReceptionDRListRow(Combo_ReceptionDRListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Combo_ReceptionDRListRow AddCombo_ReceptionDRListRow(byte ClinicID, byte ServiceLevelID, short DoctorID, string DrName) {
                Combo_ReceptionDRListRow rowCombo_ReceptionDRListRow = ((Combo_ReceptionDRListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ClinicID,
                        ServiceLevelID,
                        DoctorID,
                        DrName};
                rowCombo_ReceptionDRListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCombo_ReceptionDRListRow);
                return rowCombo_ReceptionDRListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Combo_ReceptionDRListRow FindByRecordSerial(short RecordSerial) {
                return ((Combo_ReceptionDRListRow)(this.Rows.Find(new object[] {
                            RecordSerial})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Combo_ReceptionDRListDataTable cln = ((Combo_ReceptionDRListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Combo_ReceptionDRListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRecordSerial = base.Columns["RecordSerial"];
                this.columnClinicID = base.Columns["ClinicID"];
                this.columnServiceLevelID = base.Columns["ServiceLevelID"];
                this.columnDoctorID = base.Columns["DoctorID"];
                this.columnDrName = base.Columns["DrName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRecordSerial = new global::System.Data.DataColumn("RecordSerial", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordSerial);
                this.columnClinicID = new global::System.Data.DataColumn("ClinicID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClinicID);
                this.columnServiceLevelID = new global::System.Data.DataColumn("ServiceLevelID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceLevelID);
                this.columnDoctorID = new global::System.Data.DataColumn("DoctorID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoctorID);
                this.columnDrName = new global::System.Data.DataColumn("DrName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRecordSerial}, true));
                this.columnRecordSerial.AutoIncrement = true;
                this.columnRecordSerial.AutoIncrementSeed = -1;
                this.columnRecordSerial.AutoIncrementStep = -1;
                this.columnRecordSerial.AllowDBNull = false;
                this.columnRecordSerial.ReadOnly = true;
                this.columnRecordSerial.Unique = true;
                this.columnClinicID.AllowDBNull = false;
                this.columnServiceLevelID.AllowDBNull = false;
                this.columnDoctorID.AllowDBNull = false;
                this.columnDrName.AllowDBNull = false;
                this.columnDrName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Combo_ReceptionDRListRow NewCombo_ReceptionDRListRow() {
                return ((Combo_ReceptionDRListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Combo_ReceptionDRListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Combo_ReceptionDRListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Combo_ReceptionDRListRowChanged != null)) {
                    this.Combo_ReceptionDRListRowChanged(this, new Combo_ReceptionDRListRowChangeEvent(((Combo_ReceptionDRListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Combo_ReceptionDRListRowChanging != null)) {
                    this.Combo_ReceptionDRListRowChanging(this, new Combo_ReceptionDRListRowChangeEvent(((Combo_ReceptionDRListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Combo_ReceptionDRListRowDeleted != null)) {
                    this.Combo_ReceptionDRListRowDeleted(this, new Combo_ReceptionDRListRowChangeEvent(((Combo_ReceptionDRListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Combo_ReceptionDRListRowDeleting != null)) {
                    this.Combo_ReceptionDRListRowDeleting(this, new Combo_ReceptionDRListRowChangeEvent(((Combo_ReceptionDRListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCombo_ReceptionDRListRow(Combo_ReceptionDRListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClinicReception ds = new ClinicReception();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Combo_ReceptionDRListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GridPullSamplesDataTable : global::System.Data.TypedTableBase<GridPullSamplesRow> {
            
            private global::System.Data.DataColumn columnRequestID;
            
            private global::System.Data.DataColumn columnAnalysisID;
            
            private global::System.Data.DataColumn columnAnalysisName;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnPullOfSampleDate;
            
            private global::System.Data.DataColumn columnSampleBarCode1;
            
            private global::System.Data.DataColumn columnSampleBarCode2;
            
            private global::System.Data.DataColumn columnSampleBarCode3;
            
            private global::System.Data.DataColumn columnNoOfSamples;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GridPullSamplesDataTable() {
                this.TableName = "GridPullSamples";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GridPullSamplesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GridPullSamplesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequestIDColumn {
                get {
                    return this.columnRequestID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnalysisIDColumn {
                get {
                    return this.columnAnalysisID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnalysisNameColumn {
                get {
                    return this.columnAnalysisName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PullOfSampleDateColumn {
                get {
                    return this.columnPullOfSampleDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampleBarCode1Column {
                get {
                    return this.columnSampleBarCode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampleBarCode2Column {
                get {
                    return this.columnSampleBarCode2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampleBarCode3Column {
                get {
                    return this.columnSampleBarCode3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NoOfSamplesColumn {
                get {
                    return this.columnNoOfSamples;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GridPullSamplesRow this[int index] {
                get {
                    return ((GridPullSamplesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GridPullSamplesRowChangeEventHandler GridPullSamplesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GridPullSamplesRowChangeEventHandler GridPullSamplesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GridPullSamplesRowChangeEventHandler GridPullSamplesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GridPullSamplesRowChangeEventHandler GridPullSamplesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGridPullSamplesRow(GridPullSamplesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GridPullSamplesRow AddGridPullSamplesRow(short RequestID, short AnalysisID, string AnalysisName, bool IsDeleted, System.DateTime PullOfSampleDate, int SampleBarCode1, int SampleBarCode2, int SampleBarCode3, byte NoOfSamples) {
                GridPullSamplesRow rowGridPullSamplesRow = ((GridPullSamplesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RequestID,
                        AnalysisID,
                        AnalysisName,
                        IsDeleted,
                        PullOfSampleDate,
                        SampleBarCode1,
                        SampleBarCode2,
                        SampleBarCode3,
                        NoOfSamples};
                rowGridPullSamplesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGridPullSamplesRow);
                return rowGridPullSamplesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GridPullSamplesDataTable cln = ((GridPullSamplesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GridPullSamplesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRequestID = base.Columns["RequestID"];
                this.columnAnalysisID = base.Columns["AnalysisID"];
                this.columnAnalysisName = base.Columns["AnalysisName"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnPullOfSampleDate = base.Columns["PullOfSampleDate"];
                this.columnSampleBarCode1 = base.Columns["SampleBarCode1"];
                this.columnSampleBarCode2 = base.Columns["SampleBarCode2"];
                this.columnSampleBarCode3 = base.Columns["SampleBarCode3"];
                this.columnNoOfSamples = base.Columns["NoOfSamples"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRequestID = new global::System.Data.DataColumn("RequestID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestID);
                this.columnAnalysisID = new global::System.Data.DataColumn("AnalysisID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnalysisID);
                this.columnAnalysisName = new global::System.Data.DataColumn("AnalysisName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnalysisName);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnPullOfSampleDate = new global::System.Data.DataColumn("PullOfSampleDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPullOfSampleDate);
                this.columnSampleBarCode1 = new global::System.Data.DataColumn("SampleBarCode1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleBarCode1);
                this.columnSampleBarCode2 = new global::System.Data.DataColumn("SampleBarCode2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleBarCode2);
                this.columnSampleBarCode3 = new global::System.Data.DataColumn("SampleBarCode3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleBarCode3);
                this.columnNoOfSamples = new global::System.Data.DataColumn("NoOfSamples", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoOfSamples);
                this.columnRequestID.AllowDBNull = false;
                this.columnAnalysisID.AllowDBNull = false;
                this.columnAnalysisName.MaxLength = 50;
                this.columnIsDeleted.AllowDBNull = false;
                this.columnNoOfSamples.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GridPullSamplesRow NewGridPullSamplesRow() {
                return ((GridPullSamplesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GridPullSamplesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GridPullSamplesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GridPullSamplesRowChanged != null)) {
                    this.GridPullSamplesRowChanged(this, new GridPullSamplesRowChangeEvent(((GridPullSamplesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GridPullSamplesRowChanging != null)) {
                    this.GridPullSamplesRowChanging(this, new GridPullSamplesRowChangeEvent(((GridPullSamplesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GridPullSamplesRowDeleted != null)) {
                    this.GridPullSamplesRowDeleted(this, new GridPullSamplesRowChangeEvent(((GridPullSamplesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GridPullSamplesRowDeleting != null)) {
                    this.GridPullSamplesRowDeleting(this, new GridPullSamplesRowChangeEvent(((GridPullSamplesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGridPullSamplesRow(GridPullSamplesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClinicReception ds = new ClinicReception();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GridPullSamplesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CountPatientDataTable : global::System.Data.TypedTableBase<CountPatientRow> {
            
            private global::System.Data.DataColumn columnTotalCount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CountPatientDataTable() {
                this.TableName = "CountPatient";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CountPatientDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CountPatientDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalCountColumn {
                get {
                    return this.columnTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CountPatientRow this[int index] {
                get {
                    return ((CountPatientRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CountPatientRowChangeEventHandler CountPatientRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CountPatientRowChangeEventHandler CountPatientRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CountPatientRowChangeEventHandler CountPatientRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CountPatientRowChangeEventHandler CountPatientRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCountPatientRow(CountPatientRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CountPatientRow AddCountPatientRow(int TotalCount) {
                CountPatientRow rowCountPatientRow = ((CountPatientRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TotalCount};
                rowCountPatientRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCountPatientRow);
                return rowCountPatientRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CountPatientDataTable cln = ((CountPatientDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CountPatientDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTotalCount = base.Columns["TotalCount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTotalCount = new global::System.Data.DataColumn("TotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCount);
                this.columnTotalCount.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CountPatientRow NewCountPatientRow() {
                return ((CountPatientRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CountPatientRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CountPatientRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CountPatientRowChanged != null)) {
                    this.CountPatientRowChanged(this, new CountPatientRowChangeEvent(((CountPatientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CountPatientRowChanging != null)) {
                    this.CountPatientRowChanging(this, new CountPatientRowChangeEvent(((CountPatientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CountPatientRowDeleted != null)) {
                    this.CountPatientRowDeleted(this, new CountPatientRowChangeEvent(((CountPatientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CountPatientRowDeleting != null)) {
                    this.CountPatientRowDeleting(this, new CountPatientRowChangeEvent(((CountPatientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCountPatientRow(CountPatientRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClinicReception ds = new ClinicReception();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CountPatientDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GridExaminationSerialDataTable : global::System.Data.TypedTableBase<GridExaminationSerialRow> {
            
            private global::System.Data.DataColumn columnRecordSerial;
            
            private global::System.Data.DataColumn columnPID;
            
            private global::System.Data.DataColumn columnPatientName;
            
            private global::System.Data.DataColumn columnExaminationName;
            
            private global::System.Data.DataColumn columnExaminationSerial;
            
            private global::System.Data.DataColumn columnRDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GridExaminationSerialDataTable() {
                this.TableName = "GridExaminationSerial";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GridExaminationSerialDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GridExaminationSerialDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecordSerialColumn {
                get {
                    return this.columnRecordSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PIDColumn {
                get {
                    return this.columnPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientNameColumn {
                get {
                    return this.columnPatientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExaminationNameColumn {
                get {
                    return this.columnExaminationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExaminationSerialColumn {
                get {
                    return this.columnExaminationSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RDateColumn {
                get {
                    return this.columnRDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GridExaminationSerialRow this[int index] {
                get {
                    return ((GridExaminationSerialRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GridExaminationSerialRowChangeEventHandler GridExaminationSerialRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GridExaminationSerialRowChangeEventHandler GridExaminationSerialRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GridExaminationSerialRowChangeEventHandler GridExaminationSerialRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GridExaminationSerialRowChangeEventHandler GridExaminationSerialRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGridExaminationSerialRow(GridExaminationSerialRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GridExaminationSerialRow AddGridExaminationSerialRow(int RecordSerial, string PatientName, string ExaminationName, string ExaminationSerial, System.DateTime RDate) {
                GridExaminationSerialRow rowGridExaminationSerialRow = ((GridExaminationSerialRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RecordSerial,
                        null,
                        PatientName,
                        ExaminationName,
                        ExaminationSerial,
                        RDate};
                rowGridExaminationSerialRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGridExaminationSerialRow);
                return rowGridExaminationSerialRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GridExaminationSerialRow FindByRecordSerial(int RecordSerial) {
                return ((GridExaminationSerialRow)(this.Rows.Find(new object[] {
                            RecordSerial})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GridExaminationSerialDataTable cln = ((GridExaminationSerialDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GridExaminationSerialDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRecordSerial = base.Columns["RecordSerial"];
                this.columnPID = base.Columns["PID"];
                this.columnPatientName = base.Columns["PatientName"];
                this.columnExaminationName = base.Columns["ExaminationName"];
                this.columnExaminationSerial = base.Columns["ExaminationSerial"];
                this.columnRDate = base.Columns["RDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRecordSerial = new global::System.Data.DataColumn("RecordSerial", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordSerial);
                this.columnPID = new global::System.Data.DataColumn("PID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPID);
                this.columnPatientName = new global::System.Data.DataColumn("PatientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientName);
                this.columnExaminationName = new global::System.Data.DataColumn("ExaminationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExaminationName);
                this.columnExaminationSerial = new global::System.Data.DataColumn("ExaminationSerial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExaminationSerial);
                this.columnRDate = new global::System.Data.DataColumn("RDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRecordSerial}, true));
                this.columnRecordSerial.AllowDBNull = false;
                this.columnRecordSerial.Unique = true;
                this.columnPID.AutoIncrement = true;
                this.columnPID.AutoIncrementSeed = -1;
                this.columnPID.AutoIncrementStep = -1;
                this.columnPID.AllowDBNull = false;
                this.columnPID.ReadOnly = true;
                this.columnPatientName.AllowDBNull = false;
                this.columnPatientName.MaxLength = 2147483647;
                this.columnExaminationName.MaxLength = 50;
                this.columnExaminationSerial.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GridExaminationSerialRow NewGridExaminationSerialRow() {
                return ((GridExaminationSerialRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GridExaminationSerialRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GridExaminationSerialRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GridExaminationSerialRowChanged != null)) {
                    this.GridExaminationSerialRowChanged(this, new GridExaminationSerialRowChangeEvent(((GridExaminationSerialRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GridExaminationSerialRowChanging != null)) {
                    this.GridExaminationSerialRowChanging(this, new GridExaminationSerialRowChangeEvent(((GridExaminationSerialRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GridExaminationSerialRowDeleted != null)) {
                    this.GridExaminationSerialRowDeleted(this, new GridExaminationSerialRowChangeEvent(((GridExaminationSerialRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GridExaminationSerialRowDeleting != null)) {
                    this.GridExaminationSerialRowDeleting(this, new GridExaminationSerialRowChangeEvent(((GridExaminationSerialRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGridExaminationSerialRow(GridExaminationSerialRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClinicReception ds = new ClinicReception();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GridExaminationSerialDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Inv_ItemsDataTable : global::System.Data.TypedTableBase<Inv_ItemsRow> {
            
            private global::System.Data.DataColumn columnItemLocalID;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Inv_ItemsDataTable() {
                this.TableName = "Inv_Items";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Inv_ItemsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Inv_ItemsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemLocalIDColumn {
                get {
                    return this.columnItemLocalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Inv_ItemsRow this[int index] {
                get {
                    return ((Inv_ItemsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Inv_ItemsRowChangeEventHandler Inv_ItemsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Inv_ItemsRowChangeEventHandler Inv_ItemsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Inv_ItemsRowChangeEventHandler Inv_ItemsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Inv_ItemsRowChangeEventHandler Inv_ItemsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddInv_ItemsRow(Inv_ItemsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Inv_ItemsRow AddInv_ItemsRow(string ItemName) {
                Inv_ItemsRow rowInv_ItemsRow = ((Inv_ItemsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ItemName};
                rowInv_ItemsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInv_ItemsRow);
                return rowInv_ItemsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Inv_ItemsRow FindByItemLocalID(int ItemLocalID) {
                return ((Inv_ItemsRow)(this.Rows.Find(new object[] {
                            ItemLocalID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Inv_ItemsDataTable cln = ((Inv_ItemsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Inv_ItemsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnItemLocalID = base.Columns["ItemLocalID"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnItemLocalID = new global::System.Data.DataColumn("ItemLocalID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemLocalID);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnItemLocalID}, true));
                this.columnItemLocalID.AutoIncrement = true;
                this.columnItemLocalID.AutoIncrementSeed = -1;
                this.columnItemLocalID.AutoIncrementStep = -1;
                this.columnItemLocalID.AllowDBNull = false;
                this.columnItemLocalID.ReadOnly = true;
                this.columnItemLocalID.Unique = true;
                this.columnItemName.AllowDBNull = false;
                this.columnItemName.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Inv_ItemsRow NewInv_ItemsRow() {
                return ((Inv_ItemsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Inv_ItemsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Inv_ItemsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Inv_ItemsRowChanged != null)) {
                    this.Inv_ItemsRowChanged(this, new Inv_ItemsRowChangeEvent(((Inv_ItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Inv_ItemsRowChanging != null)) {
                    this.Inv_ItemsRowChanging(this, new Inv_ItemsRowChangeEvent(((Inv_ItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Inv_ItemsRowDeleted != null)) {
                    this.Inv_ItemsRowDeleted(this, new Inv_ItemsRowChangeEvent(((Inv_ItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Inv_ItemsRowDeleting != null)) {
                    this.Inv_ItemsRowDeleting(this, new Inv_ItemsRowChangeEvent(((Inv_ItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveInv_ItemsRow(Inv_ItemsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClinicReception ds = new ClinicReception();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Inv_ItemsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DrListforRefDataTable : global::System.Data.TypedTableBase<DrListforRefRow> {
            
            private global::System.Data.DataColumn columnDrName;
            
            private global::System.Data.DataColumn columnAccountID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DrListforRefDataTable() {
                this.TableName = "DrListforRef";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DrListforRefDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DrListforRefDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrNameColumn {
                get {
                    return this.columnDrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountIDColumn {
                get {
                    return this.columnAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DrListforRefRow this[int index] {
                get {
                    return ((DrListforRefRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DrListforRefRowChangeEventHandler DrListforRefRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DrListforRefRowChangeEventHandler DrListforRefRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DrListforRefRowChangeEventHandler DrListforRefRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DrListforRefRowChangeEventHandler DrListforRefRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDrListforRefRow(DrListforRefRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DrListforRefRow AddDrListforRefRow(string DrName) {
                DrListforRefRow rowDrListforRefRow = ((DrListforRefRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DrName,
                        null};
                rowDrListforRefRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDrListforRefRow);
                return rowDrListforRefRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DrListforRefRow FindByAccountID(int AccountID) {
                return ((DrListforRefRow)(this.Rows.Find(new object[] {
                            AccountID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DrListforRefDataTable cln = ((DrListforRefDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DrListforRefDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnDrName = base.Columns["DrName"];
                this.columnAccountID = base.Columns["AccountID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnDrName = new global::System.Data.DataColumn("DrName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrName);
                this.columnAccountID = new global::System.Data.DataColumn("AccountID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAccountID}, true));
                this.columnDrName.AllowDBNull = false;
                this.columnDrName.MaxLength = 50;
                this.columnAccountID.AutoIncrement = true;
                this.columnAccountID.AutoIncrementSeed = -1;
                this.columnAccountID.AutoIncrementStep = -1;
                this.columnAccountID.AllowDBNull = false;
                this.columnAccountID.ReadOnly = true;
                this.columnAccountID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DrListforRefRow NewDrListforRefRow() {
                return ((DrListforRefRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DrListforRefRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DrListforRefRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DrListforRefRowChanged != null)) {
                    this.DrListforRefRowChanged(this, new DrListforRefRowChangeEvent(((DrListforRefRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DrListforRefRowChanging != null)) {
                    this.DrListforRefRowChanging(this, new DrListforRefRowChangeEvent(((DrListforRefRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DrListforRefRowDeleted != null)) {
                    this.DrListforRefRowDeleted(this, new DrListforRefRowChangeEvent(((DrListforRefRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DrListforRefRowDeleting != null)) {
                    this.DrListforRefRowDeleting(this, new DrListforRefRowChangeEvent(((DrListforRefRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDrListforRefRow(DrListforRefRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClinicReception ds = new ClinicReception();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DrListforRefDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EMR_PF_BasicDataTable : global::System.Data.TypedTableBase<EMR_PF_BasicRow> {
            
            private global::System.Data.DataColumn columnRecordID;
            
            private global::System.Data.DataColumn columnPFileID;
            
            private global::System.Data.DataColumn columnPatientName;
            
            private global::System.Data.DataColumn columnPatientBarCode;
            
            private global::System.Data.DataColumn columnAcAge;
            
            private global::System.Data.DataColumn columnGenderNameAr;
            
            private global::System.Data.DataColumn columnBirthDate;
            
            private global::System.Data.DataColumn columnNationalityNameAr;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnRegistrationDate;
            
            private global::System.Data.DataColumn columnContact1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMR_PF_BasicDataTable() {
                this.TableName = "EMR_PF_Basic";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EMR_PF_BasicDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EMR_PF_BasicDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecordIDColumn {
                get {
                    return this.columnRecordID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PFileIDColumn {
                get {
                    return this.columnPFileID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientNameColumn {
                get {
                    return this.columnPatientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientBarCodeColumn {
                get {
                    return this.columnPatientBarCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AcAgeColumn {
                get {
                    return this.columnAcAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenderNameArColumn {
                get {
                    return this.columnGenderNameAr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BirthDateColumn {
                get {
                    return this.columnBirthDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NationalityNameArColumn {
                get {
                    return this.columnNationalityNameAr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegistrationDateColumn {
                get {
                    return this.columnRegistrationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Contact1Column {
                get {
                    return this.columnContact1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMR_PF_BasicRow this[int index] {
                get {
                    return ((EMR_PF_BasicRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EMR_PF_BasicRowChangeEventHandler EMR_PF_BasicRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EMR_PF_BasicRowChangeEventHandler EMR_PF_BasicRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EMR_PF_BasicRowChangeEventHandler EMR_PF_BasicRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EMR_PF_BasicRowChangeEventHandler EMR_PF_BasicRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEMR_PF_BasicRow(EMR_PF_BasicRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMR_PF_BasicRow AddEMR_PF_BasicRow(string PFileID, string PatientName, string PatientBarCode, string AcAge, string GenderNameAr, System.DateTime BirthDate, string NationalityNameAr, string Address, System.DateTime RegistrationDate, string Contact1) {
                EMR_PF_BasicRow rowEMR_PF_BasicRow = ((EMR_PF_BasicRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PFileID,
                        PatientName,
                        PatientBarCode,
                        AcAge,
                        GenderNameAr,
                        BirthDate,
                        NationalityNameAr,
                        Address,
                        RegistrationDate,
                        Contact1};
                rowEMR_PF_BasicRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEMR_PF_BasicRow);
                return rowEMR_PF_BasicRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMR_PF_BasicRow FindByRecordID(long RecordID) {
                return ((EMR_PF_BasicRow)(this.Rows.Find(new object[] {
                            RecordID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EMR_PF_BasicDataTable cln = ((EMR_PF_BasicDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EMR_PF_BasicDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRecordID = base.Columns["RecordID"];
                this.columnPFileID = base.Columns["PFileID"];
                this.columnPatientName = base.Columns["PatientName"];
                this.columnPatientBarCode = base.Columns["PatientBarCode"];
                this.columnAcAge = base.Columns["AcAge"];
                this.columnGenderNameAr = base.Columns["GenderNameAr"];
                this.columnBirthDate = base.Columns["BirthDate"];
                this.columnNationalityNameAr = base.Columns["NationalityNameAr"];
                this.columnAddress = base.Columns["Address"];
                this.columnRegistrationDate = base.Columns["RegistrationDate"];
                this.columnContact1 = base.Columns["Contact1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRecordID = new global::System.Data.DataColumn("RecordID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordID);
                this.columnPFileID = new global::System.Data.DataColumn("PFileID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPFileID);
                this.columnPatientName = new global::System.Data.DataColumn("PatientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientName);
                this.columnPatientBarCode = new global::System.Data.DataColumn("PatientBarCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientBarCode);
                this.columnAcAge = new global::System.Data.DataColumn("AcAge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcAge);
                this.columnGenderNameAr = new global::System.Data.DataColumn("GenderNameAr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenderNameAr);
                this.columnBirthDate = new global::System.Data.DataColumn("BirthDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthDate);
                this.columnNationalityNameAr = new global::System.Data.DataColumn("NationalityNameAr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNationalityNameAr);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnRegistrationDate = new global::System.Data.DataColumn("RegistrationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegistrationDate);
                this.columnContact1 = new global::System.Data.DataColumn("Contact1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContact1);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRecordID}, true));
                this.columnRecordID.AutoIncrement = true;
                this.columnRecordID.AutoIncrementSeed = -1;
                this.columnRecordID.AutoIncrementStep = -1;
                this.columnRecordID.AllowDBNull = false;
                this.columnRecordID.ReadOnly = true;
                this.columnRecordID.Unique = true;
                this.columnPFileID.MaxLength = 50;
                this.columnPatientName.AllowDBNull = false;
                this.columnPatientName.MaxLength = 2147483647;
                this.columnPatientBarCode.ReadOnly = true;
                this.columnPatientBarCode.MaxLength = 52;
                this.columnAcAge.ReadOnly = true;
                this.columnAcAge.MaxLength = 2147483647;
                this.columnGenderNameAr.MaxLength = 100;
                this.columnNationalityNameAr.MaxLength = 100;
                this.columnAddress.MaxLength = 500;
                this.columnContact1.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMR_PF_BasicRow NewEMR_PF_BasicRow() {
                return ((EMR_PF_BasicRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EMR_PF_BasicRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EMR_PF_BasicRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EMR_PF_BasicRowChanged != null)) {
                    this.EMR_PF_BasicRowChanged(this, new EMR_PF_BasicRowChangeEvent(((EMR_PF_BasicRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EMR_PF_BasicRowChanging != null)) {
                    this.EMR_PF_BasicRowChanging(this, new EMR_PF_BasicRowChangeEvent(((EMR_PF_BasicRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EMR_PF_BasicRowDeleted != null)) {
                    this.EMR_PF_BasicRowDeleted(this, new EMR_PF_BasicRowChangeEvent(((EMR_PF_BasicRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EMR_PF_BasicRowDeleting != null)) {
                    this.EMR_PF_BasicRowDeleting(this, new EMR_PF_BasicRowChangeEvent(((EMR_PF_BasicRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEMR_PF_BasicRow(EMR_PF_BasicRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClinicReception ds = new ClinicReception();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EMR_PF_BasicDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RreservationGrid1DataTable : global::System.Data.TypedTableBase<RreservationGrid1Row> {
            
            private global::System.Data.DataColumn columnRecordSerial;
            
            private global::System.Data.DataColumn columnPID;
            
            private global::System.Data.DataColumn columnPatientName;
            
            private global::System.Data.DataColumn columnDrID;
            
            private global::System.Data.DataColumn columnDrName;
            
            private global::System.Data.DataColumn columnClinicID;
            
            private global::System.Data.DataColumn columnClinicTitle;
            
            private global::System.Data.DataColumn columnVisitDate;
            
            private global::System.Data.DataColumn columnNotes;
            
            private global::System.Data.DataColumn columnIsEstshara;
            
            private global::System.Data.DataColumn columnEnterOrder;
            
            private global::System.Data.DataColumn columnIsAchived;
            
            private global::System.Data.DataColumn columnVisitCost;
            
            private global::System.Data.DataColumn columnHadPayied;
            
            private global::System.Data.DataColumn columnServiceLevelID;
            
            private global::System.Data.DataColumn columnAmountPaid;
            
            private global::System.Data.DataColumn columnAccountBalance;
            
            private global::System.Data.DataColumn columnInvoiceDetailsRecordID;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnRCDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnLADate;
            
            private global::System.Data.DataColumn columnREye;
            
            private global::System.Data.DataColumn columnLEye;
            
            private global::System.Data.DataColumn columnLate;
            
            private global::System.Data.DataColumn columnVisitDay;
            
            private global::System.Data.DataColumn columnAttended;
            
            private global::System.Data.DataColumn columnPrepared;
            
            private global::System.Data.DataColumn columnTransferd;
            
            private global::System.Data.DataColumn columnIsCurrent;
            
            private global::System.Data.DataColumn columnTakeService;
            
            private global::System.Data.DataColumn columnBookingTimeString;
            
            private global::System.Data.DataColumn columnSubServiceName;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnPFileID;
            
            private global::System.Data.DataColumn columnProfileNotes;
            
            private global::System.Data.DataColumn columnOldID;
            
            private global::System.Data.DataColumn columnArchiveLocation;
            
            private global::System.Data.DataColumn columnGetFile;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnAttendTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RreservationGrid1DataTable() {
                this.TableName = "RreservationGrid1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RreservationGrid1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RreservationGrid1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecordSerialColumn {
                get {
                    return this.columnRecordSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PIDColumn {
                get {
                    return this.columnPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientNameColumn {
                get {
                    return this.columnPatientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrIDColumn {
                get {
                    return this.columnDrID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrNameColumn {
                get {
                    return this.columnDrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClinicIDColumn {
                get {
                    return this.columnClinicID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClinicTitleColumn {
                get {
                    return this.columnClinicTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitDateColumn {
                get {
                    return this.columnVisitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsEstsharaColumn {
                get {
                    return this.columnIsEstshara;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnterOrderColumn {
                get {
                    return this.columnEnterOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsAchivedColumn {
                get {
                    return this.columnIsAchived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitCostColumn {
                get {
                    return this.columnVisitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HadPayiedColumn {
                get {
                    return this.columnHadPayied;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceLevelIDColumn {
                get {
                    return this.columnServiceLevelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountPaidColumn {
                get {
                    return this.columnAmountPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountBalanceColumn {
                get {
                    return this.columnAccountBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceDetailsRecordIDColumn {
                get {
                    return this.columnInvoiceDetailsRecordID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RCDateColumn {
                get {
                    return this.columnRCDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LADateColumn {
                get {
                    return this.columnLADate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REyeColumn {
                get {
                    return this.columnREye;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LEyeColumn {
                get {
                    return this.columnLEye;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LateColumn {
                get {
                    return this.columnLate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitDayColumn {
                get {
                    return this.columnVisitDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttendedColumn {
                get {
                    return this.columnAttended;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PreparedColumn {
                get {
                    return this.columnPrepared;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransferdColumn {
                get {
                    return this.columnTransferd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsCurrentColumn {
                get {
                    return this.columnIsCurrent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TakeServiceColumn {
                get {
                    return this.columnTakeService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingTimeStringColumn {
                get {
                    return this.columnBookingTimeString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubServiceNameColumn {
                get {
                    return this.columnSubServiceName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PFileIDColumn {
                get {
                    return this.columnPFileID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProfileNotesColumn {
                get {
                    return this.columnProfileNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OldIDColumn {
                get {
                    return this.columnOldID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArchiveLocationColumn {
                get {
                    return this.columnArchiveLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GetFileColumn {
                get {
                    return this.columnGetFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttendTimeColumn {
                get {
                    return this.columnAttendTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RreservationGrid1Row this[int index] {
                get {
                    return ((RreservationGrid1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RreservationGrid1RowChangeEventHandler RreservationGrid1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RreservationGrid1RowChangeEventHandler RreservationGrid1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RreservationGrid1RowChangeEventHandler RreservationGrid1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RreservationGrid1RowChangeEventHandler RreservationGrid1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRreservationGrid1Row(RreservationGrid1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RreservationGrid1Row AddRreservationGrid1Row(
                        long PID, 
                        string PatientName, 
                        short DrID, 
                        string DrName, 
                        byte ClinicID, 
                        string ClinicTitle, 
                        System.DateTime VisitDate, 
                        string Notes, 
                        bool IsEstshara, 
                        byte EnterOrder, 
                        bool IsAchived, 
                        decimal VisitCost, 
                        bool HadPayied, 
                        byte ServiceLevelID, 
                        decimal AmountPaid, 
                        decimal AccountBalance, 
                        int InvoiceDetailsRecordID, 
                        string CreatedBy, 
                        System.DateTime RCDate, 
                        string ModifiedBy, 
                        System.DateTime LADate, 
                        bool REye, 
                        bool LEye, 
                        decimal Late, 
                        string VisitDay, 
                        bool Attended, 
                        bool Prepared, 
                        bool Transferd, 
                        bool IsCurrent, 
                        bool TakeService, 
                        string BookingTimeString, 
                        string SubServiceName, 
                        string Age, 
                        string PFileID, 
                        string ProfileNotes, 
                        string OldID, 
                        string ArchiveLocation, 
                        bool GetFile, 
                        string Address, 
                        System.TimeSpan AttendTime) {
                RreservationGrid1Row rowRreservationGrid1Row = ((RreservationGrid1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PID,
                        PatientName,
                        DrID,
                        DrName,
                        ClinicID,
                        ClinicTitle,
                        VisitDate,
                        Notes,
                        IsEstshara,
                        EnterOrder,
                        IsAchived,
                        VisitCost,
                        HadPayied,
                        ServiceLevelID,
                        AmountPaid,
                        AccountBalance,
                        InvoiceDetailsRecordID,
                        CreatedBy,
                        RCDate,
                        ModifiedBy,
                        LADate,
                        REye,
                        LEye,
                        Late,
                        VisitDay,
                        Attended,
                        Prepared,
                        Transferd,
                        IsCurrent,
                        TakeService,
                        BookingTimeString,
                        SubServiceName,
                        Age,
                        PFileID,
                        ProfileNotes,
                        OldID,
                        ArchiveLocation,
                        GetFile,
                        Address,
                        AttendTime};
                rowRreservationGrid1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowRreservationGrid1Row);
                return rowRreservationGrid1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RreservationGrid1Row FindByRecordSerial(int RecordSerial) {
                return ((RreservationGrid1Row)(this.Rows.Find(new object[] {
                            RecordSerial})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RreservationGrid1DataTable cln = ((RreservationGrid1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RreservationGrid1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRecordSerial = base.Columns["RecordSerial"];
                this.columnPID = base.Columns["PID"];
                this.columnPatientName = base.Columns["PatientName"];
                this.columnDrID = base.Columns["DrID"];
                this.columnDrName = base.Columns["DrName"];
                this.columnClinicID = base.Columns["ClinicID"];
                this.columnClinicTitle = base.Columns["ClinicTitle"];
                this.columnVisitDate = base.Columns["VisitDate"];
                this.columnNotes = base.Columns["Notes"];
                this.columnIsEstshara = base.Columns["IsEstshara"];
                this.columnEnterOrder = base.Columns["EnterOrder"];
                this.columnIsAchived = base.Columns["IsAchived"];
                this.columnVisitCost = base.Columns["VisitCost"];
                this.columnHadPayied = base.Columns["HadPayied"];
                this.columnServiceLevelID = base.Columns["ServiceLevelID"];
                this.columnAmountPaid = base.Columns["AmountPaid"];
                this.columnAccountBalance = base.Columns["AccountBalance"];
                this.columnInvoiceDetailsRecordID = base.Columns["InvoiceDetailsRecordID"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnRCDate = base.Columns["RCDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnLADate = base.Columns["LADate"];
                this.columnREye = base.Columns["REye"];
                this.columnLEye = base.Columns["LEye"];
                this.columnLate = base.Columns["Late"];
                this.columnVisitDay = base.Columns["VisitDay"];
                this.columnAttended = base.Columns["Attended"];
                this.columnPrepared = base.Columns["Prepared"];
                this.columnTransferd = base.Columns["Transferd"];
                this.columnIsCurrent = base.Columns["IsCurrent"];
                this.columnTakeService = base.Columns["TakeService"];
                this.columnBookingTimeString = base.Columns["BookingTimeString"];
                this.columnSubServiceName = base.Columns["SubServiceName"];
                this.columnAge = base.Columns["Age"];
                this.columnPFileID = base.Columns["PFileID"];
                this.columnProfileNotes = base.Columns["ProfileNotes"];
                this.columnOldID = base.Columns["OldID"];
                this.columnArchiveLocation = base.Columns["ArchiveLocation"];
                this.columnGetFile = base.Columns["GetFile"];
                this.columnAddress = base.Columns["Address"];
                this.columnAttendTime = base.Columns["AttendTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRecordSerial = new global::System.Data.DataColumn("RecordSerial", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordSerial);
                this.columnPID = new global::System.Data.DataColumn("PID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPID);
                this.columnPatientName = new global::System.Data.DataColumn("PatientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientName);
                this.columnDrID = new global::System.Data.DataColumn("DrID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrID);
                this.columnDrName = new global::System.Data.DataColumn("DrName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrName);
                this.columnClinicID = new global::System.Data.DataColumn("ClinicID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClinicID);
                this.columnClinicTitle = new global::System.Data.DataColumn("ClinicTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClinicTitle);
                this.columnVisitDate = new global::System.Data.DataColumn("VisitDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitDate);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.columnIsEstshara = new global::System.Data.DataColumn("IsEstshara", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsEstshara);
                this.columnEnterOrder = new global::System.Data.DataColumn("EnterOrder", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnterOrder);
                this.columnIsAchived = new global::System.Data.DataColumn("IsAchived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAchived);
                this.columnVisitCost = new global::System.Data.DataColumn("VisitCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitCost);
                this.columnHadPayied = new global::System.Data.DataColumn("HadPayied", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHadPayied);
                this.columnServiceLevelID = new global::System.Data.DataColumn("ServiceLevelID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceLevelID);
                this.columnAmountPaid = new global::System.Data.DataColumn("AmountPaid", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountPaid);
                this.columnAccountBalance = new global::System.Data.DataColumn("AccountBalance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountBalance);
                this.columnInvoiceDetailsRecordID = new global::System.Data.DataColumn("InvoiceDetailsRecordID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceDetailsRecordID);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnRCDate = new global::System.Data.DataColumn("RCDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRCDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnLADate = new global::System.Data.DataColumn("LADate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLADate);
                this.columnREye = new global::System.Data.DataColumn("REye", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREye);
                this.columnLEye = new global::System.Data.DataColumn("LEye", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLEye);
                this.columnLate = new global::System.Data.DataColumn("Late", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLate);
                this.columnVisitDay = new global::System.Data.DataColumn("VisitDay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitDay);
                this.columnAttended = new global::System.Data.DataColumn("Attended", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttended);
                this.columnPrepared = new global::System.Data.DataColumn("Prepared", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrepared);
                this.columnTransferd = new global::System.Data.DataColumn("Transferd", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferd);
                this.columnIsCurrent = new global::System.Data.DataColumn("IsCurrent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCurrent);
                this.columnTakeService = new global::System.Data.DataColumn("TakeService", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTakeService);
                this.columnBookingTimeString = new global::System.Data.DataColumn("BookingTimeString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingTimeString);
                this.columnSubServiceName = new global::System.Data.DataColumn("SubServiceName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubServiceName);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnPFileID = new global::System.Data.DataColumn("PFileID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPFileID);
                this.columnProfileNotes = new global::System.Data.DataColumn("ProfileNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfileNotes);
                this.columnOldID = new global::System.Data.DataColumn("OldID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldID);
                this.columnArchiveLocation = new global::System.Data.DataColumn("ArchiveLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchiveLocation);
                this.columnGetFile = new global::System.Data.DataColumn("GetFile", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGetFile);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnAttendTime = new global::System.Data.DataColumn("AttendTime", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendTime);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRecordSerial}, true));
                this.columnRecordSerial.AutoIncrement = true;
                this.columnRecordSerial.AutoIncrementSeed = -1;
                this.columnRecordSerial.AutoIncrementStep = -1;
                this.columnRecordSerial.AllowDBNull = false;
                this.columnRecordSerial.ReadOnly = true;
                this.columnRecordSerial.Unique = true;
                this.columnPatientName.AllowDBNull = false;
                this.columnPatientName.MaxLength = 2147483647;
                this.columnDrName.AllowDBNull = false;
                this.columnDrName.MaxLength = 50;
                this.columnClinicTitle.MaxLength = 50;
                this.columnNotes.MaxLength = 2147483647;
                this.columnIsEstshara.AllowDBNull = false;
                this.columnIsAchived.AllowDBNull = false;
                this.columnHadPayied.AllowDBNull = false;
                this.columnServiceLevelID.AllowDBNull = false;
                this.columnAccountBalance.ReadOnly = true;
                this.columnCreatedBy.MaxLength = 50;
                this.columnModifiedBy.MaxLength = 50;
                this.columnLate.ReadOnly = true;
                this.columnVisitDay.ReadOnly = true;
                this.columnVisitDay.MaxLength = 30;
                this.columnBookingTimeString.MaxLength = 50;
                this.columnSubServiceName.MaxLength = 2147483647;
                this.columnAge.ReadOnly = true;
                this.columnAge.MaxLength = 2147483647;
                this.columnPFileID.MaxLength = 50;
                this.columnProfileNotes.MaxLength = 2147483647;
                this.columnOldID.MaxLength = 50;
                this.columnArchiveLocation.MaxLength = 50;
                this.columnAddress.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RreservationGrid1Row NewRreservationGrid1Row() {
                return ((RreservationGrid1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RreservationGrid1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RreservationGrid1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RreservationGrid1RowChanged != null)) {
                    this.RreservationGrid1RowChanged(this, new RreservationGrid1RowChangeEvent(((RreservationGrid1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RreservationGrid1RowChanging != null)) {
                    this.RreservationGrid1RowChanging(this, new RreservationGrid1RowChangeEvent(((RreservationGrid1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RreservationGrid1RowDeleted != null)) {
                    this.RreservationGrid1RowDeleted(this, new RreservationGrid1RowChangeEvent(((RreservationGrid1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RreservationGrid1RowDeleting != null)) {
                    this.RreservationGrid1RowDeleting(this, new RreservationGrid1RowChangeEvent(((RreservationGrid1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRreservationGrid1Row(RreservationGrid1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClinicReception ds = new ClinicReception();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RreservationGrid1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Clinic_Reservation_Lup_HourSlotDataTable : global::System.Data.TypedTableBase<Clinic_Reservation_Lup_HourSlotRow> {
            
            private global::System.Data.DataColumn columnHourSlotID;
            
            private global::System.Data.DataColumn columnHourSlotTitle;
            
            private global::System.Data.DataColumn columnHourAsTime;
            
            private global::System.Data.DataColumn columnRealHour;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Reservation_Lup_HourSlotDataTable() {
                this.TableName = "Clinic_Reservation_Lup_HourSlot";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Clinic_Reservation_Lup_HourSlotDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Clinic_Reservation_Lup_HourSlotDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HourSlotIDColumn {
                get {
                    return this.columnHourSlotID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HourSlotTitleColumn {
                get {
                    return this.columnHourSlotTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HourAsTimeColumn {
                get {
                    return this.columnHourAsTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RealHourColumn {
                get {
                    return this.columnRealHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Reservation_Lup_HourSlotRow this[int index] {
                get {
                    return ((Clinic_Reservation_Lup_HourSlotRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Clinic_Reservation_Lup_HourSlotRowChangeEventHandler Clinic_Reservation_Lup_HourSlotRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Clinic_Reservation_Lup_HourSlotRowChangeEventHandler Clinic_Reservation_Lup_HourSlotRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Clinic_Reservation_Lup_HourSlotRowChangeEventHandler Clinic_Reservation_Lup_HourSlotRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Clinic_Reservation_Lup_HourSlotRowChangeEventHandler Clinic_Reservation_Lup_HourSlotRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddClinic_Reservation_Lup_HourSlotRow(Clinic_Reservation_Lup_HourSlotRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Reservation_Lup_HourSlotRow AddClinic_Reservation_Lup_HourSlotRow(byte HourSlotID, string HourSlotTitle, System.TimeSpan HourAsTime, System.TimeSpan RealHour) {
                Clinic_Reservation_Lup_HourSlotRow rowClinic_Reservation_Lup_HourSlotRow = ((Clinic_Reservation_Lup_HourSlotRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HourSlotID,
                        HourSlotTitle,
                        HourAsTime,
                        RealHour};
                rowClinic_Reservation_Lup_HourSlotRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowClinic_Reservation_Lup_HourSlotRow);
                return rowClinic_Reservation_Lup_HourSlotRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Reservation_Lup_HourSlotRow FindByHourSlotID(byte HourSlotID) {
                return ((Clinic_Reservation_Lup_HourSlotRow)(this.Rows.Find(new object[] {
                            HourSlotID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Clinic_Reservation_Lup_HourSlotDataTable cln = ((Clinic_Reservation_Lup_HourSlotDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Clinic_Reservation_Lup_HourSlotDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnHourSlotID = base.Columns["HourSlotID"];
                this.columnHourSlotTitle = base.Columns["HourSlotTitle"];
                this.columnHourAsTime = base.Columns["HourAsTime"];
                this.columnRealHour = base.Columns["RealHour"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnHourSlotID = new global::System.Data.DataColumn("HourSlotID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHourSlotID);
                this.columnHourSlotTitle = new global::System.Data.DataColumn("HourSlotTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHourSlotTitle);
                this.columnHourAsTime = new global::System.Data.DataColumn("HourAsTime", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHourAsTime);
                this.columnRealHour = new global::System.Data.DataColumn("RealHour", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRealHour);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnHourSlotID}, true));
                this.columnHourSlotID.AllowDBNull = false;
                this.columnHourSlotID.Unique = true;
                this.columnHourSlotTitle.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Reservation_Lup_HourSlotRow NewClinic_Reservation_Lup_HourSlotRow() {
                return ((Clinic_Reservation_Lup_HourSlotRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Clinic_Reservation_Lup_HourSlotRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Clinic_Reservation_Lup_HourSlotRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Clinic_Reservation_Lup_HourSlotRowChanged != null)) {
                    this.Clinic_Reservation_Lup_HourSlotRowChanged(this, new Clinic_Reservation_Lup_HourSlotRowChangeEvent(((Clinic_Reservation_Lup_HourSlotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Clinic_Reservation_Lup_HourSlotRowChanging != null)) {
                    this.Clinic_Reservation_Lup_HourSlotRowChanging(this, new Clinic_Reservation_Lup_HourSlotRowChangeEvent(((Clinic_Reservation_Lup_HourSlotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Clinic_Reservation_Lup_HourSlotRowDeleted != null)) {
                    this.Clinic_Reservation_Lup_HourSlotRowDeleted(this, new Clinic_Reservation_Lup_HourSlotRowChangeEvent(((Clinic_Reservation_Lup_HourSlotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Clinic_Reservation_Lup_HourSlotRowDeleting != null)) {
                    this.Clinic_Reservation_Lup_HourSlotRowDeleting(this, new Clinic_Reservation_Lup_HourSlotRowChangeEvent(((Clinic_Reservation_Lup_HourSlotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveClinic_Reservation_Lup_HourSlotRow(Clinic_Reservation_Lup_HourSlotRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClinicReception ds = new ClinicReception();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Clinic_Reservation_Lup_HourSlotDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Grid_ClinicTimeTableRow : global::System.Data.DataRow {
            
            private Grid_ClinicTimeTableDataTable tableGrid_ClinicTimeTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Grid_ClinicTimeTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGrid_ClinicTimeTable = ((Grid_ClinicTimeTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short RecordSerial {
                get {
                    return ((short)(this[this.tableGrid_ClinicTimeTable.RecordSerialColumn]));
                }
                set {
                    this[this.tableGrid_ClinicTimeTable.RecordSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ClinicID {
                get {
                    try {
                        return ((byte)(this[this.tableGrid_ClinicTimeTable.ClinicIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClinicID\' in table \'Grid_ClinicTimeTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGrid_ClinicTimeTable.ClinicIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClinicTitle {
                get {
                    try {
                        return ((string)(this[this.tableGrid_ClinicTimeTable.ClinicTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClinicTitle\' in table \'Grid_ClinicTimeTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGrid_ClinicTimeTable.ClinicTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short DrID {
                get {
                    try {
                        return ((short)(this[this.tableGrid_ClinicTimeTable.DrIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrID\' in table \'Grid_ClinicTimeTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGrid_ClinicTimeTable.DrIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrName {
                get {
                    return ((string)(this[this.tableGrid_ClinicTimeTable.DrNameColumn]));
                }
                set {
                    this[this.tableGrid_ClinicTimeTable.DrNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MedicalDgreeTitle {
                get {
                    return ((string)(this[this.tableGrid_ClinicTimeTable.MedicalDgreeTitleColumn]));
                }
                set {
                    this[this.tableGrid_ClinicTimeTable.MedicalDgreeTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TimeFragment {
                get {
                    try {
                        return ((string)(this[this.tableGrid_ClinicTimeTable.TimeFragmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimeFragment\' in table \'Grid_ClinicTimeTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGrid_ClinicTimeTable.TimeFragmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeleted {
                get {
                    return ((bool)(this[this.tableGrid_ClinicTimeTable.IsDeletedColumn]));
                }
                set {
                    this[this.tableGrid_ClinicTimeTable.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AvalableDates {
                get {
                    try {
                        return ((string)(this[this.tableGrid_ClinicTimeTable.AvalableDatesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AvalableDates\' in table \'Grid_ClinicTimeTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGrid_ClinicTimeTable.AvalableDatesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tableGrid_ClinicTimeTable.NotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Notes\' in table \'Grid_ClinicTimeTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGrid_ClinicTimeTable.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClinicIDNull() {
                return this.IsNull(this.tableGrid_ClinicTimeTable.ClinicIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClinicIDNull() {
                this[this.tableGrid_ClinicTimeTable.ClinicIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClinicTitleNull() {
                return this.IsNull(this.tableGrid_ClinicTimeTable.ClinicTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClinicTitleNull() {
                this[this.tableGrid_ClinicTimeTable.ClinicTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrIDNull() {
                return this.IsNull(this.tableGrid_ClinicTimeTable.DrIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrIDNull() {
                this[this.tableGrid_ClinicTimeTable.DrIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTimeFragmentNull() {
                return this.IsNull(this.tableGrid_ClinicTimeTable.TimeFragmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTimeFragmentNull() {
                this[this.tableGrid_ClinicTimeTable.TimeFragmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAvalableDatesNull() {
                return this.IsNull(this.tableGrid_ClinicTimeTable.AvalableDatesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAvalableDatesNull() {
                this[this.tableGrid_ClinicTimeTable.AvalableDatesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNotesNull() {
                return this.IsNull(this.tableGrid_ClinicTimeTable.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNotesNull() {
                this[this.tableGrid_ClinicTimeTable.NotesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RreservationGridRow : global::System.Data.DataRow {
            
            private RreservationGridDataTable tableRreservationGrid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RreservationGridRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRreservationGrid = ((RreservationGridDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RecordSerial {
                get {
                    return ((int)(this[this.tableRreservationGrid.RecordSerialColumn]));
                }
                set {
                    this[this.tableRreservationGrid.RecordSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PID {
                get {
                    try {
                        return ((long)(this[this.tableRreservationGrid.PIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PID\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.PIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientName {
                get {
                    return ((string)(this[this.tableRreservationGrid.PatientNameColumn]));
                }
                set {
                    this[this.tableRreservationGrid.PatientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short DrID {
                get {
                    try {
                        return ((short)(this[this.tableRreservationGrid.DrIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrID\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.DrIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrName {
                get {
                    return ((string)(this[this.tableRreservationGrid.DrNameColumn]));
                }
                set {
                    this[this.tableRreservationGrid.DrNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ClinicID {
                get {
                    try {
                        return ((byte)(this[this.tableRreservationGrid.ClinicIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClinicID\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.ClinicIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClinicTitle {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid.ClinicTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClinicTitle\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.ClinicTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime VisitDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRreservationGrid.VisitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitDate\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.VisitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid.NotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Notes\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstshara {
                get {
                    return ((bool)(this[this.tableRreservationGrid.IsEstsharaColumn]));
                }
                set {
                    this[this.tableRreservationGrid.IsEstsharaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte EnterOrder {
                get {
                    try {
                        return ((byte)(this[this.tableRreservationGrid.EnterOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnterOrder\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.EnterOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAchived {
                get {
                    return ((bool)(this[this.tableRreservationGrid.IsAchivedColumn]));
                }
                set {
                    this[this.tableRreservationGrid.IsAchivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VisitCost {
                get {
                    try {
                        return ((decimal)(this[this.tableRreservationGrid.VisitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitCost\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.VisitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool HadPayied {
                get {
                    return ((bool)(this[this.tableRreservationGrid.HadPayiedColumn]));
                }
                set {
                    this[this.tableRreservationGrid.HadPayiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ServiceLevelID {
                get {
                    return ((byte)(this[this.tableRreservationGrid.ServiceLevelIDColumn]));
                }
                set {
                    this[this.tableRreservationGrid.ServiceLevelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AmountPaid {
                get {
                    try {
                        return ((decimal)(this[this.tableRreservationGrid.AmountPaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountPaid\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.AmountPaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AccountBalance {
                get {
                    try {
                        return ((decimal)(this[this.tableRreservationGrid.AccountBalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountBalance\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.AccountBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InvoiceDetailsRecordID {
                get {
                    try {
                        return ((int)(this[this.tableRreservationGrid.InvoiceDetailsRecordIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceDetailsRecordID\' in table \'RreservationGrid\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.InvoiceDetailsRecordIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CreatedBy {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RCDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRreservationGrid.RCDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RCDate\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.RCDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ModifiedBy {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid.ModifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedBy\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LADate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRreservationGrid.LADateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LADate\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.LADateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool REye {
                get {
                    try {
                        return ((bool)(this[this.tableRreservationGrid.REyeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REye\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.REyeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool LEye {
                get {
                    try {
                        return ((bool)(this[this.tableRreservationGrid.LEyeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LEye\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.LEyeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Late {
                get {
                    try {
                        return ((decimal)(this[this.tableRreservationGrid.LateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Late\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.LateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VisitDay {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid.VisitDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitDay\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.VisitDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Attended {
                get {
                    try {
                        return ((bool)(this[this.tableRreservationGrid.AttendedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Attended\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.AttendedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Prepared {
                get {
                    try {
                        return ((bool)(this[this.tableRreservationGrid.PreparedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prepared\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.PreparedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Transferd {
                get {
                    try {
                        return ((bool)(this[this.tableRreservationGrid.TransferdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transferd\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.TransferdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrent {
                get {
                    try {
                        return ((bool)(this[this.tableRreservationGrid.IsCurrentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCurrent\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.IsCurrentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TakeService {
                get {
                    try {
                        return ((bool)(this[this.tableRreservationGrid.TakeServiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TakeService\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.TakeServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BookingTimeString {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid.BookingTimeStringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookingTimeString\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.BookingTimeStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubServiceName {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid.SubServiceNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubServiceName\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.SubServiceNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Age {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PFileID {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid.PFileIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PFileID\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.PFileIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProfileNotes {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid.ProfileNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProfileNotes\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.ProfileNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OldID {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid.OldIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OldID\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.OldIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArchiveLocation {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid.ArchiveLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArchiveLocation\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.ArchiveLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GetFile {
                get {
                    try {
                        return ((bool)(this[this.tableRreservationGrid.GetFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GetFile\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.GetFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HourSlotTitle {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid.HourSlotTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HourSlotTitle\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.HourSlotTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AccountTitle {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid.AccountTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountTitle\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.AccountTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AttendTime {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid.AttendTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttendTime\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.AttendTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short AttendOrder {
                get {
                    try {
                        return ((short)(this[this.tableRreservationGrid.AttendOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttendOrder\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.AttendOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaiedString {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid.PaiedStringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaiedString\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.PaiedStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short DailyTransSerial {
                get {
                    try {
                        return ((short)(this[this.tableRreservationGrid.DailyTransSerialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DailyTransSerial\' in table \'RreservationGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid.DailyTransSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPIDNull() {
                return this.IsNull(this.tableRreservationGrid.PIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPIDNull() {
                this[this.tableRreservationGrid.PIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrIDNull() {
                return this.IsNull(this.tableRreservationGrid.DrIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrIDNull() {
                this[this.tableRreservationGrid.DrIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClinicIDNull() {
                return this.IsNull(this.tableRreservationGrid.ClinicIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClinicIDNull() {
                this[this.tableRreservationGrid.ClinicIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClinicTitleNull() {
                return this.IsNull(this.tableRreservationGrid.ClinicTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClinicTitleNull() {
                this[this.tableRreservationGrid.ClinicTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitDateNull() {
                return this.IsNull(this.tableRreservationGrid.VisitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitDateNull() {
                this[this.tableRreservationGrid.VisitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNotesNull() {
                return this.IsNull(this.tableRreservationGrid.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNotesNull() {
                this[this.tableRreservationGrid.NotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnterOrderNull() {
                return this.IsNull(this.tableRreservationGrid.EnterOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnterOrderNull() {
                this[this.tableRreservationGrid.EnterOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitCostNull() {
                return this.IsNull(this.tableRreservationGrid.VisitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitCostNull() {
                this[this.tableRreservationGrid.VisitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmountPaidNull() {
                return this.IsNull(this.tableRreservationGrid.AmountPaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmountPaidNull() {
                this[this.tableRreservationGrid.AmountPaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountBalanceNull() {
                return this.IsNull(this.tableRreservationGrid.AccountBalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountBalanceNull() {
                this[this.tableRreservationGrid.AccountBalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceDetailsRecordIDNull() {
                return this.IsNull(this.tableRreservationGrid.InvoiceDetailsRecordIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceDetailsRecordIDNull() {
                this[this.tableRreservationGrid.InvoiceDetailsRecordIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableRreservationGrid.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatedByNull() {
                this[this.tableRreservationGrid.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRCDateNull() {
                return this.IsNull(this.tableRreservationGrid.RCDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRCDateNull() {
                this[this.tableRreservationGrid.RCDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModifiedByNull() {
                return this.IsNull(this.tableRreservationGrid.ModifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModifiedByNull() {
                this[this.tableRreservationGrid.ModifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLADateNull() {
                return this.IsNull(this.tableRreservationGrid.LADateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLADateNull() {
                this[this.tableRreservationGrid.LADateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREyeNull() {
                return this.IsNull(this.tableRreservationGrid.REyeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREyeNull() {
                this[this.tableRreservationGrid.REyeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLEyeNull() {
                return this.IsNull(this.tableRreservationGrid.LEyeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLEyeNull() {
                this[this.tableRreservationGrid.LEyeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLateNull() {
                return this.IsNull(this.tableRreservationGrid.LateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLateNull() {
                this[this.tableRreservationGrid.LateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitDayNull() {
                return this.IsNull(this.tableRreservationGrid.VisitDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitDayNull() {
                this[this.tableRreservationGrid.VisitDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAttendedNull() {
                return this.IsNull(this.tableRreservationGrid.AttendedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAttendedNull() {
                this[this.tableRreservationGrid.AttendedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPreparedNull() {
                return this.IsNull(this.tableRreservationGrid.PreparedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPreparedNull() {
                this[this.tableRreservationGrid.PreparedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransferdNull() {
                return this.IsNull(this.tableRreservationGrid.TransferdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransferdNull() {
                this[this.tableRreservationGrid.TransferdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsCurrentNull() {
                return this.IsNull(this.tableRreservationGrid.IsCurrentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsCurrentNull() {
                this[this.tableRreservationGrid.IsCurrentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTakeServiceNull() {
                return this.IsNull(this.tableRreservationGrid.TakeServiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTakeServiceNull() {
                this[this.tableRreservationGrid.TakeServiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBookingTimeStringNull() {
                return this.IsNull(this.tableRreservationGrid.BookingTimeStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBookingTimeStringNull() {
                this[this.tableRreservationGrid.BookingTimeStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubServiceNameNull() {
                return this.IsNull(this.tableRreservationGrid.SubServiceNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubServiceNameNull() {
                this[this.tableRreservationGrid.SubServiceNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeNull() {
                return this.IsNull(this.tableRreservationGrid.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeNull() {
                this[this.tableRreservationGrid.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPFileIDNull() {
                return this.IsNull(this.tableRreservationGrid.PFileIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPFileIDNull() {
                this[this.tableRreservationGrid.PFileIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProfileNotesNull() {
                return this.IsNull(this.tableRreservationGrid.ProfileNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProfileNotesNull() {
                this[this.tableRreservationGrid.ProfileNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOldIDNull() {
                return this.IsNull(this.tableRreservationGrid.OldIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOldIDNull() {
                this[this.tableRreservationGrid.OldIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArchiveLocationNull() {
                return this.IsNull(this.tableRreservationGrid.ArchiveLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArchiveLocationNull() {
                this[this.tableRreservationGrid.ArchiveLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGetFileNull() {
                return this.IsNull(this.tableRreservationGrid.GetFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGetFileNull() {
                this[this.tableRreservationGrid.GetFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddressNull() {
                return this.IsNull(this.tableRreservationGrid.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddressNull() {
                this[this.tableRreservationGrid.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHourSlotTitleNull() {
                return this.IsNull(this.tableRreservationGrid.HourSlotTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHourSlotTitleNull() {
                this[this.tableRreservationGrid.HourSlotTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountTitleNull() {
                return this.IsNull(this.tableRreservationGrid.AccountTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountTitleNull() {
                this[this.tableRreservationGrid.AccountTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAttendTimeNull() {
                return this.IsNull(this.tableRreservationGrid.AttendTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAttendTimeNull() {
                this[this.tableRreservationGrid.AttendTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAttendOrderNull() {
                return this.IsNull(this.tableRreservationGrid.AttendOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAttendOrderNull() {
                this[this.tableRreservationGrid.AttendOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaiedStringNull() {
                return this.IsNull(this.tableRreservationGrid.PaiedStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaiedStringNull() {
                this[this.tableRreservationGrid.PaiedStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDailyTransSerialNull() {
                return this.IsNull(this.tableRreservationGrid.DailyTransSerialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDailyTransSerialNull() {
                this[this.tableRreservationGrid.DailyTransSerialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Bsk_ReservationTableRow[] GetClinic_Bsk_ReservationTableRows() {
                if ((this.Table.ChildRelations["FK_Msk_ReservationTable_Bsk_ClinicList1"] == null)) {
                    return new Clinic_Bsk_ReservationTableRow[0];
                }
                else {
                    return ((Clinic_Bsk_ReservationTableRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Msk_ReservationTable_Bsk_ClinicList1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Clinic_Bsk_ReservationTableRow : global::System.Data.DataRow {
            
            private Clinic_Bsk_ReservationTableDataTable tableClinic_Bsk_ReservationTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Clinic_Bsk_ReservationTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClinic_Bsk_ReservationTable = ((Clinic_Bsk_ReservationTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short RecordSerial {
                get {
                    return ((short)(this[this.tableClinic_Bsk_ReservationTable.RecordSerialColumn]));
                }
                set {
                    this[this.tableClinic_Bsk_ReservationTable.RecordSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short DrID {
                get {
                    try {
                        return ((short)(this[this.tableClinic_Bsk_ReservationTable.DrIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrID\' in table \'Clinic_Bsk_ReservationTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClinic_Bsk_ReservationTable.DrIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ClinicID {
                get {
                    try {
                        return ((byte)(this[this.tableClinic_Bsk_ReservationTable.ClinicIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClinicID\' in table \'Clinic_Bsk_ReservationTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableClinic_Bsk_ReservationTable.ClinicIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime VisitDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClinic_Bsk_ReservationTable.VisitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitDate\' in table \'Clinic_Bsk_ReservationTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableClinic_Bsk_ReservationTable.VisitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstshara {
                get {
                    return ((bool)(this[this.tableClinic_Bsk_ReservationTable.IsEstsharaColumn]));
                }
                set {
                    this[this.tableClinic_Bsk_ReservationTable.IsEstsharaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SinceInDays {
                get {
                    try {
                        return ((int)(this[this.tableClinic_Bsk_ReservationTable.SinceInDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SinceInDays\' in table \'Clinic_Bsk_ReservationTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableClinic_Bsk_ReservationTable.SinceInDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PID {
                get {
                    try {
                        return ((long)(this[this.tableClinic_Bsk_ReservationTable.PIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PID\' in table \'Clinic_Bsk_ReservationTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClinic_Bsk_ReservationTable.PIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClinicDoctorsLinkRow ClinicDoctorsLinkRow {
                get {
                    return ((ClinicDoctorsLinkRow)(this.GetParentRow(this.Table.ParentRelations["FK_Msk_ReservationTable_Bsk_ClinicList"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Msk_ReservationTable_Bsk_ClinicList"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RreservationGridRow RreservationGridRow {
                get {
                    return ((RreservationGridRow)(this.GetParentRow(this.Table.ParentRelations["FK_Msk_ReservationTable_Bsk_ClinicList1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Msk_ReservationTable_Bsk_ClinicList1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClinicListGridRow ClinicListGridRow {
                get {
                    return ((ClinicListGridRow)(this.GetParentRow(this.Table.ParentRelations["FK_Msk_ReservationTable_Bsk_ClinicList2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Msk_ReservationTable_Bsk_ClinicList2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMR_PF_BasicRow EMR_PF_BasicRow {
                get {
                    return ((EMR_PF_BasicRow)(this.GetParentRow(this.Table.ParentRelations["FK_Msk_ReservationTable_EMR_PF_Basic"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Msk_ReservationTable_EMR_PF_Basic"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RreservationGrid1Row RreservationGrid1Row {
                get {
                    return ((RreservationGrid1Row)(this.GetParentRow(this.Table.ParentRelations["FK_Msk_ReservationTable_Bsk_ClinicList3"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Msk_ReservationTable_Bsk_ClinicList3"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrIDNull() {
                return this.IsNull(this.tableClinic_Bsk_ReservationTable.DrIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrIDNull() {
                this[this.tableClinic_Bsk_ReservationTable.DrIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClinicIDNull() {
                return this.IsNull(this.tableClinic_Bsk_ReservationTable.ClinicIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClinicIDNull() {
                this[this.tableClinic_Bsk_ReservationTable.ClinicIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitDateNull() {
                return this.IsNull(this.tableClinic_Bsk_ReservationTable.VisitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitDateNull() {
                this[this.tableClinic_Bsk_ReservationTable.VisitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSinceInDaysNull() {
                return this.IsNull(this.tableClinic_Bsk_ReservationTable.SinceInDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSinceInDaysNull() {
                this[this.tableClinic_Bsk_ReservationTable.SinceInDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPIDNull() {
                return this.IsNull(this.tableClinic_Bsk_ReservationTable.PIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPIDNull() {
                this[this.tableClinic_Bsk_ReservationTable.PIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ClinicDoctorsLinkRow : global::System.Data.DataRow {
            
            private ClinicDoctorsLinkDataTable tableClinicDoctorsLink;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ClinicDoctorsLinkRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClinicDoctorsLink = ((ClinicDoctorsLinkDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClinicTitle {
                get {
                    try {
                        return ((string)(this[this.tableClinicDoctorsLink.ClinicTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClinicTitle\' in table \'ClinicDoctorsLink\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClinicDoctorsLink.ClinicTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrName {
                get {
                    return ((string)(this[this.tableClinicDoctorsLink.DrNameColumn]));
                }
                set {
                    this[this.tableClinicDoctorsLink.DrNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VisitCost {
                get {
                    return ((decimal)(this[this.tableClinicDoctorsLink.VisitCostColumn]));
                }
                set {
                    this[this.tableClinicDoctorsLink.VisitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EstisharaCost {
                get {
                    return ((decimal)(this[this.tableClinicDoctorsLink.EstisharaCostColumn]));
                }
                set {
                    this[this.tableClinicDoctorsLink.EstisharaCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte EstisharaLenght {
                get {
                    return ((byte)(this[this.tableClinicDoctorsLink.EstisharaLenghtColumn]));
                }
                set {
                    this[this.tableClinicDoctorsLink.EstisharaLenghtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ClinicID {
                get {
                    return ((byte)(this[this.tableClinicDoctorsLink.ClinicIDColumn]));
                }
                set {
                    this[this.tableClinicDoctorsLink.ClinicIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short DoctorID {
                get {
                    return ((short)(this[this.tableClinicDoctorsLink.DoctorIDColumn]));
                }
                set {
                    this[this.tableClinicDoctorsLink.DoctorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short RecordSerial {
                get {
                    return ((short)(this[this.tableClinicDoctorsLink.RecordSerialColumn]));
                }
                set {
                    this[this.tableClinicDoctorsLink.RecordSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ServiceLevelID {
                get {
                    return ((byte)(this[this.tableClinicDoctorsLink.ServiceLevelIDColumn]));
                }
                set {
                    this[this.tableClinicDoctorsLink.ServiceLevelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Clinic_ServiceLevelTitle {
                get {
                    return ((string)(this[this.tableClinicDoctorsLink.Clinic_ServiceLevelTitleColumn]));
                }
                set {
                    this[this.tableClinicDoctorsLink.Clinic_ServiceLevelTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HospitalShare {
                get {
                    try {
                        return ((decimal)(this[this.tableClinicDoctorsLink.HospitalShareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HospitalShare\' in table \'ClinicDoctorsLink\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClinicDoctorsLink.HospitalShareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DrShare {
                get {
                    try {
                        return ((decimal)(this[this.tableClinicDoctorsLink.DrShareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrShare\' in table \'ClinicDoctorsLink\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClinicDoctorsLink.DrShareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short LinkedVisitServiceID {
                get {
                    try {
                        return ((short)(this[this.tableClinicDoctorsLink.LinkedVisitServiceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinkedVisitServiceID\' in table \'ClinicDoctorsLink\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableClinicDoctorsLink.LinkedVisitServiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short LinkedEstsharServiceID {
                get {
                    try {
                        return ((short)(this[this.tableClinicDoctorsLink.LinkedEstsharServiceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinkedEstsharServiceID\' in table \'ClinicDoctorsLink\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableClinicDoctorsLink.LinkedEstsharServiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LinkedVisitServiceID1 {
                get {
                    try {
                        return ((int)(this[this.tableClinicDoctorsLink.LinkedVisitServiceID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinkedVisitServiceID1\' in table \'ClinicDoctorsLink\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableClinicDoctorsLink.LinkedVisitServiceID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LinkedEstsharServiceID1 {
                get {
                    try {
                        return ((int)(this[this.tableClinicDoctorsLink.LinkedEstsharServiceID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinkedEstsharServiceID1\' in table \'ClinicDoctorsLink\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableClinicDoctorsLink.LinkedEstsharServiceID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ItemOrgID {
                get {
                    try {
                        return ((int)(this[this.tableClinicDoctorsLink.ItemOrgIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemOrgID\' in table \'ClinicDoctorsLink\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClinicDoctorsLink.ItemOrgIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VisitService {
                get {
                    try {
                        return ((string)(this[this.tableClinicDoctorsLink.VisitServiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitService\' in table \'ClinicDoctorsLink\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClinicDoctorsLink.VisitServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EstsharaService {
                get {
                    try {
                        return ((string)(this[this.tableClinicDoctorsLink.EstsharaServiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstsharaService\' in table \'ClinicDoctorsLink\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClinicDoctorsLink.EstsharaServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClinicTitleNull() {
                return this.IsNull(this.tableClinicDoctorsLink.ClinicTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClinicTitleNull() {
                this[this.tableClinicDoctorsLink.ClinicTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHospitalShareNull() {
                return this.IsNull(this.tableClinicDoctorsLink.HospitalShareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHospitalShareNull() {
                this[this.tableClinicDoctorsLink.HospitalShareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrShareNull() {
                return this.IsNull(this.tableClinicDoctorsLink.DrShareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrShareNull() {
                this[this.tableClinicDoctorsLink.DrShareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLinkedVisitServiceIDNull() {
                return this.IsNull(this.tableClinicDoctorsLink.LinkedVisitServiceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLinkedVisitServiceIDNull() {
                this[this.tableClinicDoctorsLink.LinkedVisitServiceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLinkedEstsharServiceIDNull() {
                return this.IsNull(this.tableClinicDoctorsLink.LinkedEstsharServiceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLinkedEstsharServiceIDNull() {
                this[this.tableClinicDoctorsLink.LinkedEstsharServiceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLinkedVisitServiceID1Null() {
                return this.IsNull(this.tableClinicDoctorsLink.LinkedVisitServiceID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLinkedVisitServiceID1Null() {
                this[this.tableClinicDoctorsLink.LinkedVisitServiceID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLinkedEstsharServiceID1Null() {
                return this.IsNull(this.tableClinicDoctorsLink.LinkedEstsharServiceID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLinkedEstsharServiceID1Null() {
                this[this.tableClinicDoctorsLink.LinkedEstsharServiceID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItemOrgIDNull() {
                return this.IsNull(this.tableClinicDoctorsLink.ItemOrgIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItemOrgIDNull() {
                this[this.tableClinicDoctorsLink.ItemOrgIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitServiceNull() {
                return this.IsNull(this.tableClinicDoctorsLink.VisitServiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitServiceNull() {
                this[this.tableClinicDoctorsLink.VisitServiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstsharaServiceNull() {
                return this.IsNull(this.tableClinicDoctorsLink.EstsharaServiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEstsharaServiceNull() {
                this[this.tableClinicDoctorsLink.EstsharaServiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Bsk_ReservationTableRow[] GetClinic_Bsk_ReservationTableRows() {
                if ((this.Table.ChildRelations["FK_Msk_ReservationTable_Bsk_ClinicList"] == null)) {
                    return new Clinic_Bsk_ReservationTableRow[0];
                }
                else {
                    return ((Clinic_Bsk_ReservationTableRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Msk_ReservationTable_Bsk_ClinicList"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ClinicListGridRow : global::System.Data.DataRow {
            
            private ClinicListGridDataTable tableClinicListGrid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ClinicListGridRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClinicListGrid = ((ClinicListGridDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ClinicID {
                get {
                    return ((byte)(this[this.tableClinicListGrid.ClinicIDColumn]));
                }
                set {
                    this[this.tableClinicListGrid.ClinicIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClinicTitle {
                get {
                    try {
                        return ((string)(this[this.tableClinicListGrid.ClinicTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClinicTitle\' in table \'ClinicListGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClinicListGrid.ClinicTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ShowInReception {
                get {
                    return ((bool)(this[this.tableClinicListGrid.ShowInReceptionColumn]));
                }
                set {
                    this[this.tableClinicListGrid.ShowInReceptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] ClinicIcon {
                get {
                    try {
                        return ((byte[])(this[this.tableClinicListGrid.ClinicIconColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClinicIcon\' in table \'ClinicListGrid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClinicListGrid.ClinicIconColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClinicTitleNull() {
                return this.IsNull(this.tableClinicListGrid.ClinicTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClinicTitleNull() {
                this[this.tableClinicListGrid.ClinicTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClinicIconNull() {
                return this.IsNull(this.tableClinicListGrid.ClinicIconColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClinicIconNull() {
                this[this.tableClinicListGrid.ClinicIconColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Bsk_ReservationTableRow[] GetClinic_Bsk_ReservationTableRows() {
                if ((this.Table.ChildRelations["FK_Msk_ReservationTable_Bsk_ClinicList2"] == null)) {
                    return new Clinic_Bsk_ReservationTableRow[0];
                }
                else {
                    return ((Clinic_Bsk_ReservationTableRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Msk_ReservationTable_Bsk_ClinicList2"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DoctorDegreeRow : global::System.Data.DataRow {
            
            private DoctorDegreeDataTable tableDoctorDegree;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DoctorDegreeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDoctorDegree = ((DoctorDegreeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MedicalDgreeTitle {
                get {
                    return ((string)(this[this.tableDoctorDegree.MedicalDgreeTitleColumn]));
                }
                set {
                    this[this.tableDoctorDegree.MedicalDgreeTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short DrID {
                get {
                    return ((short)(this[this.tableDoctorDegree.DrIDColumn]));
                }
                set {
                    this[this.tableDoctorDegree.DrIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrName {
                get {
                    return ((string)(this[this.tableDoctorDegree.DrNameColumn]));
                }
                set {
                    this[this.tableDoctorDegree.DrNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeleted {
                get {
                    return ((bool)(this[this.tableDoctorDegree.IsDeletedColumn]));
                }
                set {
                    this[this.tableDoctorDegree.IsDeletedColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Clinic_Lup_MedicalDgreeListRow : global::System.Data.DataRow {
            
            private Clinic_Lup_MedicalDgreeListDataTable tableClinic_Lup_MedicalDgreeList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Clinic_Lup_MedicalDgreeListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClinic_Lup_MedicalDgreeList = ((Clinic_Lup_MedicalDgreeListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MedicalDgreeTitle {
                get {
                    return ((string)(this[this.tableClinic_Lup_MedicalDgreeList.MedicalDgreeTitleColumn]));
                }
                set {
                    this[this.tableClinic_Lup_MedicalDgreeList.MedicalDgreeTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte MedicalDgreeID {
                get {
                    return ((byte)(this[this.tableClinic_Lup_MedicalDgreeList.MedicalDgreeIDColumn]));
                }
                set {
                    this[this.tableClinic_Lup_MedicalDgreeList.MedicalDgreeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeleted {
                get {
                    return ((bool)(this[this.tableClinic_Lup_MedicalDgreeList.IsDeletedColumn]));
                }
                set {
                    this[this.tableClinic_Lup_MedicalDgreeList.IsDeletedColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RecepitionFinTransViewRow : global::System.Data.DataRow {
            
            private RecepitionFinTransViewDataTable tableRecepitionFinTransView;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RecepitionFinTransViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRecepitionFinTransView = ((RecepitionFinTransViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short RecordSerial {
                get {
                    return ((short)(this[this.tableRecepitionFinTransView.RecordSerialColumn]));
                }
                set {
                    this[this.tableRecepitionFinTransView.RecordSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime VisitDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRecepitionFinTransView.VisitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitDate\' in table \'RecepitionFinTransView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecepitionFinTransView.VisitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short PID {
                get {
                    try {
                        return ((short)(this[this.tableRecepitionFinTransView.PIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PID\' in table \'RecepitionFinTransView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecepitionFinTransView.PIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short DrID {
                get {
                    try {
                        return ((short)(this[this.tableRecepitionFinTransView.DrIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrID\' in table \'RecepitionFinTransView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecepitionFinTransView.DrIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ClinicID {
                get {
                    try {
                        return ((byte)(this[this.tableRecepitionFinTransView.ClinicIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClinicID\' in table \'RecepitionFinTransView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecepitionFinTransView.ClinicIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstshara {
                get {
                    return ((bool)(this[this.tableRecepitionFinTransView.IsEstsharaColumn]));
                }
                set {
                    this[this.tableRecepitionFinTransView.IsEstsharaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VisitCost {
                get {
                    try {
                        return ((decimal)(this[this.tableRecepitionFinTransView.VisitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitCost\' in table \'RecepitionFinTransView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecepitionFinTransView.VisitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ServiceLevelID {
                get {
                    return ((byte)(this[this.tableRecepitionFinTransView.ServiceLevelIDColumn]));
                }
                set {
                    this[this.tableRecepitionFinTransView.ServiceLevelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DrShareDiscount {
                get {
                    return ((bool)(this[this.tableRecepitionFinTransView.DrShareDiscountColumn]));
                }
                set {
                    this[this.tableRecepitionFinTransView.DrShareDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool HospitalShareDiscount {
                get {
                    return ((bool)(this[this.tableRecepitionFinTransView.HospitalShareDiscountColumn]));
                }
                set {
                    this[this.tableRecepitionFinTransView.HospitalShareDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DrValue {
                get {
                    try {
                        return ((decimal)(this[this.tableRecepitionFinTransView.DrValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrValue\' in table \'RecepitionFinTransView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecepitionFinTransView.DrValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HospitalValue {
                get {
                    try {
                        return ((decimal)(this[this.tableRecepitionFinTransView.HospitalValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HospitalValue\' in table \'RecepitionFinTransView\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRecepitionFinTransView.HospitalValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClinicTitle {
                get {
                    try {
                        return ((string)(this[this.tableRecepitionFinTransView.ClinicTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClinicTitle\' in table \'RecepitionFinTransView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecepitionFinTransView.ClinicTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrName {
                get {
                    return ((string)(this[this.tableRecepitionFinTransView.DrNameColumn]));
                }
                set {
                    this[this.tableRecepitionFinTransView.DrNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Clinic_ServiceLevelTitle {
                get {
                    return ((string)(this[this.tableRecepitionFinTransView.Clinic_ServiceLevelTitleColumn]));
                }
                set {
                    this[this.tableRecepitionFinTransView.Clinic_ServiceLevelTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientName {
                get {
                    return ((string)(this[this.tableRecepitionFinTransView.PatientNameColumn]));
                }
                set {
                    this[this.tableRecepitionFinTransView.PatientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VisitType {
                get {
                    try {
                        return ((string)(this[this.tableRecepitionFinTransView.VisitTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitType\' in table \'RecepitionFinTransView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecepitionFinTransView.VisitTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrShareStatus {
                get {
                    try {
                        return ((string)(this[this.tableRecepitionFinTransView.DrShareStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrShareStatus\' in table \'RecepitionFinTransView\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRecepitionFinTransView.DrShareStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AmountPaid {
                get {
                    try {
                        return ((decimal)(this[this.tableRecepitionFinTransView.AmountPaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountPaid\' in table \'RecepitionFinTransView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecepitionFinTransView.AmountPaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitDateNull() {
                return this.IsNull(this.tableRecepitionFinTransView.VisitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitDateNull() {
                this[this.tableRecepitionFinTransView.VisitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPIDNull() {
                return this.IsNull(this.tableRecepitionFinTransView.PIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPIDNull() {
                this[this.tableRecepitionFinTransView.PIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrIDNull() {
                return this.IsNull(this.tableRecepitionFinTransView.DrIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrIDNull() {
                this[this.tableRecepitionFinTransView.DrIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClinicIDNull() {
                return this.IsNull(this.tableRecepitionFinTransView.ClinicIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClinicIDNull() {
                this[this.tableRecepitionFinTransView.ClinicIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitCostNull() {
                return this.IsNull(this.tableRecepitionFinTransView.VisitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitCostNull() {
                this[this.tableRecepitionFinTransView.VisitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrValueNull() {
                return this.IsNull(this.tableRecepitionFinTransView.DrValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrValueNull() {
                this[this.tableRecepitionFinTransView.DrValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHospitalValueNull() {
                return this.IsNull(this.tableRecepitionFinTransView.HospitalValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHospitalValueNull() {
                this[this.tableRecepitionFinTransView.HospitalValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClinicTitleNull() {
                return this.IsNull(this.tableRecepitionFinTransView.ClinicTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClinicTitleNull() {
                this[this.tableRecepitionFinTransView.ClinicTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitTypeNull() {
                return this.IsNull(this.tableRecepitionFinTransView.VisitTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitTypeNull() {
                this[this.tableRecepitionFinTransView.VisitTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrShareStatusNull() {
                return this.IsNull(this.tableRecepitionFinTransView.DrShareStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrShareStatusNull() {
                this[this.tableRecepitionFinTransView.DrShareStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmountPaidNull() {
                return this.IsNull(this.tableRecepitionFinTransView.AmountPaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmountPaidNull() {
                this[this.tableRecepitionFinTransView.AmountPaidColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Combo_ReceptionDRListRow : global::System.Data.DataRow {
            
            private Combo_ReceptionDRListDataTable tableCombo_ReceptionDRList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Combo_ReceptionDRListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCombo_ReceptionDRList = ((Combo_ReceptionDRListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short RecordSerial {
                get {
                    return ((short)(this[this.tableCombo_ReceptionDRList.RecordSerialColumn]));
                }
                set {
                    this[this.tableCombo_ReceptionDRList.RecordSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ClinicID {
                get {
                    return ((byte)(this[this.tableCombo_ReceptionDRList.ClinicIDColumn]));
                }
                set {
                    this[this.tableCombo_ReceptionDRList.ClinicIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ServiceLevelID {
                get {
                    return ((byte)(this[this.tableCombo_ReceptionDRList.ServiceLevelIDColumn]));
                }
                set {
                    this[this.tableCombo_ReceptionDRList.ServiceLevelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short DoctorID {
                get {
                    return ((short)(this[this.tableCombo_ReceptionDRList.DoctorIDColumn]));
                }
                set {
                    this[this.tableCombo_ReceptionDRList.DoctorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrName {
                get {
                    return ((string)(this[this.tableCombo_ReceptionDRList.DrNameColumn]));
                }
                set {
                    this[this.tableCombo_ReceptionDRList.DrNameColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GridPullSamplesRow : global::System.Data.DataRow {
            
            private GridPullSamplesDataTable tableGridPullSamples;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GridPullSamplesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGridPullSamples = ((GridPullSamplesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short RequestID {
                get {
                    return ((short)(this[this.tableGridPullSamples.RequestIDColumn]));
                }
                set {
                    this[this.tableGridPullSamples.RequestIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short AnalysisID {
                get {
                    return ((short)(this[this.tableGridPullSamples.AnalysisIDColumn]));
                }
                set {
                    this[this.tableGridPullSamples.AnalysisIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AnalysisName {
                get {
                    try {
                        return ((string)(this[this.tableGridPullSamples.AnalysisNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnalysisName\' in table \'GridPullSamples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGridPullSamples.AnalysisNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeleted {
                get {
                    return ((bool)(this[this.tableGridPullSamples.IsDeletedColumn]));
                }
                set {
                    this[this.tableGridPullSamples.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PullOfSampleDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGridPullSamples.PullOfSampleDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PullOfSampleDate\' in table \'GridPullSamples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGridPullSamples.PullOfSampleDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SampleBarCode1 {
                get {
                    try {
                        return ((int)(this[this.tableGridPullSamples.SampleBarCode1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleBarCode1\' in table \'GridPullSamples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGridPullSamples.SampleBarCode1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SampleBarCode2 {
                get {
                    try {
                        return ((int)(this[this.tableGridPullSamples.SampleBarCode2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleBarCode2\' in table \'GridPullSamples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGridPullSamples.SampleBarCode2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SampleBarCode3 {
                get {
                    try {
                        return ((int)(this[this.tableGridPullSamples.SampleBarCode3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleBarCode3\' in table \'GridPullSamples\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGridPullSamples.SampleBarCode3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte NoOfSamples {
                get {
                    return ((byte)(this[this.tableGridPullSamples.NoOfSamplesColumn]));
                }
                set {
                    this[this.tableGridPullSamples.NoOfSamplesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnalysisNameNull() {
                return this.IsNull(this.tableGridPullSamples.AnalysisNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnalysisNameNull() {
                this[this.tableGridPullSamples.AnalysisNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPullOfSampleDateNull() {
                return this.IsNull(this.tableGridPullSamples.PullOfSampleDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPullOfSampleDateNull() {
                this[this.tableGridPullSamples.PullOfSampleDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSampleBarCode1Null() {
                return this.IsNull(this.tableGridPullSamples.SampleBarCode1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSampleBarCode1Null() {
                this[this.tableGridPullSamples.SampleBarCode1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSampleBarCode2Null() {
                return this.IsNull(this.tableGridPullSamples.SampleBarCode2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSampleBarCode2Null() {
                this[this.tableGridPullSamples.SampleBarCode2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSampleBarCode3Null() {
                return this.IsNull(this.tableGridPullSamples.SampleBarCode3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSampleBarCode3Null() {
                this[this.tableGridPullSamples.SampleBarCode3Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CountPatientRow : global::System.Data.DataRow {
            
            private CountPatientDataTable tableCountPatient;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CountPatientRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCountPatient = ((CountPatientDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TotalCount {
                get {
                    try {
                        return ((int)(this[this.tableCountPatient.TotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCount\' in table \'CountPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCountPatient.TotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalCountNull() {
                return this.IsNull(this.tableCountPatient.TotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalCountNull() {
                this[this.tableCountPatient.TotalCountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GridExaminationSerialRow : global::System.Data.DataRow {
            
            private GridExaminationSerialDataTable tableGridExaminationSerial;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GridExaminationSerialRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGridExaminationSerial = ((GridExaminationSerialDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RecordSerial {
                get {
                    return ((int)(this[this.tableGridExaminationSerial.RecordSerialColumn]));
                }
                set {
                    this[this.tableGridExaminationSerial.RecordSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short PID {
                get {
                    return ((short)(this[this.tableGridExaminationSerial.PIDColumn]));
                }
                set {
                    this[this.tableGridExaminationSerial.PIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientName {
                get {
                    return ((string)(this[this.tableGridExaminationSerial.PatientNameColumn]));
                }
                set {
                    this[this.tableGridExaminationSerial.PatientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExaminationName {
                get {
                    try {
                        return ((string)(this[this.tableGridExaminationSerial.ExaminationNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExaminationName\' in table \'GridExaminationSerial\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGridExaminationSerial.ExaminationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExaminationSerial {
                get {
                    try {
                        return ((string)(this[this.tableGridExaminationSerial.ExaminationSerialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExaminationSerial\' in table \'GridExaminationSerial\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGridExaminationSerial.ExaminationSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGridExaminationSerial.RDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RDate\' in table \'GridExaminationSerial\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGridExaminationSerial.RDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExaminationNameNull() {
                return this.IsNull(this.tableGridExaminationSerial.ExaminationNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExaminationNameNull() {
                this[this.tableGridExaminationSerial.ExaminationNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExaminationSerialNull() {
                return this.IsNull(this.tableGridExaminationSerial.ExaminationSerialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExaminationSerialNull() {
                this[this.tableGridExaminationSerial.ExaminationSerialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRDateNull() {
                return this.IsNull(this.tableGridExaminationSerial.RDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRDateNull() {
                this[this.tableGridExaminationSerial.RDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Inv_ItemsRow : global::System.Data.DataRow {
            
            private Inv_ItemsDataTable tableInv_Items;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Inv_ItemsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInv_Items = ((Inv_ItemsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ItemLocalID {
                get {
                    return ((int)(this[this.tableInv_Items.ItemLocalIDColumn]));
                }
                set {
                    this[this.tableInv_Items.ItemLocalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ItemName {
                get {
                    return ((string)(this[this.tableInv_Items.ItemNameColumn]));
                }
                set {
                    this[this.tableInv_Items.ItemNameColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DrListforRefRow : global::System.Data.DataRow {
            
            private DrListforRefDataTable tableDrListforRef;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DrListforRefRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDrListforRef = ((DrListforRefDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrName {
                get {
                    return ((string)(this[this.tableDrListforRef.DrNameColumn]));
                }
                set {
                    this[this.tableDrListforRef.DrNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AccountID {
                get {
                    return ((int)(this[this.tableDrListforRef.AccountIDColumn]));
                }
                set {
                    this[this.tableDrListforRef.AccountIDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EMR_PF_BasicRow : global::System.Data.DataRow {
            
            private EMR_PF_BasicDataTable tableEMR_PF_Basic;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EMR_PF_BasicRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEMR_PF_Basic = ((EMR_PF_BasicDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long RecordID {
                get {
                    return ((long)(this[this.tableEMR_PF_Basic.RecordIDColumn]));
                }
                set {
                    this[this.tableEMR_PF_Basic.RecordIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PFileID {
                get {
                    try {
                        return ((string)(this[this.tableEMR_PF_Basic.PFileIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PFileID\' in table \'EMR_PF_Basic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMR_PF_Basic.PFileIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientName {
                get {
                    return ((string)(this[this.tableEMR_PF_Basic.PatientNameColumn]));
                }
                set {
                    this[this.tableEMR_PF_Basic.PatientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientBarCode {
                get {
                    try {
                        return ((string)(this[this.tableEMR_PF_Basic.PatientBarCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientBarCode\' in table \'EMR_PF_Basic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMR_PF_Basic.PatientBarCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AcAge {
                get {
                    try {
                        return ((string)(this[this.tableEMR_PF_Basic.AcAgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AcAge\' in table \'EMR_PF_Basic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMR_PF_Basic.AcAgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GenderNameAr {
                get {
                    try {
                        return ((string)(this[this.tableEMR_PF_Basic.GenderNameArColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GenderNameAr\' in table \'EMR_PF_Basic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMR_PF_Basic.GenderNameArColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime BirthDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEMR_PF_Basic.BirthDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BirthDate\' in table \'EMR_PF_Basic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMR_PF_Basic.BirthDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NationalityNameAr {
                get {
                    try {
                        return ((string)(this[this.tableEMR_PF_Basic.NationalityNameArColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NationalityNameAr\' in table \'EMR_PF_Basic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMR_PF_Basic.NationalityNameArColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableEMR_PF_Basic.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'EMR_PF_Basic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMR_PF_Basic.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RegistrationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEMR_PF_Basic.RegistrationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegistrationDate\' in table \'EMR_PF_Basic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMR_PF_Basic.RegistrationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Contact1 {
                get {
                    try {
                        return ((string)(this[this.tableEMR_PF_Basic.Contact1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contact1\' in table \'EMR_PF_Basic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMR_PF_Basic.Contact1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPFileIDNull() {
                return this.IsNull(this.tableEMR_PF_Basic.PFileIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPFileIDNull() {
                this[this.tableEMR_PF_Basic.PFileIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientBarCodeNull() {
                return this.IsNull(this.tableEMR_PF_Basic.PatientBarCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientBarCodeNull() {
                this[this.tableEMR_PF_Basic.PatientBarCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAcAgeNull() {
                return this.IsNull(this.tableEMR_PF_Basic.AcAgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAcAgeNull() {
                this[this.tableEMR_PF_Basic.AcAgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGenderNameArNull() {
                return this.IsNull(this.tableEMR_PF_Basic.GenderNameArColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGenderNameArNull() {
                this[this.tableEMR_PF_Basic.GenderNameArColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBirthDateNull() {
                return this.IsNull(this.tableEMR_PF_Basic.BirthDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBirthDateNull() {
                this[this.tableEMR_PF_Basic.BirthDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNationalityNameArNull() {
                return this.IsNull(this.tableEMR_PF_Basic.NationalityNameArColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNationalityNameArNull() {
                this[this.tableEMR_PF_Basic.NationalityNameArColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddressNull() {
                return this.IsNull(this.tableEMR_PF_Basic.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddressNull() {
                this[this.tableEMR_PF_Basic.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRegistrationDateNull() {
                return this.IsNull(this.tableEMR_PF_Basic.RegistrationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRegistrationDateNull() {
                this[this.tableEMR_PF_Basic.RegistrationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContact1Null() {
                return this.IsNull(this.tableEMR_PF_Basic.Contact1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContact1Null() {
                this[this.tableEMR_PF_Basic.Contact1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Bsk_ReservationTableRow[] GetClinic_Bsk_ReservationTableRows() {
                if ((this.Table.ChildRelations["FK_Msk_ReservationTable_EMR_PF_Basic"] == null)) {
                    return new Clinic_Bsk_ReservationTableRow[0];
                }
                else {
                    return ((Clinic_Bsk_ReservationTableRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Msk_ReservationTable_EMR_PF_Basic"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RreservationGrid1Row : global::System.Data.DataRow {
            
            private RreservationGrid1DataTable tableRreservationGrid1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RreservationGrid1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRreservationGrid1 = ((RreservationGrid1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RecordSerial {
                get {
                    return ((int)(this[this.tableRreservationGrid1.RecordSerialColumn]));
                }
                set {
                    this[this.tableRreservationGrid1.RecordSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PID {
                get {
                    try {
                        return ((long)(this[this.tableRreservationGrid1.PIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PID\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.PIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientName {
                get {
                    return ((string)(this[this.tableRreservationGrid1.PatientNameColumn]));
                }
                set {
                    this[this.tableRreservationGrid1.PatientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short DrID {
                get {
                    try {
                        return ((short)(this[this.tableRreservationGrid1.DrIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrID\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.DrIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrName {
                get {
                    return ((string)(this[this.tableRreservationGrid1.DrNameColumn]));
                }
                set {
                    this[this.tableRreservationGrid1.DrNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ClinicID {
                get {
                    try {
                        return ((byte)(this[this.tableRreservationGrid1.ClinicIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClinicID\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.ClinicIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClinicTitle {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid1.ClinicTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClinicTitle\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.ClinicTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime VisitDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRreservationGrid1.VisitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitDate\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.VisitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid1.NotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Notes\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstshara {
                get {
                    return ((bool)(this[this.tableRreservationGrid1.IsEstsharaColumn]));
                }
                set {
                    this[this.tableRreservationGrid1.IsEstsharaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte EnterOrder {
                get {
                    try {
                        return ((byte)(this[this.tableRreservationGrid1.EnterOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnterOrder\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.EnterOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAchived {
                get {
                    return ((bool)(this[this.tableRreservationGrid1.IsAchivedColumn]));
                }
                set {
                    this[this.tableRreservationGrid1.IsAchivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VisitCost {
                get {
                    try {
                        return ((decimal)(this[this.tableRreservationGrid1.VisitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitCost\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.VisitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool HadPayied {
                get {
                    return ((bool)(this[this.tableRreservationGrid1.HadPayiedColumn]));
                }
                set {
                    this[this.tableRreservationGrid1.HadPayiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ServiceLevelID {
                get {
                    return ((byte)(this[this.tableRreservationGrid1.ServiceLevelIDColumn]));
                }
                set {
                    this[this.tableRreservationGrid1.ServiceLevelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AmountPaid {
                get {
                    try {
                        return ((decimal)(this[this.tableRreservationGrid1.AmountPaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountPaid\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.AmountPaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AccountBalance {
                get {
                    try {
                        return ((decimal)(this[this.tableRreservationGrid1.AccountBalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountBalance\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.AccountBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InvoiceDetailsRecordID {
                get {
                    try {
                        return ((int)(this[this.tableRreservationGrid1.InvoiceDetailsRecordIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceDetailsRecordID\' in table \'RreservationGrid1\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.InvoiceDetailsRecordIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CreatedBy {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid1.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RCDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRreservationGrid1.RCDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RCDate\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.RCDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ModifiedBy {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid1.ModifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedBy\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LADate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRreservationGrid1.LADateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LADate\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.LADateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool REye {
                get {
                    try {
                        return ((bool)(this[this.tableRreservationGrid1.REyeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REye\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.REyeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool LEye {
                get {
                    try {
                        return ((bool)(this[this.tableRreservationGrid1.LEyeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LEye\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.LEyeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Late {
                get {
                    try {
                        return ((decimal)(this[this.tableRreservationGrid1.LateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Late\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.LateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VisitDay {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid1.VisitDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitDay\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.VisitDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Attended {
                get {
                    try {
                        return ((bool)(this[this.tableRreservationGrid1.AttendedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Attended\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.AttendedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Prepared {
                get {
                    try {
                        return ((bool)(this[this.tableRreservationGrid1.PreparedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prepared\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.PreparedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Transferd {
                get {
                    try {
                        return ((bool)(this[this.tableRreservationGrid1.TransferdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transferd\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.TransferdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrent {
                get {
                    try {
                        return ((bool)(this[this.tableRreservationGrid1.IsCurrentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCurrent\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.IsCurrentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TakeService {
                get {
                    try {
                        return ((bool)(this[this.tableRreservationGrid1.TakeServiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TakeService\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.TakeServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BookingTimeString {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid1.BookingTimeStringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookingTimeString\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.BookingTimeStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubServiceName {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid1.SubServiceNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubServiceName\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.SubServiceNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Age {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid1.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PFileID {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid1.PFileIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PFileID\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.PFileIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProfileNotes {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid1.ProfileNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProfileNotes\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.ProfileNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OldID {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid1.OldIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OldID\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.OldIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArchiveLocation {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid1.ArchiveLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArchiveLocation\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.ArchiveLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GetFile {
                get {
                    try {
                        return ((bool)(this[this.tableRreservationGrid1.GetFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GetFile\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.GetFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableRreservationGrid1.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan AttendTime {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableRreservationGrid1.AttendTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttendTime\' in table \'RreservationGrid1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRreservationGrid1.AttendTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPIDNull() {
                return this.IsNull(this.tableRreservationGrid1.PIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPIDNull() {
                this[this.tableRreservationGrid1.PIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrIDNull() {
                return this.IsNull(this.tableRreservationGrid1.DrIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrIDNull() {
                this[this.tableRreservationGrid1.DrIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClinicIDNull() {
                return this.IsNull(this.tableRreservationGrid1.ClinicIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClinicIDNull() {
                this[this.tableRreservationGrid1.ClinicIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClinicTitleNull() {
                return this.IsNull(this.tableRreservationGrid1.ClinicTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClinicTitleNull() {
                this[this.tableRreservationGrid1.ClinicTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitDateNull() {
                return this.IsNull(this.tableRreservationGrid1.VisitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitDateNull() {
                this[this.tableRreservationGrid1.VisitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNotesNull() {
                return this.IsNull(this.tableRreservationGrid1.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNotesNull() {
                this[this.tableRreservationGrid1.NotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnterOrderNull() {
                return this.IsNull(this.tableRreservationGrid1.EnterOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnterOrderNull() {
                this[this.tableRreservationGrid1.EnterOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitCostNull() {
                return this.IsNull(this.tableRreservationGrid1.VisitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitCostNull() {
                this[this.tableRreservationGrid1.VisitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmountPaidNull() {
                return this.IsNull(this.tableRreservationGrid1.AmountPaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmountPaidNull() {
                this[this.tableRreservationGrid1.AmountPaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountBalanceNull() {
                return this.IsNull(this.tableRreservationGrid1.AccountBalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountBalanceNull() {
                this[this.tableRreservationGrid1.AccountBalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceDetailsRecordIDNull() {
                return this.IsNull(this.tableRreservationGrid1.InvoiceDetailsRecordIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceDetailsRecordIDNull() {
                this[this.tableRreservationGrid1.InvoiceDetailsRecordIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableRreservationGrid1.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatedByNull() {
                this[this.tableRreservationGrid1.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRCDateNull() {
                return this.IsNull(this.tableRreservationGrid1.RCDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRCDateNull() {
                this[this.tableRreservationGrid1.RCDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModifiedByNull() {
                return this.IsNull(this.tableRreservationGrid1.ModifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModifiedByNull() {
                this[this.tableRreservationGrid1.ModifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLADateNull() {
                return this.IsNull(this.tableRreservationGrid1.LADateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLADateNull() {
                this[this.tableRreservationGrid1.LADateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREyeNull() {
                return this.IsNull(this.tableRreservationGrid1.REyeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREyeNull() {
                this[this.tableRreservationGrid1.REyeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLEyeNull() {
                return this.IsNull(this.tableRreservationGrid1.LEyeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLEyeNull() {
                this[this.tableRreservationGrid1.LEyeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLateNull() {
                return this.IsNull(this.tableRreservationGrid1.LateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLateNull() {
                this[this.tableRreservationGrid1.LateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitDayNull() {
                return this.IsNull(this.tableRreservationGrid1.VisitDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitDayNull() {
                this[this.tableRreservationGrid1.VisitDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAttendedNull() {
                return this.IsNull(this.tableRreservationGrid1.AttendedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAttendedNull() {
                this[this.tableRreservationGrid1.AttendedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPreparedNull() {
                return this.IsNull(this.tableRreservationGrid1.PreparedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPreparedNull() {
                this[this.tableRreservationGrid1.PreparedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransferdNull() {
                return this.IsNull(this.tableRreservationGrid1.TransferdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransferdNull() {
                this[this.tableRreservationGrid1.TransferdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsCurrentNull() {
                return this.IsNull(this.tableRreservationGrid1.IsCurrentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsCurrentNull() {
                this[this.tableRreservationGrid1.IsCurrentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTakeServiceNull() {
                return this.IsNull(this.tableRreservationGrid1.TakeServiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTakeServiceNull() {
                this[this.tableRreservationGrid1.TakeServiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBookingTimeStringNull() {
                return this.IsNull(this.tableRreservationGrid1.BookingTimeStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBookingTimeStringNull() {
                this[this.tableRreservationGrid1.BookingTimeStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubServiceNameNull() {
                return this.IsNull(this.tableRreservationGrid1.SubServiceNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubServiceNameNull() {
                this[this.tableRreservationGrid1.SubServiceNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeNull() {
                return this.IsNull(this.tableRreservationGrid1.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeNull() {
                this[this.tableRreservationGrid1.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPFileIDNull() {
                return this.IsNull(this.tableRreservationGrid1.PFileIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPFileIDNull() {
                this[this.tableRreservationGrid1.PFileIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProfileNotesNull() {
                return this.IsNull(this.tableRreservationGrid1.ProfileNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProfileNotesNull() {
                this[this.tableRreservationGrid1.ProfileNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOldIDNull() {
                return this.IsNull(this.tableRreservationGrid1.OldIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOldIDNull() {
                this[this.tableRreservationGrid1.OldIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArchiveLocationNull() {
                return this.IsNull(this.tableRreservationGrid1.ArchiveLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArchiveLocationNull() {
                this[this.tableRreservationGrid1.ArchiveLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGetFileNull() {
                return this.IsNull(this.tableRreservationGrid1.GetFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGetFileNull() {
                this[this.tableRreservationGrid1.GetFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddressNull() {
                return this.IsNull(this.tableRreservationGrid1.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddressNull() {
                this[this.tableRreservationGrid1.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAttendTimeNull() {
                return this.IsNull(this.tableRreservationGrid1.AttendTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAttendTimeNull() {
                this[this.tableRreservationGrid1.AttendTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Bsk_ReservationTableRow[] GetClinic_Bsk_ReservationTableRows() {
                if ((this.Table.ChildRelations["FK_Msk_ReservationTable_Bsk_ClinicList3"] == null)) {
                    return new Clinic_Bsk_ReservationTableRow[0];
                }
                else {
                    return ((Clinic_Bsk_ReservationTableRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Msk_ReservationTable_Bsk_ClinicList3"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Clinic_Reservation_Lup_HourSlotRow : global::System.Data.DataRow {
            
            private Clinic_Reservation_Lup_HourSlotDataTable tableClinic_Reservation_Lup_HourSlot;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Clinic_Reservation_Lup_HourSlotRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClinic_Reservation_Lup_HourSlot = ((Clinic_Reservation_Lup_HourSlotDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte HourSlotID {
                get {
                    return ((byte)(this[this.tableClinic_Reservation_Lup_HourSlot.HourSlotIDColumn]));
                }
                set {
                    this[this.tableClinic_Reservation_Lup_HourSlot.HourSlotIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HourSlotTitle {
                get {
                    try {
                        return ((string)(this[this.tableClinic_Reservation_Lup_HourSlot.HourSlotTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HourSlotTitle\' in table \'Clinic_Reservation_Lup_HourSlot\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableClinic_Reservation_Lup_HourSlot.HourSlotTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan HourAsTime {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableClinic_Reservation_Lup_HourSlot.HourAsTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HourAsTime\' in table \'Clinic_Reservation_Lup_HourSlot\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableClinic_Reservation_Lup_HourSlot.HourAsTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan RealHour {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableClinic_Reservation_Lup_HourSlot.RealHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RealHour\' in table \'Clinic_Reservation_Lup_HourSlot\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableClinic_Reservation_Lup_HourSlot.RealHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHourSlotTitleNull() {
                return this.IsNull(this.tableClinic_Reservation_Lup_HourSlot.HourSlotTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHourSlotTitleNull() {
                this[this.tableClinic_Reservation_Lup_HourSlot.HourSlotTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHourAsTimeNull() {
                return this.IsNull(this.tableClinic_Reservation_Lup_HourSlot.HourAsTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHourAsTimeNull() {
                this[this.tableClinic_Reservation_Lup_HourSlot.HourAsTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRealHourNull() {
                return this.IsNull(this.tableClinic_Reservation_Lup_HourSlot.RealHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRealHourNull() {
                this[this.tableClinic_Reservation_Lup_HourSlot.RealHourColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Grid_ClinicTimeTableRowChangeEvent : global::System.EventArgs {
            
            private Grid_ClinicTimeTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Grid_ClinicTimeTableRowChangeEvent(Grid_ClinicTimeTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Grid_ClinicTimeTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RreservationGridRowChangeEvent : global::System.EventArgs {
            
            private RreservationGridRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RreservationGridRowChangeEvent(RreservationGridRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RreservationGridRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Clinic_Bsk_ReservationTableRowChangeEvent : global::System.EventArgs {
            
            private Clinic_Bsk_ReservationTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Bsk_ReservationTableRowChangeEvent(Clinic_Bsk_ReservationTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Bsk_ReservationTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ClinicDoctorsLinkRowChangeEvent : global::System.EventArgs {
            
            private ClinicDoctorsLinkRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClinicDoctorsLinkRowChangeEvent(ClinicDoctorsLinkRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClinicDoctorsLinkRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ClinicListGridRowChangeEvent : global::System.EventArgs {
            
            private ClinicListGridRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClinicListGridRowChangeEvent(ClinicListGridRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClinicListGridRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DoctorDegreeRowChangeEvent : global::System.EventArgs {
            
            private DoctorDegreeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DoctorDegreeRowChangeEvent(DoctorDegreeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DoctorDegreeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Clinic_Lup_MedicalDgreeListRowChangeEvent : global::System.EventArgs {
            
            private Clinic_Lup_MedicalDgreeListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Lup_MedicalDgreeListRowChangeEvent(Clinic_Lup_MedicalDgreeListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Lup_MedicalDgreeListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RecepitionFinTransViewRowChangeEvent : global::System.EventArgs {
            
            private RecepitionFinTransViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RecepitionFinTransViewRowChangeEvent(RecepitionFinTransViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RecepitionFinTransViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Combo_ReceptionDRListRowChangeEvent : global::System.EventArgs {
            
            private Combo_ReceptionDRListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Combo_ReceptionDRListRowChangeEvent(Combo_ReceptionDRListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Combo_ReceptionDRListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GridPullSamplesRowChangeEvent : global::System.EventArgs {
            
            private GridPullSamplesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GridPullSamplesRowChangeEvent(GridPullSamplesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GridPullSamplesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CountPatientRowChangeEvent : global::System.EventArgs {
            
            private CountPatientRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CountPatientRowChangeEvent(CountPatientRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CountPatientRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GridExaminationSerialRowChangeEvent : global::System.EventArgs {
            
            private GridExaminationSerialRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GridExaminationSerialRowChangeEvent(GridExaminationSerialRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GridExaminationSerialRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Inv_ItemsRowChangeEvent : global::System.EventArgs {
            
            private Inv_ItemsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Inv_ItemsRowChangeEvent(Inv_ItemsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Inv_ItemsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DrListforRefRowChangeEvent : global::System.EventArgs {
            
            private DrListforRefRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DrListforRefRowChangeEvent(DrListforRefRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DrListforRefRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EMR_PF_BasicRowChangeEvent : global::System.EventArgs {
            
            private EMR_PF_BasicRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMR_PF_BasicRowChangeEvent(EMR_PF_BasicRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMR_PF_BasicRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RreservationGrid1RowChangeEvent : global::System.EventArgs {
            
            private RreservationGrid1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RreservationGrid1RowChangeEvent(RreservationGrid1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RreservationGrid1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Clinic_Reservation_Lup_HourSlotRowChangeEvent : global::System.EventArgs {
            
            private Clinic_Reservation_Lup_HourSlotRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Reservation_Lup_HourSlotRowChangeEvent(Clinic_Reservation_Lup_HourSlotRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Clinic_Reservation_Lup_HourSlotRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace TMS.AppDataSets.ClinicReceptionTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Grid_ClinicTimeTableTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Grid_ClinicTimeTableTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Grid_ClinicTimeTable";
            tableMapping.ColumnMappings.Add("RecordSerial", "RecordSerial");
            tableMapping.ColumnMappings.Add("ClinicID", "ClinicID");
            tableMapping.ColumnMappings.Add("ClinicTitle", "ClinicTitle");
            tableMapping.ColumnMappings.Add("DrID", "DrID");
            tableMapping.ColumnMappings.Add("DrName", "DrName");
            tableMapping.ColumnMappings.Add("MedicalDgreeTitle", "MedicalDgreeTitle");
            tableMapping.ColumnMappings.Add("TimeFragment", "TimeFragment");
            tableMapping.ColumnMappings.Add("IsDeleted", "IsDeleted");
            tableMapping.ColumnMappings.Add("AvalableDates", "AvalableDates");
            tableMapping.ColumnMappings.Add("Notes", "Notes");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TMS.Properties.Settings.Default.TMSCS;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Clinic_Bsk_ClinicTimeTable.RecordSerial, Clinic_Bsk_ClinicTimeTable.ClinicID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ClinicTimeTable.DrID, Clinic_Bsk_DoctorsList.DrName, 
                         Clinic_Lup_MedicalDgreeList.MedicalDgreeTitle, Clinic_Bsk_ClinicTimeTable.TimeFragment, Clinic_Bsk_ClinicTimeTable.IsDeleted, Clinic_Bsk_ClinicTimeTable.SlotDate AS AvalableDates, 
                         Clinic_Bsk_ClinicTimeTable.Notes
FROM            Clinic_Bsk_ClinicTimeTable INNER JOIN
                         Clinic_Bsk_DoctorsList ON Clinic_Bsk_ClinicTimeTable.DrID = Clinic_Bsk_DoctorsList.DrID INNER JOIN
                         Clinic_Bsk_ClinicList ON Clinic_Bsk_ClinicTimeTable.ClinicID = Clinic_Bsk_ClinicList.ClinicID INNER JOIN
                         Clinic_Lup_MedicalDgreeList ON Clinic_Bsk_DoctorsList.DrMedicalDgree = Clinic_Lup_MedicalDgreeList.MedicalDgreeID
WHERE        (Clinic_Bsk_ClinicTimeTable.IsDeleted = 0)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        Clinic_Bsk_ClinicTimeTable.RecordSerial, Clinic_Bsk_ClinicTimeTable.ClinicID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ClinicTimeTable.DrID, Clinic_Bsk_DoctorsList.DrName, 
                         Clinic_Lup_MedicalDgreeList.MedicalDgreeTitle, Clinic_Bsk_ClinicTimeTable.TimeFragment, Clinic_Bsk_ClinicTimeTable.IsDeleted, Clinic_Bsk_ClinicTimeTable.SlotDate AS AvalableDates, 
                         Clinic_Bsk_ClinicTimeTable.Notes
FROM            Clinic_Bsk_ClinicTimeTable INNER JOIN
                         Clinic_Bsk_DoctorsList ON Clinic_Bsk_ClinicTimeTable.DrID = Clinic_Bsk_DoctorsList.DrID INNER JOIN
                         Clinic_Bsk_ClinicList ON Clinic_Bsk_ClinicTimeTable.ClinicID = Clinic_Bsk_ClinicList.ClinicID INNER JOIN
                         Clinic_Lup_MedicalDgreeList ON Clinic_Bsk_DoctorsList.DrMedicalDgree = Clinic_Lup_MedicalDgreeList.MedicalDgreeID
WHERE        (Clinic_Bsk_ClinicTimeTable.IsDeleted = 0) AND (Clinic_Bsk_ClinicTimeTable.ClinicID = @ClinicID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClinicID", global::System.Data.SqlDbType.TinyInt, 1, global::System.Data.ParameterDirection.Input, 0, 0, "ClinicID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT        Clinic_Bsk_ClinicTimeTable.RecordSerial, Clinic_Bsk_ClinicTimeTable.ClinicID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ClinicTimeTable.DrID, Clinic_Bsk_DoctorsList.DrName, 
                         Clinic_Lup_MedicalDgreeList.MedicalDgreeTitle, Clinic_Bsk_ClinicTimeTable.TimeFragment, Clinic_Bsk_ClinicTimeTable.IsDeleted, Clinic_Bsk_ClinicTimeTable.SlotDate AS AvalableDates, 
                         Clinic_Bsk_ClinicTimeTable.Notes
FROM            Clinic_Bsk_ClinicTimeTable INNER JOIN
                         Clinic_Bsk_DoctorsList ON Clinic_Bsk_ClinicTimeTable.DrID = Clinic_Bsk_DoctorsList.DrID INNER JOIN
                         Clinic_Bsk_ClinicList ON Clinic_Bsk_ClinicTimeTable.ClinicID = Clinic_Bsk_ClinicList.ClinicID INNER JOIN
                         Clinic_Lup_MedicalDgreeList ON Clinic_Bsk_DoctorsList.DrMedicalDgree = Clinic_Lup_MedicalDgreeList.MedicalDgreeID
WHERE        (Clinic_Bsk_ClinicTimeTable.IsDeleted = 0) AND (Clinic_Bsk_ClinicTimeTable.DrID = @DRID)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DRID", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "DrID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClinicReception.Grid_ClinicTimeTableDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByClinicID(ClinicReception.Grid_ClinicTimeTableDataTable dataTable, global::System.Nullable<byte> ClinicID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((ClinicID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((byte)(ClinicID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDR(ClinicReception.Grid_ClinicTimeTableDataTable dataTable, global::System.Nullable<short> DRID) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((DRID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((short)(DRID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RreservationGridTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RreservationGridTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RreservationGrid";
            tableMapping.ColumnMappings.Add("RecordSerial", "RecordSerial");
            tableMapping.ColumnMappings.Add("PID", "PID");
            tableMapping.ColumnMappings.Add("PatientName", "PatientName");
            tableMapping.ColumnMappings.Add("DrID", "DrID");
            tableMapping.ColumnMappings.Add("DrName", "DrName");
            tableMapping.ColumnMappings.Add("ClinicID", "ClinicID");
            tableMapping.ColumnMappings.Add("ClinicTitle", "ClinicTitle");
            tableMapping.ColumnMappings.Add("VisitDate", "VisitDate");
            tableMapping.ColumnMappings.Add("Notes", "Notes");
            tableMapping.ColumnMappings.Add("IsEstshara", "IsEstshara");
            tableMapping.ColumnMappings.Add("EnterOrder", "EnterOrder");
            tableMapping.ColumnMappings.Add("IsAchived", "IsAchived");
            tableMapping.ColumnMappings.Add("VisitCost", "VisitCost");
            tableMapping.ColumnMappings.Add("HadPayied", "HadPayied");
            tableMapping.ColumnMappings.Add("ServiceLevelID", "ServiceLevelID");
            tableMapping.ColumnMappings.Add("AmountPaid", "AmountPaid");
            tableMapping.ColumnMappings.Add("AccountBalance", "AccountBalance");
            tableMapping.ColumnMappings.Add("InvoiceDetailsRecordID", "InvoiceDetailsRecordID");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("RCDate", "RCDate");
            tableMapping.ColumnMappings.Add("ModifiedBy", "ModifiedBy");
            tableMapping.ColumnMappings.Add("LADate", "LADate");
            tableMapping.ColumnMappings.Add("REye", "REye");
            tableMapping.ColumnMappings.Add("LEye", "LEye");
            tableMapping.ColumnMappings.Add("Late", "Late");
            tableMapping.ColumnMappings.Add("VisitDay", "VisitDay");
            tableMapping.ColumnMappings.Add("Attended", "Attended");
            tableMapping.ColumnMappings.Add("Prepared", "Prepared");
            tableMapping.ColumnMappings.Add("Transferd", "Transferd");
            tableMapping.ColumnMappings.Add("IsCurrent", "IsCurrent");
            tableMapping.ColumnMappings.Add("TakeService", "TakeService");
            tableMapping.ColumnMappings.Add("BookingTimeString", "BookingTimeString");
            tableMapping.ColumnMappings.Add("SubServiceName", "SubServiceName");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("PFileID", "PFileID");
            tableMapping.ColumnMappings.Add("ProfileNotes", "ProfileNotes");
            tableMapping.ColumnMappings.Add("OldID", "OldID");
            tableMapping.ColumnMappings.Add("ArchiveLocation", "ArchiveLocation");
            tableMapping.ColumnMappings.Add("GetFile", "GetFile");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("HourSlotTitle", "HourSlotTitle");
            tableMapping.ColumnMappings.Add("AccountTitle", "AccountTitle");
            tableMapping.ColumnMappings.Add("AttendTime", "AttendTime");
            tableMapping.ColumnMappings.Add("AttendOrder", "AttendOrder");
            tableMapping.ColumnMappings.Add("PaiedString", "PaiedString");
            tableMapping.ColumnMappings.Add("DailyTransSerial", "DailyTransSerial");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TMS.Properties.Settings.Default.TMSCS;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[15];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Pre_Users_1.DisplayName AS CreatedBy, Clinic_Bsk_ReservationTable.RCDate, Pre" +
                "_Users.DisplayName AS ModifiedBy, Clinic_Bsk_ReservationTable.LADate, Clinic_Bsk" +
                "_ReservationTable.REye, \r\n                         Clinic_Bsk_ReservationTable.L" +
                "Eye, Clinic_Bsk_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountP" +
                "aid AS Late, DATENAME(dw, Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, \r\n" +
                "                         Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_Reserv" +
                "ationTable.Prepared, Clinic_Bsk_ReservationTable.Transferd, Clinic_Bsk_Reservati" +
                "onTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, \r\n                  " +
                "       Clinic_Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList." +
                "SubServiceName, CASE WHEN DATEDIFF(yy, BirthDate, GETDATE()) < 1 THEN CONVERT(nv" +
                "archar(MAX), DATEDIFF(dd, BirthDate, \r\n                         GETDATE())) + N\'" +
                " - يوم\' ELSE CONVERT(nvarchar(MAX), DATEDIFF(yy, BirthDate, GETDATE())) + N\' - ع" +
                "ام\' END AS Age, EMR_PF_Basic.PFileID, EMR_PF_Basic.Notes AS ProfileNotes, EMR_PF" +
                "_Basic.OldID, \r\n                         EMR_PF_Basic.ArchiveLocation, Clinic_Bs" +
                "k_ReservationTable.GetFile, EMR_PF_Basic.Address, CONVERT(varchar(15), CAST(Clin" +
                "ic_Bsk_ReservationTable.AttendTime AS TIME), 100) AS AttendTime, \r\n             " +
                "            Clinic_Reservation_Lup_HourSlot.HourSlotTitle, Fin_AccountsInfo.Acco" +
                "untTitle, Clinic_Bsk_ReservationTable.AttendOrder, Clinic_Bsk_ReservationTable.P" +
                "aiedString, \r\n                         Clinic_Bsk_ReservationTable.DailyTransSer" +
                "ial\r\nFROM            Clinic_Reservation_Lup_HourSlot RIGHT OUTER JOIN\r\n         " +
                "                Clinic_Bsk_ReservationTable INNER JOIN\r\n                        " +
                " EMR_PF_Basic ON Clinic_Bsk_ReservationTable.PID = EMR_PF_Basic.RecordID INNER J" +
                "OIN\r\n                         Clinic_Bsk_ClinicList ON Clinic_Bsk_ReservationTab" +
                "le.ClinicID = Clinic_Bsk_ClinicList.ClinicID INNER JOIN\r\n                       " +
                "  Clinic_Bsk_DoctorsList ON Clinic_Bsk_ReservationTable.DrID = Clinic_Bsk_Doctor" +
                "sList.DrID ON Clinic_Reservation_Lup_HourSlot.HourSlotID = Clinic_Bsk_Reservatio" +
                "nTable.BookingTime LEFT OUTER JOIN\r\n                         Clinic_Lup_SubSrvic" +
                "esList ON Clinic_Bsk_ReservationTable.SubClinicID = Clinic_Lup_SubSrvicesList.Su" +
                "bServiceID LEFT OUTER JOIN\r\n                         Pre_Users ON Clinic_Bsk_Res" +
                "ervationTable.LABy = Pre_Users.UserID LEFT OUTER JOIN\r\n                         " +
                "Pre_Users AS Pre_Users_1 ON Clinic_Bsk_ReservationTable.RCBy = Pre_Users_1.UserI" +
                "D LEFT OUTER JOIN\r\n                         Fin_AccountStatment ON Clinic_Bsk_Re" +
                "servationTable.PID = Fin_AccountStatment.RecordID LEFT OUTER JOIN\r\n             " +
                "            Fin_AccountsInfo RIGHT OUTER JOIN\r\n                         Fin_Invo" +
                "iceDetaills INNER JOIN\r\n                         Fin_InvoiceBasic ON Fin_Invoice" +
                "Detaills.InvoiceID = Fin_InvoiceBasic.InvoiceSerial ON Fin_AccountsInfo.AccountI" +
                "D = Fin_InvoiceBasic.ReferalDrName ON \r\n                         Clinic_Bsk_Rese" +
                "rvationTable.InvoiceDetailsRecordID = Fin_InvoiceDetaills.RecordSerial";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Pre_Users_1.DisplayName AS CreatedBy, Clinic_Bsk_ReservationTable.RCDate, Pre" +
                "_Users.DisplayName AS ModifiedBy, Clinic_Bsk_ReservationTable.LADate, Clinic_Bsk" +
                "_ReservationTable.REye, \r\n                         Clinic_Bsk_ReservationTable.L" +
                "Eye, Clinic_Bsk_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountP" +
                "aid AS Late, DATENAME(dw, Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, \r\n" +
                "                         Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_Reserv" +
                "ationTable.Prepared, Clinic_Bsk_ReservationTable.Transferd, Clinic_Bsk_Reservati" +
                "onTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, \r\n                  " +
                "       Clinic_Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList." +
                "SubServiceName, CASE WHEN DATEDIFF(yy, BirthDate, GETDATE()) < 1 THEN CONVERT(nv" +
                "archar(MAX), DATEDIFF(dd, BirthDate, \r\n                         GETDATE())) + N\'" +
                " - يوم\' ELSE CONVERT(nvarchar(MAX), DATEDIFF(yy, BirthDate, GETDATE())) + N\' - ع" +
                "ام\' END AS Age, EMR_PF_Basic.PFileID, EMR_PF_Basic.Notes AS ProfileNotes, EMR_PF" +
                "_Basic.OldID, \r\n                         EMR_PF_Basic.ArchiveLocation, Clinic_Bs" +
                "k_ReservationTable.GetFile, Clinic_Reservation_Lup_HourSlot.HourSlotTitle\r\nFROM " +
                "           Pre_Users RIGHT OUTER JOIN\r\n                         Clinic_Bsk_Reser" +
                "vationTable INNER JOIN\r\n                         EMR_PF_Basic ON Clinic_Bsk_Rese" +
                "rvationTable.PID = EMR_PF_Basic.RecordID INNER JOIN\r\n                         Cl" +
                "inic_Bsk_ClinicList ON Clinic_Bsk_ReservationTable.ClinicID = Clinic_Bsk_ClinicL" +
                "ist.ClinicID INNER JOIN\r\n                         Clinic_Bsk_DoctorsList ON Clin" +
                "ic_Bsk_ReservationTable.DrID = Clinic_Bsk_DoctorsList.DrID LEFT OUTER JOIN\r\n    " +
                "                     Clinic_Reservation_Lup_HourSlot ON Clinic_Bsk_ReservationTa" +
                "ble.BookingTime = Clinic_Reservation_Lup_HourSlot.HourSlotID LEFT OUTER JOIN\r\n  " +
                "                       Clinic_Lup_SubSrvicesList ON Clinic_Bsk_ReservationTable." +
                "SubClinicID = Clinic_Lup_SubSrvicesList.SubServiceID ON Pre_Users.UserID = Clini" +
                "c_Bsk_ReservationTable.LABy LEFT OUTER JOIN\r\n                         Pre_Users " +
                "AS Pre_Users_1 ON Clinic_Bsk_ReservationTable.RCBy = Pre_Users_1.UserID LEFT OUT" +
                "ER JOIN\r\n                         Fin_AccountStatment ON Clinic_Bsk_ReservationT" +
                "able.PID = Fin_AccountStatment.RecordID\r\nWHERE        (Clinic_Bsk_ReservationTab" +
                "le.VisitDate = @VDate) AND (Clinic_Bsk_ReservationTable.ClinicID <> 44)\r\nORDER B" +
                "Y Clinic_Bsk_ReservationTable.GetFile";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Pre_Users_1.DisplayName AS CreatedBy, Clinic_Bsk_ReservationTable.RCDate, Pre" +
                "_Users.DisplayName AS ModifiedBy, Clinic_Bsk_ReservationTable.LADate, Clinic_Bsk" +
                "_ReservationTable.REye, \r\n                         Clinic_Bsk_ReservationTable.L" +
                "Eye, Clinic_Bsk_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountP" +
                "aid AS Late, DATENAME(dw, Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, \r\n" +
                "                         Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_Reserv" +
                "ationTable.Prepared, Clinic_Bsk_ReservationTable.Transferd, Clinic_Bsk_Reservati" +
                "onTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, \r\n                  " +
                "       Clinic_Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList." +
                "SubServiceName, CASE WHEN DATEDIFF(yy, BirthDate, GETDATE()) < 1 THEN CONVERT(nv" +
                "archar(MAX), DATEDIFF(dd, BirthDate, \r\n                         GETDATE())) + N\'" +
                " - يوم\' ELSE CONVERT(nvarchar(MAX), DATEDIFF(yy, BirthDate, GETDATE())) + N\' - ع" +
                "ام\' END AS Age, EMR_PF_Basic.PFileID, EMR_PF_Basic.Notes AS ProfileNotes, EMR_PF" +
                "_Basic.OldID, \r\n                         EMR_PF_Basic.ArchiveLocation, Clinic_Bs" +
                "k_ReservationTable.GetFile, Clinic_Reservation_Lup_HourSlot.HourSlotTitle\r\nFROM " +
                "           Pre_Users RIGHT OUTER JOIN\r\n                         Clinic_Bsk_Reser" +
                "vationTable INNER JOIN\r\n                         EMR_PF_Basic ON Clinic_Bsk_Rese" +
                "rvationTable.PID = EMR_PF_Basic.RecordID INNER JOIN\r\n                         Cl" +
                "inic_Bsk_ClinicList ON Clinic_Bsk_ReservationTable.ClinicID = Clinic_Bsk_ClinicL" +
                "ist.ClinicID INNER JOIN\r\n                         Clinic_Bsk_DoctorsList ON Clin" +
                "ic_Bsk_ReservationTable.DrID = Clinic_Bsk_DoctorsList.DrID LEFT OUTER JOIN\r\n    " +
                "                     Clinic_Reservation_Lup_HourSlot ON Clinic_Bsk_ReservationTa" +
                "ble.BookingTime = Clinic_Reservation_Lup_HourSlot.HourSlotID LEFT OUTER JOIN\r\n  " +
                "                       Clinic_Lup_SubSrvicesList ON Clinic_Bsk_ReservationTable." +
                "SubClinicID = Clinic_Lup_SubSrvicesList.SubServiceID ON Pre_Users.UserID = Clini" +
                "c_Bsk_ReservationTable.LABy LEFT OUTER JOIN\r\n                         Pre_Users " +
                "AS Pre_Users_1 ON Clinic_Bsk_ReservationTable.RCBy = Pre_Users_1.UserID LEFT OUT" +
                "ER JOIN\r\n                         Fin_AccountStatment ON Clinic_Bsk_ReservationT" +
                "able.PID = Fin_AccountStatment.RecordID\r\nWHERE        (Clinic_Bsk_ReservationTab" +
                "le.VisitDate = @VDate) AND (EMR_PF_Basic.PFileID LIKE N\'%\' + @ProfileNo + N\'%\') " +
                "AND (Clinic_Bsk_ReservationTable.ClinicID <> 44)\r\nORDER BY Clinic_Bsk_Reservatio" +
                "nTable.GetFile";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProfileNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "PFileID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Pre_Users_1.DisplayName AS CreatedBy, Clinic_Bsk_ReservationTable.RCDate, Pre" +
                "_Users.DisplayName AS ModifiedBy, Clinic_Bsk_ReservationTable.LADate, Clinic_Bsk" +
                "_ReservationTable.REye, \r\n                         Clinic_Bsk_ReservationTable.L" +
                "Eye, Clinic_Bsk_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountP" +
                "aid AS Late, DATENAME(dw, Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, \r\n" +
                "                         Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_Reserv" +
                "ationTable.Prepared, Clinic_Bsk_ReservationTable.Transferd, Clinic_Bsk_Reservati" +
                "onTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, \r\n                  " +
                "       Clinic_Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList." +
                "SubServiceName, CASE WHEN DATEDIFF(yy, BirthDate, GETDATE()) < 1 THEN CONVERT(nv" +
                "archar(MAX), DATEDIFF(dd, BirthDate, \r\n                         GETDATE())) + N\'" +
                " - يوم\' ELSE CONVERT(nvarchar(MAX), DATEDIFF(yy, BirthDate, GETDATE())) + N\' - ع" +
                "ام\' END AS Age, EMR_PF_Basic.PFileID, EMR_PF_Basic.Notes AS ProfileNotes, EMR_PF" +
                "_Basic.OldID, \r\n                         EMR_PF_Basic.ArchiveLocation, Clinic_Bs" +
                "k_ReservationTable.GetFile, Clinic_Reservation_Lup_HourSlot.HourSlotTitle\r\nFROM " +
                "           Pre_Users RIGHT OUTER JOIN\r\n                         Clinic_Bsk_Reser" +
                "vationTable INNER JOIN\r\n                         EMR_PF_Basic ON Clinic_Bsk_Rese" +
                "rvationTable.PID = EMR_PF_Basic.RecordID INNER JOIN\r\n                         Cl" +
                "inic_Bsk_ClinicList ON Clinic_Bsk_ReservationTable.ClinicID = Clinic_Bsk_ClinicL" +
                "ist.ClinicID INNER JOIN\r\n                         Clinic_Bsk_DoctorsList ON Clin" +
                "ic_Bsk_ReservationTable.DrID = Clinic_Bsk_DoctorsList.DrID LEFT OUTER JOIN\r\n    " +
                "                     Clinic_Reservation_Lup_HourSlot ON Clinic_Bsk_ReservationTa" +
                "ble.BookingTime = Clinic_Reservation_Lup_HourSlot.HourSlotID LEFT OUTER JOIN\r\n  " +
                "                       Clinic_Lup_SubSrvicesList ON Clinic_Bsk_ReservationTable." +
                "SubClinicID = Clinic_Lup_SubSrvicesList.SubServiceID ON Pre_Users.UserID = Clini" +
                "c_Bsk_ReservationTable.LABy LEFT OUTER JOIN\r\n                         Pre_Users " +
                "AS Pre_Users_1 ON Clinic_Bsk_ReservationTable.RCBy = Pre_Users_1.UserID LEFT OUT" +
                "ER JOIN\r\n                         Fin_AccountStatment ON Clinic_Bsk_ReservationT" +
                "able.PID = Fin_AccountStatment.RecordID\r\nWHERE        (Clinic_Bsk_ReservationTab" +
                "le.VisitDate = @VDate) AND (EMR_PF_Basic.PatientName LIKE N\'%\' + @NameLike + N\'%" +
                "\') AND (Clinic_Bsk_ReservationTable.ClinicID <> 44)\r\nORDER BY Clinic_Bsk_Reserva" +
                "tionTable.GetFile";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NameLike", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, "PatientName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Pre_Users.DisplayName AS CreatedBy, Clinic_Bsk_ReservationTable.RCDate, Clini" +
                "c_Bsk_ReservationTable.LABy, Pre_Users_1.DisplayName AS ModifiedBy, Clinic_Bsk_R" +
                "eservationTable.LADate, \r\n                         Clinic_Bsk_ReservationTable.R" +
                "Eye, Clinic_Bsk_ReservationTable.LEye, Clinic_Bsk_ReservationTable.VisitCost - C" +
                "linic_Bsk_ReservationTable.AmountPaid AS Late, DATENAME(dw, \r\n                  " +
                "       Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, Clinic_Bsk_Reservatio" +
                "nTable.Attended, Clinic_Bsk_ReservationTable.Prepared, Clinic_Bsk_ReservationTab" +
                "le.Transferd, \r\n                         Clinic_Bsk_ReservationTable.IsCurrent, " +
                "Clinic_Bsk_ReservationTable.TakeService, Clinic_Bsk_ReservationTable.BookingTime" +
                "String, Clinic_Lup_SubSrvicesList.SubServiceName, CASE WHEN DATEDIFF(yy, \r\n     " +
                "                    BirthDate, GETDATE()) < 1 THEN CONVERT(nvarchar(MAX), DATEDI" +
                "FF(dd, BirthDate, GETDATE())) + N\' - يوم\' ELSE CONVERT(nvarchar(MAX), DATEDIFF(y" +
                "y, BirthDate, GETDATE())) + N\' - عام\' END AS Age, \r\n                         EMR" +
                "_PF_Basic.PFileID, Clinic_Reservation_Lup_HourSlot.HourSlotTitle, Clinic_Bsk_Res" +
                "ervationTable.AttendOrder, CONVERT(varchar(15), CAST(Clinic_Bsk_ReservationTable" +
                ".AttendTime AS TIME), 100) \r\n                         AS AttendTiime\r\nFROM      " +
                "      Pre_Users RIGHT OUTER JOIN\r\n                         Pre_Users AS Pre_User" +
                "s_1 RIGHT OUTER JOIN\r\n                         Clinic_Reservation_Lup_HourSlot R" +
                "IGHT OUTER JOIN\r\n                         Clinic_Bsk_ReservationTable INNER JOIN" +
                "\r\n                         EMR_PF_Basic ON Clinic_Bsk_ReservationTable.PID = EMR" +
                "_PF_Basic.RecordID INNER JOIN\r\n                         Clinic_Bsk_ClinicList ON" +
                " Clinic_Bsk_ReservationTable.ClinicID = Clinic_Bsk_ClinicList.ClinicID INNER JOI" +
                "N\r\n                         Clinic_Bsk_DoctorsList ON Clinic_Bsk_ReservationTabl" +
                "e.DrID = Clinic_Bsk_DoctorsList.DrID ON Clinic_Reservation_Lup_HourSlot.HourSlot" +
                "ID = Clinic_Bsk_ReservationTable.BookingTime LEFT OUTER JOIN\r\n                  " +
                "       Clinic_Lup_SubSrvicesList ON Clinic_Bsk_ReservationTable.SubClinicID = Cl" +
                "inic_Lup_SubSrvicesList.SubServiceID ON Pre_Users_1.UserID = Clinic_Bsk_Reservat" +
                "ionTable.LABy LEFT OUTER JOIN\r\n                         Fin_AccountStatment ON C" +
                "linic_Bsk_ReservationTable.PID = Fin_AccountStatment.RecordID ON Pre_Users.UserI" +
                "D = Clinic_Bsk_ReservationTable.RCBy\r\nWHERE        (Clinic_Bsk_ReservationTable." +
                "VisitDate = @VDate) AND (Clinic_Bsk_ReservationTable.Attended = @AttendFlag)";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttendFlag", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Attended", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, CASE WHEN SubClinicID = 23 THEN 0 ELSE AmountPaid END AS AmountPaid, Fin" +
                "_AccountStatment.AccountBalance, \r\n                         Clinic_Bsk_Reservati" +
                "onTable.InvoiceDetailsRecordID, Pre_Users_1.DisplayName AS CreatedBy, Clinic_Bsk" +
                "_ReservationTable.RCDate, Pre_Users.DisplayName AS ModifiedBy, \r\n               " +
                "          Clinic_Bsk_ReservationTable.LADate, Clinic_Bsk_ReservationTable.REye, " +
                "Clinic_Bsk_ReservationTable.LEye, Clinic_Bsk_ReservationTable.VisitCost - Clinic" +
                "_Bsk_ReservationTable.AmountPaid AS Late, \r\n                         DATENAME(dw" +
                ", Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, Clinic_Bsk_ReservationTabl" +
                "e.Attended, Clinic_Bsk_ReservationTable.Prepared, Clinic_Bsk_ReservationTable.Tr" +
                "ansferd, \r\n                         Clinic_Bsk_ReservationTable.IsCurrent, Clini" +
                "c_Bsk_ReservationTable.TakeService, Clinic_Bsk_ReservationTable.BookingTimeStrin" +
                "g, Clinic_Lup_SubSrvicesList.SubServiceName, CASE WHEN DATEDIFF(yy, \r\n          " +
                "               BirthDate, GETDATE()) < 1 THEN CONVERT(nvarchar(MAX), DATEDIFF(dd" +
                ", BirthDate, GETDATE())) + N\' - يوم\' ELSE CONVERT(nvarchar(MAX), DATEDIFF(yy, Bi" +
                "rthDate, GETDATE())) + N\' - عام\' END AS Age, \r\n                         EMR_PF_B" +
                "asic.PFileID, Clinic_Reservation_Lup_HourSlot.HourSlotTitle, Clinic_Bsk_Reservat" +
                "ionTable.AttendOrder, CONVERT(varchar(15), CAST(Clinic_Bsk_ReservationTable.Atte" +
                "ndTime AS TIME), 100) \r\n                         AS AttendTime, Clinic_Bsk_Reser" +
                "vationTable.DailyTransSerial, CASE WHEN SubClinicID = 23 THEN N\'\' ELSE PaiedStri" +
                "ng END AS PaiedString\r\nFROM            Pre_Users RIGHT OUTER JOIN\r\n             " +
                "            Clinic_Bsk_ReservationTable INNER JOIN\r\n                         EMR" +
                "_PF_Basic ON Clinic_Bsk_ReservationTable.PID = EMR_PF_Basic.RecordID INNER JOIN\r" +
                "\n                         Clinic_Bsk_ClinicList ON Clinic_Bsk_ReservationTable.C" +
                "linicID = Clinic_Bsk_ClinicList.ClinicID INNER JOIN\r\n                         Cl" +
                "inic_Bsk_DoctorsList ON Clinic_Bsk_ReservationTable.DrID = Clinic_Bsk_DoctorsLis" +
                "t.DrID LEFT OUTER JOIN\r\n                         Clinic_Reservation_Lup_HourSlot" +
                " ON Clinic_Bsk_ReservationTable.BookingTime = Clinic_Reservation_Lup_HourSlot.Ho" +
                "urSlotID LEFT OUTER JOIN\r\n                         Clinic_Lup_SubSrvicesList ON " +
                "Clinic_Bsk_ReservationTable.SubClinicID = Clinic_Lup_SubSrvicesList.SubServiceID" +
                " ON Pre_Users.UserID = Clinic_Bsk_ReservationTable.LABy LEFT OUTER JOIN\r\n       " +
                "                  Pre_Users AS Pre_Users_1 ON Clinic_Bsk_ReservationTable.RCBy =" +
                " Pre_Users_1.UserID LEFT OUTER JOIN\r\n                         Fin_AccountStatmen" +
                "t ON Clinic_Bsk_ReservationTable.PID = Fin_AccountStatment.RecordID\r\nWHERE      " +
                "  (Clinic_Bsk_ReservationTable.RecordSerial = @BookingID)";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BookingID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "RecordSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Pre_Users_1.DisplayName AS CreatedBy, Clinic_Bsk_ReservationTable.RCDate, Pre" +
                "_Users.DisplayName AS ModifiedBy, Clinic_Bsk_ReservationTable.LADate, Clinic_Bsk" +
                "_ReservationTable.REye, \r\n                         Clinic_Bsk_ReservationTable.L" +
                "Eye, Clinic_Bsk_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountP" +
                "aid AS Late, DATENAME(dw, Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, \r\n" +
                "                         Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_Reserv" +
                "ationTable.Prepared, Clinic_Bsk_ReservationTable.Transferd, Clinic_Bsk_Reservati" +
                "onTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, \r\n                  " +
                "       Clinic_Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList." +
                "SubServiceName, CONVERT(nvarchar(MAX), DATEDIFF(yy, EMR_PF_Basic.BirthDate, GETD" +
                "ATE())) AS Age, EMR_PF_Basic.PFileID, \r\n                         Clinic_Reservat" +
                "ion_Lup_HourSlot.HourSlotTitle, Clinic_Bsk_ReservationTable.AttendOrder, CONVERT" +
                "(varchar(15), CAST(Clinic_Bsk_ReservationTable.AttendTime AS TIME), 100) AS Atte" +
                "ndTime\r\nFROM            Pre_Users RIGHT OUTER JOIN\r\n                         Cli" +
                "nic_Bsk_ReservationTable INNER JOIN\r\n                         EMR_PF_Basic ON Cl" +
                "inic_Bsk_ReservationTable.PID = EMR_PF_Basic.RecordID INNER JOIN\r\n              " +
                "           Clinic_Bsk_ClinicList ON Clinic_Bsk_ReservationTable.ClinicID = Clini" +
                "c_Bsk_ClinicList.ClinicID INNER JOIN\r\n                         Clinic_Bsk_Doctor" +
                "sList ON Clinic_Bsk_ReservationTable.DrID = Clinic_Bsk_DoctorsList.DrID LEFT OUT" +
                "ER JOIN\r\n                         Clinic_Reservation_Lup_HourSlot ON Clinic_Bsk_" +
                "ReservationTable.BookingTime = Clinic_Reservation_Lup_HourSlot.HourSlotID LEFT O" +
                "UTER JOIN\r\n                         Clinic_Lup_SubSrvicesList ON Clinic_Bsk_Rese" +
                "rvationTable.SubClinicID = Clinic_Lup_SubSrvicesList.SubServiceID ON Pre_Users.U" +
                "serID = Clinic_Bsk_ReservationTable.LABy LEFT OUTER JOIN\r\n                      " +
                "   Pre_Users AS Pre_Users_1 ON Clinic_Bsk_ReservationTable.RCBy = Pre_Users_1.Us" +
                "erID LEFT OUTER JOIN\r\n                         Fin_AccountStatment ON Clinic_Bsk" +
                "_ReservationTable.PID = Fin_AccountStatment.RecordID\r\nWHERE        (Clinic_Bsk_R" +
                "eservationTable.ClinicID = @ClinicID) AND (Clinic_Bsk_ReservationTable.VisitDate" +
                " = @VDate)\r\nORDER BY Clinic_Bsk_ReservationTable.TakeService, Clinic_Bsk_Reserva" +
                "tionTable.BookingTime";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClinicID", global::System.Data.SqlDbType.TinyInt, 1, global::System.Data.ParameterDirection.Input, 0, 0, "ClinicID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Clinic_Bsk_ReservationTable.REye, Clinic_Bsk_ReservationTable.LEye, Clinic_Bs" +
                "k_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountPaid AS Late, D" +
                "ATENAME(dw, \r\n                         Clinic_Bsk_ReservationTable.VisitDate) AS" +
                " VisitDay, Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_ReservationTable.Pre" +
                "pared, Clinic_Bsk_ReservationTable.Transferd, \r\n                         Clinic_" +
                "Bsk_ReservationTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, Clinic_" +
                "Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList.SubServiceName" +
                ", EMR_PF_Basic.PFileID, \r\n                         Clinic_Reservation_Lup_HourSl" +
                "ot.HourSlotTitle, Clinic_Bsk_ReservationTable.AttendOrder, CONVERT(varchar(15), " +
                "CAST(Clinic_Bsk_ReservationTable.AttendTime AS TIME), 100) AS AttendTime\r\nFROM  " +
                "          Clinic_Bsk_ReservationTable INNER JOIN\r\n                         EMR_P" +
                "F_Basic ON Clinic_Bsk_ReservationTable.PID = EMR_PF_Basic.RecordID INNER JOIN\r\n " +
                "                        Clinic_Bsk_ClinicList ON Clinic_Bsk_ReservationTable.Cli" +
                "nicID = Clinic_Bsk_ClinicList.ClinicID INNER JOIN\r\n                         Clin" +
                "ic_Bsk_DoctorsList ON Clinic_Bsk_ReservationTable.DrID = Clinic_Bsk_DoctorsList." +
                "DrID LEFT OUTER JOIN\r\n                         Clinic_Reservation_Lup_HourSlot O" +
                "N Clinic_Bsk_ReservationTable.BookingTime = Clinic_Reservation_Lup_HourSlot.Hour" +
                "SlotID LEFT OUTER JOIN\r\n                         Clinic_Lup_SubSrvicesList ON Cl" +
                "inic_Bsk_ReservationTable.SubClinicID = Clinic_Lup_SubSrvicesList.SubServiceID L" +
                "EFT OUTER JOIN\r\n                         Fin_AccountStatment ON Clinic_Bsk_Reser" +
                "vationTable.PID = Fin_AccountStatment.RecordID\r\nWHERE        (Clinic_Bsk_Reserva" +
                "tionTable.DrID = @DRID) AND (Clinic_Bsk_ReservationTable.VisitDate = @VisitDate)" +
                " AND (Clinic_Bsk_ReservationTable.IsAchived = 0) AND \r\n                         " +
                "(Clinic_Bsk_ReservationTable.Attended = @Attend) AND (Clinic_Bsk_ReservationTabl" +
                "e.IsCurrent = @CurrentFlag)";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DRID", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "DrID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VisitDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Attend", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Attended", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentFlag", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "IsCurrent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Clinic_Bsk_ReservationTable.REye, Clinic_Bsk_ReservationTable.LEye, Clinic_Bs" +
                "k_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountPaid AS Late, D" +
                "ATENAME(dw, \r\n                         Clinic_Bsk_ReservationTable.VisitDate) AS" +
                " VisitDay, Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_ReservationTable.Pre" +
                "pared, Clinic_Bsk_ReservationTable.Transferd, \r\n                         Clinic_" +
                "Bsk_ReservationTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, Clinic_" +
                "Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList.SubServiceName" +
                ", EMR_PF_Basic.Address, \r\n                         CONVERT(varchar(15), CAST(Cli" +
                "nic_Bsk_ReservationTable.AttendTime AS TIME), 100) AS AttendTime, EMR_PF_Basic.P" +
                "FileID, Clinic_Reservation_Lup_HourSlot.HourSlotTitle, Fin_AccountsInfo.AccountT" +
                "itle, \r\n                         Clinic_Bsk_ReservationTable.AttendOrder, CONVER" +
                "T(varchar(15), CAST(Clinic_Bsk_ReservationTable.AttendTime AS TIME), 100) AS Att" +
                "endTime\r\nFROM            Fin_InvoiceBasic INNER JOIN\r\n                         F" +
                "in_InvoiceDetaills ON Fin_InvoiceBasic.InvoiceSerial = Fin_InvoiceDetaills.Invoi" +
                "ceID LEFT OUTER JOIN\r\n                         Fin_AccountsInfo ON Fin_InvoiceBa" +
                "sic.ReferalDrName = Fin_AccountsInfo.AccountID RIGHT OUTER JOIN\r\n               " +
                "          Clinic_Bsk_ReservationTable INNER JOIN\r\n                         EMR_P" +
                "F_Basic ON Clinic_Bsk_ReservationTable.PID = EMR_PF_Basic.RecordID INNER JOIN\r\n " +
                "                        Clinic_Bsk_ClinicList ON Clinic_Bsk_ReservationTable.Cli" +
                "nicID = Clinic_Bsk_ClinicList.ClinicID INNER JOIN\r\n                         Clin" +
                "ic_Bsk_DoctorsList ON Clinic_Bsk_ReservationTable.DrID = Clinic_Bsk_DoctorsList." +
                "DrID ON Fin_InvoiceDetaills.RecordSerial = Clinic_Bsk_ReservationTable.InvoiceDe" +
                "tailsRecordID LEFT OUTER JOIN\r\n                         Clinic_Reservation_Lup_H" +
                "ourSlot ON Clinic_Bsk_ReservationTable.BookingTime = Clinic_Reservation_Lup_Hour" +
                "Slot.HourSlotID LEFT OUTER JOIN\r\n                         Clinic_Lup_SubSrvicesL" +
                "ist ON Clinic_Bsk_ReservationTable.SubClinicID = Clinic_Lup_SubSrvicesList.SubSe" +
                "rviceID LEFT OUTER JOIN\r\n                         Fin_AccountStatment ON Clinic_" +
                "Bsk_ReservationTable.PID = Fin_AccountStatment.RecordID\r\nWHERE        (Clinic_Bs" +
                "k_ReservationTable.DrID = @DRID) AND (Clinic_Bsk_ReservationTable.VisitDate = @V" +
                "isitDate) AND (Clinic_Bsk_ReservationTable.Attended = @Attend) AND \r\n           " +
                "              (Clinic_Bsk_ReservationTable.ClinicID <> 44) AND (Clinic_Bsk_Reser" +
                "vationTable.TakeService = 0)\r\nORDER BY Clinic_Bsk_ReservationTable.AttendOrder";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DRID", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "DrID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VisitDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Attend", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Attended", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Clinic_Bsk_ReservationTable.REye, Clinic_Bsk_ReservationTable.LEye, Clinic_Bs" +
                "k_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountPaid AS Late, D" +
                "ATENAME(dw, \r\n                         Clinic_Bsk_ReservationTable.VisitDate) AS" +
                " VisitDay, Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_ReservationTable.Pre" +
                "pared, Clinic_Bsk_ReservationTable.Transferd, \r\n                         Clinic_" +
                "Bsk_ReservationTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, Clinic_" +
                "Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList.SubServiceName" +
                ", EMR_PF_Basic.Address, \r\n                         CONVERT(varchar(15), CAST(Cli" +
                "nic_Bsk_ReservationTable.AttendTime AS TIME), 100) AS AttendTime, EMR_PF_Basic.P" +
                "FileID, Clinic_Reservation_Lup_HourSlot.HourSlotTitle, Fin_AccountsInfo.AccountT" +
                "itle, \r\n                         Clinic_Bsk_ReservationTable.AttendOrder, CONVER" +
                "T(varchar(15), CAST(Clinic_Bsk_ReservationTable.AttendTime AS TIME), 100) AS Att" +
                "endTime\r\nFROM            Fin_InvoiceBasic INNER JOIN\r\n                         F" +
                "in_InvoiceDetaills ON Fin_InvoiceBasic.InvoiceSerial = Fin_InvoiceDetaills.Invoi" +
                "ceID LEFT OUTER JOIN\r\n                         Fin_AccountsInfo ON Fin_InvoiceBa" +
                "sic.ReferalDrName = Fin_AccountsInfo.AccountID RIGHT OUTER JOIN\r\n               " +
                "          Clinic_Bsk_ReservationTable INNER JOIN\r\n                         EMR_P" +
                "F_Basic ON Clinic_Bsk_ReservationTable.PID = EMR_PF_Basic.RecordID INNER JOIN\r\n " +
                "                        Clinic_Bsk_ClinicList ON Clinic_Bsk_ReservationTable.Cli" +
                "nicID = Clinic_Bsk_ClinicList.ClinicID INNER JOIN\r\n                         Clin" +
                "ic_Bsk_DoctorsList ON Clinic_Bsk_ReservationTable.DrID = Clinic_Bsk_DoctorsList." +
                "DrID ON Fin_InvoiceDetaills.RecordSerial = Clinic_Bsk_ReservationTable.InvoiceDe" +
                "tailsRecordID LEFT OUTER JOIN\r\n                         Clinic_Reservation_Lup_H" +
                "ourSlot ON Clinic_Bsk_ReservationTable.BookingTime = Clinic_Reservation_Lup_Hour" +
                "Slot.HourSlotID LEFT OUTER JOIN\r\n                         Clinic_Lup_SubSrvicesL" +
                "ist ON Clinic_Bsk_ReservationTable.SubClinicID = Clinic_Lup_SubSrvicesList.SubSe" +
                "rviceID LEFT OUTER JOIN\r\n                         Fin_AccountStatment ON Clinic_" +
                "Bsk_ReservationTable.PID = Fin_AccountStatment.RecordID\r\nWHERE        (Clinic_Bs" +
                "k_ReservationTable.DrID = @DRID) AND (Clinic_Bsk_ReservationTable.VisitDate = @V" +
                "isitDate) AND (Clinic_Bsk_ReservationTable.ClinicID <> 44)\r\nORDER BY Clinic_Bsk_" +
                "ReservationTable.AttendOrder";
            this._commandCollection[9].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DRID", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "DrID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VisitDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Pre_Users_1.DisplayName AS CreatedBy, Clinic_Bsk_ReservationTable.RCDate, Pre" +
                "_Users.DisplayName AS ModifiedBy, Clinic_Bsk_ReservationTable.LADate, Clinic_Bsk" +
                "_ReservationTable.REye, \r\n                         Clinic_Bsk_ReservationTable.L" +
                "Eye, Clinic_Bsk_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountP" +
                "aid AS Late, DATENAME(dw, Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, \r\n" +
                "                         Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_Reserv" +
                "ationTable.Prepared, Clinic_Bsk_ReservationTable.Transferd, Clinic_Bsk_Reservati" +
                "onTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, \r\n                  " +
                "       Clinic_Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList." +
                "SubServiceName, EMR_PF_Basic.PFileID, Clinic_Reservation_Lup_HourSlot.HourSlotTi" +
                "tle, \r\n                         Clinic_Bsk_ReservationTable.AttendOrder, CONVERT" +
                "(varchar(15), CAST(Clinic_Bsk_ReservationTable.AttendTime AS TIME), 100) AS Atte" +
                "ndTime\r\nFROM            Pre_Users RIGHT OUTER JOIN\r\n                         Cli" +
                "nic_Bsk_ReservationTable INNER JOIN\r\n                         EMR_PF_Basic ON Cl" +
                "inic_Bsk_ReservationTable.PID = EMR_PF_Basic.RecordID INNER JOIN\r\n              " +
                "           Clinic_Bsk_ClinicList ON Clinic_Bsk_ReservationTable.ClinicID = Clini" +
                "c_Bsk_ClinicList.ClinicID INNER JOIN\r\n                         Clinic_Bsk_Doctor" +
                "sList ON Clinic_Bsk_ReservationTable.DrID = Clinic_Bsk_DoctorsList.DrID LEFT OUT" +
                "ER JOIN\r\n                         Clinic_Reservation_Lup_HourSlot ON Clinic_Bsk_" +
                "ReservationTable.BookingTime = Clinic_Reservation_Lup_HourSlot.HourSlotID LEFT O" +
                "UTER JOIN\r\n                         Clinic_Lup_SubSrvicesList ON Clinic_Bsk_Rese" +
                "rvationTable.SubClinicID = Clinic_Lup_SubSrvicesList.SubServiceID ON Pre_Users.U" +
                "serID = Clinic_Bsk_ReservationTable.LABy LEFT OUTER JOIN\r\n                      " +
                "   Pre_Users AS Pre_Users_1 ON Clinic_Bsk_ReservationTable.RCBy = Pre_Users_1.Us" +
                "erID LEFT OUTER JOIN\r\n                         Fin_AccountStatment ON Clinic_Bsk" +
                "_ReservationTable.PID = Fin_AccountStatment.RecordID\r\nWHERE        (EMR_PF_Basic" +
                ".PatientName LIKE N\'%\' + @NameLike + N\'%\') AND (Clinic_Bsk_ReservationTable.Visi" +
                "tDate = @ReservationDate)";
            this._commandCollection[10].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NameLike", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, "PatientName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReservationDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[11] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[11].Connection = this.Connection;
            this._commandCollection[11].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Pre_Users_1.DisplayName AS CreatedBy, Clinic_Bsk_ReservationTable.RCDate, Pre" +
                "_Users.DisplayName AS ModifiedBy, Clinic_Bsk_ReservationTable.LADate, Clinic_Bsk" +
                "_ReservationTable.REye, \r\n                         Clinic_Bsk_ReservationTable.L" +
                "Eye, Clinic_Bsk_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountP" +
                "aid AS Late, DATENAME(dw, Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, \r\n" +
                "                         Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_Reserv" +
                "ationTable.Prepared, Clinic_Bsk_ReservationTable.Transferd, Clinic_Bsk_Reservati" +
                "onTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, \r\n                  " +
                "       Clinic_Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList." +
                "SubServiceName, EMR_PF_Basic.PFileID, Clinic_Reservation_Lup_HourSlot.HourSlotTi" +
                "tle, \r\n                         Clinic_Bsk_ReservationTable.AttendOrder, CONVERT" +
                "(varchar(15), CAST(Clinic_Bsk_ReservationTable.AttendTime AS TIME), 100) AS Atte" +
                "ndTime\r\nFROM            Pre_Users RIGHT OUTER JOIN\r\n                         Cli" +
                "nic_Bsk_ReservationTable INNER JOIN\r\n                         EMR_PF_Basic ON Cl" +
                "inic_Bsk_ReservationTable.PID = EMR_PF_Basic.RecordID INNER JOIN\r\n              " +
                "           Clinic_Bsk_ClinicList ON Clinic_Bsk_ReservationTable.ClinicID = Clini" +
                "c_Bsk_ClinicList.ClinicID INNER JOIN\r\n                         Clinic_Bsk_Doctor" +
                "sList ON Clinic_Bsk_ReservationTable.DrID = Clinic_Bsk_DoctorsList.DrID LEFT OUT" +
                "ER JOIN\r\n                         Clinic_Reservation_Lup_HourSlot ON Clinic_Bsk_" +
                "ReservationTable.BookingTime = Clinic_Reservation_Lup_HourSlot.HourSlotID LEFT O" +
                "UTER JOIN\r\n                         Clinic_Lup_SubSrvicesList ON Clinic_Bsk_Rese" +
                "rvationTable.SubClinicID = Clinic_Lup_SubSrvicesList.SubServiceID ON Pre_Users.U" +
                "serID = Clinic_Bsk_ReservationTable.LABy LEFT OUTER JOIN\r\n                      " +
                "   Pre_Users AS Pre_Users_1 ON Clinic_Bsk_ReservationTable.RCBy = Pre_Users_1.Us" +
                "erID LEFT OUTER JOIN\r\n                         Fin_AccountStatment ON Clinic_Bsk" +
                "_ReservationTable.PID = Fin_AccountStatment.RecordID\r\nWHERE        (Clinic_Bsk_R" +
                "eservationTable.PID = @PID) AND (Clinic_Bsk_ReservationTable.VisitDate = @VDate)" +
                "";
            this._commandCollection[11].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[11].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[11].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[12] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[12].Connection = this.Connection;
            this._commandCollection[12].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Pre_Users_1.DisplayName AS CreatedBy, Clinic_Bsk_ReservationTable.RCDate, Pre" +
                "_Users.DisplayName AS ModifiedBy, Clinic_Bsk_ReservationTable.LADate, Clinic_Bsk" +
                "_ReservationTable.REye, \r\n                         Clinic_Bsk_ReservationTable.L" +
                "Eye, Clinic_Bsk_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountP" +
                "aid AS Late, DATENAME(dw, Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, \r\n" +
                "                         Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_Reserv" +
                "ationTable.Prepared, Clinic_Bsk_ReservationTable.Transferd, Clinic_Bsk_Reservati" +
                "onTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, \r\n                  " +
                "       Clinic_Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList." +
                "SubServiceName, CONVERT(nvarchar(MAX), DATEDIFF(yy, EMR_PF_Basic.BirthDate, GETD" +
                "ATE())) AS Age, EMR_PF_Basic.PFileID, \r\n                         Clinic_Reservat" +
                "ion_Lup_HourSlot.HourSlotTitle, Clinic_Bsk_ReservationTable.AttendOrder, CONVERT" +
                "(varchar(15), CAST(Clinic_Bsk_ReservationTable.AttendTime AS TIME), 100) AS Atte" +
                "ndTime\r\nFROM            Pre_Users RIGHT OUTER JOIN\r\n                         Cli" +
                "nic_Bsk_ReservationTable INNER JOIN\r\n                         EMR_PF_Basic ON Cl" +
                "inic_Bsk_ReservationTable.PID = EMR_PF_Basic.RecordID INNER JOIN\r\n              " +
                "           Clinic_Bsk_ClinicList ON Clinic_Bsk_ReservationTable.ClinicID = Clini" +
                "c_Bsk_ClinicList.ClinicID INNER JOIN\r\n                         Clinic_Bsk_Doctor" +
                "sList ON Clinic_Bsk_ReservationTable.DrID = Clinic_Bsk_DoctorsList.DrID LEFT OUT" +
                "ER JOIN\r\n                         Clinic_Reservation_Lup_HourSlot ON Clinic_Bsk_" +
                "ReservationTable.BookingTime = Clinic_Reservation_Lup_HourSlot.HourSlotID LEFT O" +
                "UTER JOIN\r\n                         Clinic_Lup_SubSrvicesList ON Clinic_Bsk_Rese" +
                "rvationTable.SubClinicID = Clinic_Lup_SubSrvicesList.SubServiceID ON Pre_Users.U" +
                "serID = Clinic_Bsk_ReservationTable.LABy LEFT OUTER JOIN\r\n                      " +
                "   Pre_Users AS Pre_Users_1 ON Clinic_Bsk_ReservationTable.RCBy = Pre_Users_1.Us" +
                "erID LEFT OUTER JOIN\r\n                         Fin_AccountStatment ON Clinic_Bsk" +
                "_ReservationTable.PID = Fin_AccountStatment.RecordID\r\nWHERE        (Clinic_Bsk_R" +
                "eservationTable.VisitDate BETWEEN @StartD AND @EndD) AND (Clinic_Bsk_Reservation" +
                "Table.SubClinicID = @SubServiceID)\r\nORDER BY Clinic_Bsk_ReservationTable.VisitDa" +
                "te, EMR_PF_Basic.PatientName";
            this._commandCollection[12].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[12].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartD", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[12].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndD", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[12].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubServiceID", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "SubClinicID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[13].Connection = this.Connection;
            this._commandCollection[13].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Pre_Users.DisplayName AS CreatedBy, Clinic_Bsk_ReservationTable.RCDate, Clini" +
                "c_Bsk_ReservationTable.LABy, Pre_Users_1.DisplayName AS ModifiedBy, Clinic_Bsk_R" +
                "eservationTable.LADate, \r\n                         Clinic_Bsk_ReservationTable.R" +
                "Eye, Clinic_Bsk_ReservationTable.LEye, Clinic_Bsk_ReservationTable.VisitCost - C" +
                "linic_Bsk_ReservationTable.AmountPaid AS Late, DATENAME(dw, \r\n                  " +
                "       Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, Clinic_Bsk_Reservatio" +
                "nTable.Attended, Clinic_Bsk_ReservationTable.Prepared, Clinic_Bsk_ReservationTab" +
                "le.Transferd, \r\n                         Clinic_Bsk_ReservationTable.IsCurrent, " +
                "Clinic_Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList.SubServ" +
                "iceName, EMR_PF_Basic.PFileID, Clinic_Bsk_ReservationTable.TakeService, \r\n      " +
                "                   Clinic_Reservation_Lup_HourSlot.HourSlotTitle, Clinic_Bsk_Res" +
                "ervationTable.AttendOrder, CONVERT(varchar(15), CAST(Clinic_Bsk_ReservationTable" +
                ".AttendTime AS TIME), 100) AS AttendTime\r\nFROM            Pre_Users AS Pre_Users" +
                "_1 RIGHT OUTER JOIN\r\n                         Clinic_Reservation_Lup_HourSlot RI" +
                "GHT OUTER JOIN\r\n                         Clinic_Bsk_ReservationTable INNER JOIN\r" +
                "\n                         EMR_PF_Basic ON Clinic_Bsk_ReservationTable.PID = EMR_" +
                "PF_Basic.RecordID INNER JOIN\r\n                         Clinic_Bsk_ClinicList ON " +
                "Clinic_Bsk_ReservationTable.ClinicID = Clinic_Bsk_ClinicList.ClinicID INNER JOIN" +
                "\r\n                         Clinic_Bsk_DoctorsList ON Clinic_Bsk_ReservationTable" +
                ".DrID = Clinic_Bsk_DoctorsList.DrID ON Clinic_Reservation_Lup_HourSlot.HourSlotI" +
                "D = Clinic_Bsk_ReservationTable.BookingTime LEFT OUTER JOIN\r\n                   " +
                "      Clinic_Lup_SubSrvicesList ON Clinic_Bsk_ReservationTable.SubClinicID = Cli" +
                "nic_Lup_SubSrvicesList.SubServiceID ON Pre_Users_1.UserID = Clinic_Bsk_Reservati" +
                "onTable.LABy LEFT OUTER JOIN\r\n                         Fin_AccountStatment ON Cl" +
                "inic_Bsk_ReservationTable.PID = Fin_AccountStatment.RecordID LEFT OUTER JOIN\r\n  " +
                "                       Pre_Users ON Clinic_Bsk_ReservationTable.RCBy = Pre_Users" +
                ".UserID\r\nWHERE        (Clinic_Bsk_ReservationTable.VisitDate = @VDate)";
            this._commandCollection[13].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[14] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[14].Connection = this.Connection;
            this._commandCollection[14].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Pre_Users_1.DisplayName AS CreatedBy, Clinic_Bsk_ReservationTable.RCDate, Pre" +
                "_Users.DisplayName AS ModifiedBy, Clinic_Bsk_ReservationTable.LADate, Clinic_Bsk" +
                "_ReservationTable.REye, \r\n                         Clinic_Bsk_ReservationTable.L" +
                "Eye, Clinic_Bsk_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountP" +
                "aid AS Late, DATENAME(dw, Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, \r\n" +
                "                         Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_Reserv" +
                "ationTable.Prepared, Clinic_Bsk_ReservationTable.Transferd, Clinic_Bsk_Reservati" +
                "onTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, \r\n                  " +
                "       Clinic_Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList." +
                "SubServiceName, EMR_PF_Basic.PFileID, Clinic_Reservation_Lup_HourSlot.HourSlotTi" +
                "tle, \r\n                         Clinic_Bsk_ReservationTable.AttendOrder, CONVERT" +
                "(varchar(15), CAST(Clinic_Bsk_ReservationTable.AttendTime AS TIME), 100) AS Atte" +
                "ndTime\r\nFROM            Pre_Users RIGHT OUTER JOIN\r\n                         Cli" +
                "nic_Bsk_ReservationTable INNER JOIN\r\n                         EMR_PF_Basic ON Cl" +
                "inic_Bsk_ReservationTable.PID = EMR_PF_Basic.RecordID INNER JOIN\r\n              " +
                "           Clinic_Bsk_ClinicList ON Clinic_Bsk_ReservationTable.ClinicID = Clini" +
                "c_Bsk_ClinicList.ClinicID INNER JOIN\r\n                         Clinic_Bsk_Doctor" +
                "sList ON Clinic_Bsk_ReservationTable.DrID = Clinic_Bsk_DoctorsList.DrID LEFT OUT" +
                "ER JOIN\r\n                         Clinic_Reservation_Lup_HourSlot ON Clinic_Bsk_" +
                "ReservationTable.BookingTime = Clinic_Reservation_Lup_HourSlot.HourSlotID LEFT O" +
                "UTER JOIN\r\n                         Clinic_Lup_SubSrvicesList ON Clinic_Bsk_Rese" +
                "rvationTable.SubClinicID = Clinic_Lup_SubSrvicesList.SubServiceID ON Pre_Users.U" +
                "serID = Clinic_Bsk_ReservationTable.LABy LEFT OUTER JOIN\r\n                      " +
                "   Pre_Users AS Pre_Users_1 ON Clinic_Bsk_ReservationTable.RCBy = Pre_Users_1.Us" +
                "erID LEFT OUTER JOIN\r\n                         Fin_AccountStatment ON Clinic_Bsk" +
                "_ReservationTable.PID = Fin_AccountStatment.RecordID\r\nWHERE        (Clinic_Bsk_R" +
                "eservationTable.PID = @PID)\r\nORDER BY Clinic_Bsk_ReservationTable.VisitDate DESC" +
                "";
            this._commandCollection[14].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[14].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClinicReception.RreservationGridDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByArchiveView(ClinicReception.RreservationGridDataTable dataTable, string VDate) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((VDate == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(VDate));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByArchiveViewByFileNo(ClinicReception.RreservationGridDataTable dataTable, string VDate, string ProfileNo) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((VDate == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(VDate));
            }
            if ((ProfileNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ProfileNo));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByArchiveViewNameLike(ClinicReception.RreservationGridDataTable dataTable, string VDate, string NameLike) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((VDate == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(VDate));
            }
            if ((NameLike == null)) {
                throw new global::System.ArgumentNullException("NameLike");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(NameLike));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByAttendFlag(ClinicReception.RreservationGridDataTable dataTable, string VDate, global::System.Nullable<bool> AttendFlag) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((VDate == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(VDate));
            }
            if ((AttendFlag.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(AttendFlag.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBookingID(ClinicReception.RreservationGridDataTable dataTable, int BookingID) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(BookingID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByClinic(ClinicReception.RreservationGridDataTable dataTable, global::System.Nullable<byte> ClinicID, string VDate) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            if ((ClinicID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((byte)(ClinicID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((VDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(VDate));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDrDateCurrent(ClinicReception.RreservationGridDataTable dataTable, global::System.Nullable<short> DRID, string VisitDate, global::System.Nullable<bool> Attend, global::System.Nullable<bool> CurrentFlag) {
            this.Adapter.SelectCommand = this.CommandCollection[7];
            if ((DRID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((short)(DRID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((VisitDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(VisitDate));
            }
            if ((Attend.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(Attend.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((CurrentFlag.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((bool)(CurrentFlag.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDrwithDate(ClinicReception.RreservationGridDataTable dataTable, global::System.Nullable<short> DRID, string VisitDate, global::System.Nullable<bool> Attend) {
            this.Adapter.SelectCommand = this.CommandCollection[8];
            if ((DRID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((short)(DRID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((VisitDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(VisitDate));
            }
            if ((Attend.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(Attend.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDrWithDateAllSheet(ClinicReception.RreservationGridDataTable dataTable, global::System.Nullable<short> DRID, string VisitDate) {
            this.Adapter.SelectCommand = this.CommandCollection[9];
            if ((DRID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((short)(DRID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((VisitDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(VisitDate));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByNameInBookingDay(ClinicReception.RreservationGridDataTable dataTable, string NameLike, string ReservationDate) {
            this.Adapter.SelectCommand = this.CommandCollection[10];
            if ((NameLike == null)) {
                throw new global::System.ArgumentNullException("NameLike");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(NameLike));
            }
            if ((ReservationDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ReservationDate));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByPatienr(ClinicReception.RreservationGridDataTable dataTable, global::System.Nullable<long> PID, string VDate) {
            this.Adapter.SelectCommand = this.CommandCollection[11];
            if ((PID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((long)(PID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((VDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(VDate));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySubServiceInDateRange(ClinicReception.RreservationGridDataTable dataTable, string StartD, string EndD, global::System.Nullable<short> SubServiceID) {
            this.Adapter.SelectCommand = this.CommandCollection[12];
            if ((StartD == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(StartD));
            }
            if ((EndD == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(EndD));
            }
            if ((SubServiceID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((short)(SubServiceID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByVDate(ClinicReception.RreservationGridDataTable dataTable, string VDate) {
            this.Adapter.SelectCommand = this.CommandCollection[13];
            if ((VDate == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(VDate));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillPatientHistory(ClinicReception.RreservationGridDataTable dataTable, global::System.Nullable<long> PID) {
            this.Adapter.SelectCommand = this.CommandCollection[14];
            if ((PID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((long)(PID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Clinic_Bsk_ReservationTableTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Clinic_Bsk_ReservationTableTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Clinic_Bsk_ReservationTable";
            tableMapping.ColumnMappings.Add("RecordSerial", "RecordSerial");
            tableMapping.ColumnMappings.Add("DrID", "DrID");
            tableMapping.ColumnMappings.Add("ClinicID", "ClinicID");
            tableMapping.ColumnMappings.Add("VisitDate", "VisitDate");
            tableMapping.ColumnMappings.Add("IsEstshara", "IsEstshara");
            tableMapping.ColumnMappings.Add("SinceInDays", "SinceInDays");
            tableMapping.ColumnMappings.Add("PID", "PID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Clinic_Bsk_ReservationTable] WHERE (([RecordSerial] = @Original_Reco" +
                "rdSerial))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordSerial", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordSerial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Clinic_Bsk_ReservationTable] SET [DrID] = @DrID, [ClinicID] = @ClinicID, [VisitDate] = @VisitDate, [IsEstshara] = @IsEstshara WHERE (([RecordSerial] = @Original_RecordSerial));
SELECT TOP (1) RecordSerial, DrID, ClinicID, VisitDate, IsEstshara, DATEDIFF(day, GETDATE(), VisitDate) AS SinceInDays FROM Clinic_Bsk_ReservationTable WHERE (RecordSerial = @RecordSerial) ORDER BY RecordSerial DESC";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DrID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DrID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClinicID", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClinicID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VisitDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsEstshara", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsEstshara", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecordSerial", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordSerial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordSerial", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "RecordSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TMS.Properties.Settings.Default.TMSCS;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT TOP (1) RecordSerial, DrID, ClinicID, VisitDate, IsEstshara, DATEDIFF(day, GETDATE(), VisitDate) AS SinceInDays FROM Clinic_Bsk_ReservationTable WHERE (PID = @PID) AND (DrID = @DRID) AND (ClinicID = @CID) AND (EnterOrder IS NOT NULL) ORDER BY RecordSerial DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DRID", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "DrID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CID", global::System.Data.SqlDbType.TinyInt, 1, global::System.Data.ParameterDirection.Input, 0, 0, "ClinicID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillLastVisit(ClinicReception.Clinic_Bsk_ReservationTableDataTable dataTable, global::System.Nullable<long> PID, global::System.Nullable<short> DRID, global::System.Nullable<byte> CID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((long)(PID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((DRID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((short)(DRID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((CID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((byte)(CID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClinicReception.Clinic_Bsk_ReservationTableDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ClinicReception dataSet) {
            return this.Adapter.Update(dataSet, "Clinic_Bsk_ReservationTable");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ClinicDoctorsLinkTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ClinicDoctorsLinkTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ClinicDoctorsLink";
            tableMapping.ColumnMappings.Add("ClinicTitle", "ClinicTitle");
            tableMapping.ColumnMappings.Add("DrName", "DrName");
            tableMapping.ColumnMappings.Add("VisitCost", "VisitCost");
            tableMapping.ColumnMappings.Add("EstisharaCost", "EstisharaCost");
            tableMapping.ColumnMappings.Add("EstisharaLenght", "EstisharaLenght");
            tableMapping.ColumnMappings.Add("ClinicID", "ClinicID");
            tableMapping.ColumnMappings.Add("DoctorID", "DoctorID");
            tableMapping.ColumnMappings.Add("RecordSerial", "RecordSerial");
            tableMapping.ColumnMappings.Add("ServiceLevelID", "ServiceLevelID");
            tableMapping.ColumnMappings.Add("Clinic_ServiceLevelTitle", "Clinic_ServiceLevelTitle");
            tableMapping.ColumnMappings.Add("HospitalShare", "HospitalShare");
            tableMapping.ColumnMappings.Add("DrShare", "DrShare");
            tableMapping.ColumnMappings.Add("LinkedVisitServiceID", "LinkedVisitServiceID1");
            tableMapping.ColumnMappings.Add("LinkedEstsharServiceID", "LinkedEstsharServiceID1");
            tableMapping.ColumnMappings.Add("ItemOrgID", "ItemOrgID");
            tableMapping.ColumnMappings.Add("VisitService", "VisitService");
            tableMapping.ColumnMappings.Add("EstsharaService", "EstsharaService");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TMS.Properties.Settings.Default.TMSCS;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_DoctorsList.DrName, C" +
                "linic_Bsk_lnk_ClinicDoctors.VisitCost, Clinic_Bsk_lnk_ClinicDoctors.EstisharaCos" +
                "t, Clinic_Bsk_lnk_ClinicDoctors.EstisharaLenght, \r\n                         Clin" +
                "ic_Bsk_lnk_ClinicDoctors.ClinicID, Clinic_Bsk_lnk_ClinicDoctors.DoctorID, Clinic" +
                "_Bsk_lnk_ClinicDoctors.RecordSerial, Clinic_Bsk_lnk_ClinicDoctors.ServiceLevelID" +
                ", \r\n                         Clinic_Lup_ServiceLevel.Clinic_ServiceLevelTitle, C" +
                "linic_Bsk_lnk_ClinicDoctors.HospitalShare, Clinic_Bsk_lnk_ClinicDoctors.DrShare," +
                " Clinic_Bsk_lnk_ClinicDoctors.LinkedVisitServiceID, \r\n                         C" +
                "linic_Bsk_lnk_ClinicDoctors.LinkedEstsharServiceID, Inv_Items_1.ItemOrgID, Inv_I" +
                "tems_1.ItemName AS VisitService, Inv_Items.ItemName AS EstsharaService\r\nFROM    " +
                "        Clinic_Bsk_ClinicList INNER JOIN\r\n                         Clinic_Bsk_ln" +
                "k_ClinicDoctors ON Clinic_Bsk_ClinicList.ClinicID = Clinic_Bsk_lnk_ClinicDoctors" +
                ".ClinicID INNER JOIN\r\n                         Clinic_Bsk_DoctorsList ON Clinic_" +
                "Bsk_lnk_ClinicDoctors.DoctorID = Clinic_Bsk_DoctorsList.DrID INNER JOIN\r\n       " +
                "                  Clinic_Lup_ServiceLevel ON Clinic_Bsk_lnk_ClinicDoctors.Servic" +
                "eLevelID = Clinic_Lup_ServiceLevel.Clinic_Lup_ServiceLevelID LEFT OUTER JOIN\r\n  " +
                "                       Inv_Items ON Clinic_Bsk_lnk_ClinicDoctors.LinkedEstsharSe" +
                "rviceID = Inv_Items.ItemLocalID LEFT OUTER JOIN\r\n                         Inv_It" +
                "ems AS Inv_Items_1 ON Clinic_Bsk_lnk_ClinicDoctors.LinkedVisitServiceID = Inv_It" +
                "ems_1.ItemLocalID\r\nWHERE        (Clinic_Bsk_lnk_ClinicDoctors.IsDeleted = 0)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_DoctorsList.DrName, Clinic_Bsk_lnk_ClinicDoctors.VisitCost, Clinic_Bsk_lnk_ClinicDoctors.EstisharaCost, Clinic_Bsk_lnk_ClinicDoctors.EstisharaLenght, 
                         Clinic_Bsk_lnk_ClinicDoctors.ClinicID, Clinic_Bsk_lnk_ClinicDoctors.DoctorID, Clinic_Bsk_lnk_ClinicDoctors.RecordSerial, Clinic_Bsk_lnk_ClinicDoctors.ServiceLevelID, 
                         Clinic_Lup_ServiceLevel.Clinic_ServiceLevelTitle, Clinic_Bsk_lnk_ClinicDoctors.HospitalShare, Clinic_Bsk_lnk_ClinicDoctors.DrShare, Clinic_Bsk_lnk_ClinicDoctors.LinkedVisitServiceID, 
                         Clinic_Bsk_lnk_ClinicDoctors.LinkedEstsharServiceID
FROM            Clinic_Bsk_ClinicList INNER JOIN
                         Clinic_Bsk_lnk_ClinicDoctors ON Clinic_Bsk_ClinicList.ClinicID = Clinic_Bsk_lnk_ClinicDoctors.ClinicID INNER JOIN
                         Clinic_Bsk_DoctorsList ON Clinic_Bsk_lnk_ClinicDoctors.DoctorID = Clinic_Bsk_DoctorsList.DrID INNER JOIN
                         Clinic_Lup_ServiceLevel ON Clinic_Bsk_lnk_ClinicDoctors.ServiceLevelID = Clinic_Lup_ServiceLevel.Clinic_Lup_ServiceLevelID
WHERE        (Clinic_Bsk_ClinicList.ClinicID = @ClinicID) AND (Clinic_Bsk_lnk_ClinicDoctors.IsDeleted = 0)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClinicID", global::System.Data.SqlDbType.TinyInt, 1, global::System.Data.ParameterDirection.Input, 0, 0, "ClinicID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_DoctorsList.DrName, C" +
                "linic_Bsk_lnk_ClinicDoctors.VisitCost, Clinic_Bsk_lnk_ClinicDoctors.EstisharaCos" +
                "t, Clinic_Bsk_lnk_ClinicDoctors.EstisharaLenght, \r\n                         Clin" +
                "ic_Bsk_lnk_ClinicDoctors.ClinicID, Clinic_Bsk_lnk_ClinicDoctors.DoctorID, Clinic" +
                "_Bsk_lnk_ClinicDoctors.RecordSerial, Clinic_Bsk_lnk_ClinicDoctors.ServiceLevelID" +
                ", \r\n                         Clinic_Lup_ServiceLevel.Clinic_ServiceLevelTitle, C" +
                "linic_Bsk_lnk_ClinicDoctors.HospitalShare, Clinic_Bsk_lnk_ClinicDoctors.DrShare," +
                " Clinic_Bsk_lnk_ClinicDoctors.LinkedVisitServiceID, \r\n                         C" +
                "linic_Bsk_lnk_ClinicDoctors.LinkedEstsharServiceID, Inv_Items_1.ItemName AS Visi" +
                "tService, Inv_Items.ItemName AS EstsharaService\r\nFROM            Clinic_Bsk_Doct" +
                "orsList INNER JOIN\r\n                         Clinic_Bsk_lnk_ClinicDoctors ON Cli" +
                "nic_Bsk_DoctorsList.DrID = Clinic_Bsk_lnk_ClinicDoctors.DoctorID INNER JOIN\r\n   " +
                "                      Clinic_Bsk_ClinicList ON Clinic_Bsk_lnk_ClinicDoctors.Clin" +
                "icID = Clinic_Bsk_ClinicList.ClinicID INNER JOIN\r\n                         Clini" +
                "c_Lup_ServiceLevel ON Clinic_Bsk_lnk_ClinicDoctors.ServiceLevelID = Clinic_Lup_S" +
                "erviceLevel.Clinic_Lup_ServiceLevelID LEFT OUTER JOIN\r\n                         " +
                "Inv_Items ON Clinic_Bsk_lnk_ClinicDoctors.LinkedEstsharServiceID = Inv_Items.Ite" +
                "mLocalID LEFT OUTER JOIN\r\n                         Inv_Items AS Inv_Items_1 ON C" +
                "linic_Bsk_lnk_ClinicDoctors.LinkedVisitServiceID = Inv_Items_1.ItemLocalID\r\nWHER" +
                "E        (Clinic_Bsk_DoctorsList.DrID = @DrId) AND (Clinic_Bsk_lnk_ClinicDoctors" +
                ".IsDeleted = 0)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DrId", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "DrID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClinicReception.ClinicDoctorsLinkDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FilterByClinicTitle(ClinicReception.ClinicDoctorsLinkDataTable dataTable, byte ClinicID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((byte)(ClinicID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FilterByDcName(ClinicReception.ClinicDoctorsLinkDataTable dataTable, short DrId) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((short)(DrId));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ClinicListGridTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ClinicListGridTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ClinicListGrid";
            tableMapping.ColumnMappings.Add("ClinicID", "ClinicID");
            tableMapping.ColumnMappings.Add("ClinicTitle", "ClinicTitle");
            tableMapping.ColumnMappings.Add("ShowInReception", "ShowInReception");
            tableMapping.ColumnMappings.Add("ClinicIcon", "ClinicIcon");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TMS.Properties.Settings.Default.TMSCS;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ClinicID, ClinicTitle, ShowInReception, ClinicIcon\r\nFROM           " +
                " Clinic_Bsk_ClinicList\r\nWHERE        (ShowInReception = @ShowInReception) AND (I" +
                "sDeleted = 0)\r\nORDER BY IsDefault";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShowInReception", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "ShowInReception", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        ClinicID, ClinicTitle, ShowInReception, ClinicIcon\r\nFROM           " +
                " Clinic_Bsk_ClinicList\r\nWHERE        (IsDeleted = 0)\r\nORDER BY IsDefault";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        ClinicID, ClinicTitle, ShowInReception, ClinicIcon\r\nFROM           " +
                " Clinic_Bsk_ClinicList\r\nWHERE        (ClinicID = @ClinicID) AND (IsDeleted = 0)\r" +
                "\nORDER BY IsDefault DESC";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClinicID", global::System.Data.SqlDbType.TinyInt, 1, global::System.Data.ParameterDirection.Input, 0, 0, "ClinicID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClinicReception.ClinicListGridDataTable dataTable, bool ShowInReception) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(ShowInReception));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillAll(ClinicReception.ClinicListGridDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillControlsToUpdate(ClinicReception.ClinicListGridDataTable dataTable, byte ClinicID) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((byte)(ClinicID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DoctorDegreeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DoctorDegreeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DoctorDegree";
            tableMapping.ColumnMappings.Add("MedicalDgreeTitle", "MedicalDgreeTitle");
            tableMapping.ColumnMappings.Add("DrID", "DrID");
            tableMapping.ColumnMappings.Add("DrName", "DrName");
            tableMapping.ColumnMappings.Add("IsDeleted", "IsDeleted");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TMS.Properties.Settings.Default.TMSCS;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Clinic_Lup_MedicalDgreeList.MedicalDgreeTitle, Clinic_Bsk_DoctorsList.DrID, Clinic_Bsk_DoctorsList.DrName, Clinic_Bsk_DoctorsList.IsDeleted
FROM            Clinic_Bsk_DoctorsList INNER JOIN
                         Clinic_Lup_MedicalDgreeList ON Clinic_Bsk_DoctorsList.DrMedicalDgree = Clinic_Lup_MedicalDgreeList.MedicalDgreeID
WHERE        (Clinic_Bsk_DoctorsList.IsDeleted = @IsDeleted)
ORDER BY Clinic_Bsk_DoctorsList.IsDefault DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsDeleted", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "IsDeleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        Clinic_Lup_MedicalDgreeList.MedicalDgreeTitle, Clinic_Bsk_DoctorsList.DrID, Clinic_Bsk_DoctorsList.DrName, Clinic_Bsk_DoctorsList.IsDeleted
FROM            Clinic_Bsk_DoctorsList INNER JOIN
                         Clinic_Lup_MedicalDgreeList ON Clinic_Bsk_DoctorsList.DrMedicalDgree = Clinic_Lup_MedicalDgreeList.MedicalDgreeID
WHERE        (Clinic_Bsk_DoctorsList.IsDeleted = @IsDeleted) AND (Clinic_Bsk_DoctorsList.DrID = @DrID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsDeleted", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "IsDeleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DrID", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "DrID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClinicReception.DoctorDegreeDataTable dataTable, bool IsDeleted) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(IsDeleted));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FilllControlsToUpdate(ClinicReception.DoctorDegreeDataTable dataTable, bool IsDeleted, short DrID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(IsDeleted));
            this.Adapter.SelectCommand.Parameters[1].Value = ((short)(DrID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ClinicReception.DoctorDegreeDataTable GetDataBy(bool IsDeleted, short DrID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(IsDeleted));
            this.Adapter.SelectCommand.Parameters[1].Value = ((short)(DrID));
            ClinicReception.DoctorDegreeDataTable dataTable = new ClinicReception.DoctorDegreeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Clinic_Lup_MedicalDgreeListTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Clinic_Lup_MedicalDgreeListTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Clinic_Lup_MedicalDgreeList";
            tableMapping.ColumnMappings.Add("MedicalDgreeTitle", "MedicalDgreeTitle");
            tableMapping.ColumnMappings.Add("MedicalDgreeID", "MedicalDgreeID");
            tableMapping.ColumnMappings.Add("IsDeleted", "IsDeleted");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TMS.Properties.Settings.Default.TMSCS;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        MedicalDgreeTitle, MedicalDgreeID, IsDeleted\r\nFROM            Clini" +
                "c_Lup_MedicalDgreeList\r\nWHERE        (IsDeleted = @IsDeleted)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsDeleted", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "IsDeleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClinicReception.Clinic_Lup_MedicalDgreeListDataTable dataTable, bool IsDeleted) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(IsDeleted));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ClinicReception.Clinic_Lup_MedicalDgreeListDataTable GetData(bool IsDeleted) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(IsDeleted));
            ClinicReception.Clinic_Lup_MedicalDgreeListDataTable dataTable = new ClinicReception.Clinic_Lup_MedicalDgreeListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RecepitionFinTransViewTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RecepitionFinTransViewTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RecepitionFinTransView";
            tableMapping.ColumnMappings.Add("RecordSerial", "RecordSerial");
            tableMapping.ColumnMappings.Add("VisitDate", "VisitDate");
            tableMapping.ColumnMappings.Add("PID", "PID");
            tableMapping.ColumnMappings.Add("DrID", "DrID");
            tableMapping.ColumnMappings.Add("ClinicID", "ClinicID");
            tableMapping.ColumnMappings.Add("IsEstshara", "IsEstshara");
            tableMapping.ColumnMappings.Add("VisitCost", "VisitCost");
            tableMapping.ColumnMappings.Add("ServiceLevelID", "ServiceLevelID");
            tableMapping.ColumnMappings.Add("DrShareDiscount", "DrShareDiscount");
            tableMapping.ColumnMappings.Add("HospitalShareDiscount", "HospitalShareDiscount");
            tableMapping.ColumnMappings.Add("DrValue", "DrValue");
            tableMapping.ColumnMappings.Add("HospitalValue", "HospitalValue");
            tableMapping.ColumnMappings.Add("ClinicTitle", "ClinicTitle");
            tableMapping.ColumnMappings.Add("DrName", "DrName");
            tableMapping.ColumnMappings.Add("Clinic_ServiceLevelTitle", "Clinic_ServiceLevelTitle");
            tableMapping.ColumnMappings.Add("PatientName", "PatientName");
            tableMapping.ColumnMappings.Add("VisitType", "VisitType");
            tableMapping.ColumnMappings.Add("DrShareStatus", "DrShareStatus");
            tableMapping.ColumnMappings.Add("AmountPaid", "AmountPaid");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TMS.Properties.Settings.Default.TMSCS;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        RecordSerial, VisitDate, PID, DrID, ClinicID, IsEstshara, VisitCost, ServiceLevelID, DrShareDiscount, HospitalShareDiscount, CAST(DrValue AS decimal(10, 2)) AS DrValue, CAST(HospitalValue AS decimal(10, 2)) 
                         AS HospitalValue, ClinicTitle, DrName, Clinic_ServiceLevelTitle, PatientName, CASE IsEstshara WHEN 1 THEN N'استشاره' ELSE N'كشف' END AS VisitType, 
                         CASE DrShareDiscount WHEN 1 THEN N'نعم' ELSE N'لا' END AS DrShareStatus, AmountPaid
FROM            RecepitionFinTransView";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT AmountPaid, ClinicID, ClinicTitle, Clinic_ServiceLevelTitle, DrID, DrName, DrShareDiscount, CASE DrShareDiscount WHEN 1 THEN N'نعم' ELSE N'لا' END AS DrShareStatus, CAST(DrValue AS decimal(10 , 2)) AS DrValue, HospitalShareDiscount, CAST(HospitalValue AS decimal(10 , 2)) AS HospitalValue, IsEstshara, PID, PatientName, RecordSerial, ServiceLevelID, VisitCost, VisitDate, CASE IsEstshara WHEN 1 THEN N'استشاره' ELSE N'كشف' END AS VisitType FROM RecepitionFinTransView WHERE (VisitDate BETWEEN @StartDate AND @EndDate)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT AmountPaid, ClinicID, ClinicTitle, Clinic_ServiceLevelTitle, DrID, DrName, DrShareDiscount, CASE DrShareDiscount WHEN 1 THEN N'نعم' ELSE N'لا' END AS DrShareStatus, CAST(DrValue AS decimal(10 , 2)) AS DrValue, HospitalShareDiscount, CAST(HospitalValue AS decimal(10 , 2)) AS HospitalValue, IsEstshara, PID, PatientName, RecordSerial, ServiceLevelID, VisitCost, VisitDate, CASE IsEstshara WHEN 1 THEN N'استشاره' ELSE N'كشف' END AS VisitType FROM RecepitionFinTransView WHERE (VisitDate BETWEEN @startDate AND @enddate) AND (DrID = @DoctorID)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@enddate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DoctorID", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "DrID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClinicReception.RecepitionFinTransViewDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDateRange(ClinicReception.RecepitionFinTransViewDataTable dataTable, string StartDate, string EndDate) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((StartDate == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(StartDate));
            }
            if ((EndDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(EndDate));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDrID(ClinicReception.RecepitionFinTransViewDataTable dataTable, string startDate, string enddate, global::System.Nullable<short> DoctorID) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((startDate == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(startDate));
            }
            if ((enddate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(enddate));
            }
            if ((DoctorID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((short)(DoctorID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Combo_ReceptionDRListTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Combo_ReceptionDRListTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Combo_ReceptionDRList";
            tableMapping.ColumnMappings.Add("RecordSerial", "RecordSerial");
            tableMapping.ColumnMappings.Add("ClinicID", "ClinicID");
            tableMapping.ColumnMappings.Add("ServiceLevelID", "ServiceLevelID");
            tableMapping.ColumnMappings.Add("DoctorID", "DoctorID");
            tableMapping.ColumnMappings.Add("DrName", "DrName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TMS.Properties.Settings.Default.TMSCS;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Clinic_Bsk_lnk_ClinicDoctors.RecordSerial, Clinic_Bsk_lnk_ClinicDoctors.ClinicID, Clinic_Bsk_lnk_ClinicDoctors.ServiceLevelID, Clinic_Bsk_lnk_ClinicDoctors.DoctorID, Clinic_Bsk_DoctorsList.DrName
FROM            Clinic_Bsk_ClinicList INNER JOIN
                         Clinic_Bsk_lnk_ClinicDoctors ON Clinic_Bsk_ClinicList.ClinicID = Clinic_Bsk_lnk_ClinicDoctors.ClinicID INNER JOIN
                         Clinic_Bsk_DoctorsList ON Clinic_Bsk_lnk_ClinicDoctors.DoctorID = Clinic_Bsk_DoctorsList.DrID INNER JOIN
                         Clinic_Lup_ServiceLevel ON Clinic_Bsk_lnk_ClinicDoctors.ServiceLevelID = Clinic_Lup_ServiceLevel.Clinic_Lup_ServiceLevelID
WHERE        (Clinic_Bsk_lnk_ClinicDoctors.IsDeleted = 0) AND (Clinic_Bsk_lnk_ClinicDoctors.ClinicID = @ClinicID) AND (Clinic_Bsk_lnk_ClinicDoctors.ServiceLevelID = @ServiceLevelID)
ORDER BY Clinic_Bsk_DoctorsList.DrName";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClinicID", global::System.Data.SqlDbType.TinyInt, 1, global::System.Data.ParameterDirection.Input, 0, 0, "ClinicID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServiceLevelID", global::System.Data.SqlDbType.TinyInt, 1, global::System.Data.ParameterDirection.Input, 0, 0, "ServiceLevelID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillDoctorListFilterd(ClinicReception.Combo_ReceptionDRListDataTable dataTable, byte ClinicID, byte ServiceLevelID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((byte)(ClinicID));
            this.Adapter.SelectCommand.Parameters[1].Value = ((byte)(ServiceLevelID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GridPullSamplesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GridPullSamplesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GridPullSamples";
            tableMapping.ColumnMappings.Add("RequestID", "RequestID");
            tableMapping.ColumnMappings.Add("AnalysisID", "AnalysisID");
            tableMapping.ColumnMappings.Add("AnalysisName", "AnalysisName");
            tableMapping.ColumnMappings.Add("IsDeleted", "IsDeleted");
            tableMapping.ColumnMappings.Add("PullOfSampleDate", "PullOfSampleDate");
            tableMapping.ColumnMappings.Add("SampleBarCode1", "SampleBarCode1");
            tableMapping.ColumnMappings.Add("SampleBarCode2", "SampleBarCode2");
            tableMapping.ColumnMappings.Add("SampleBarCode3", "SampleBarCode3");
            tableMapping.ColumnMappings.Add("NoOfSamples", "NoOfSamples");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TMS.Properties.Settings.Default.TMSCS;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Lab_RequestDetails.RequestID, Lab_RequestDetails.AnalysisID, Lab_AnalysisList.AnalysisName, Lab_RequestDetails.IsDeleted, Lab_RequestDetails.PullOfSampleDate, Lab_RequestDetails.SampleBarCode1, 
                         Lab_RequestDetails.SampleBarCode2, Lab_RequestDetails.SampleBarCode3, Lab_AnalysisList.NoOfSamples
FROM            Lab_AnalysisList INNER JOIN
                         Lab_RequestDetails ON Lab_AnalysisList.AnalysisID = Lab_RequestDetails.AnalysisID
WHERE        (Lab_RequestDetails.IsDeleted = 0)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        Lab_RequestDetails.RequestID, Lab_RequestDetails.AnalysisID, Lab_AnalysisList.AnalysisName, Lab_RequestDetails.IsDeleted, Lab_RequestDetails.PullOfSampleDate, Lab_RequestDetails.SampleBarCode1, 
                         Lab_RequestDetails.SampleBarCode2, Lab_RequestDetails.SampleBarCode3, Lab_AnalysisList.NoOfSamples
FROM            Lab_AnalysisList INNER JOIN
                         Lab_RequestDetails ON Lab_AnalysisList.AnalysisID = Lab_RequestDetails.AnalysisID
WHERE        (Lab_RequestDetails.IsDeleted = 0) AND (Lab_RequestDetails.RequestID = @ReID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReID", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "RequestID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClinicReception.GridPullSamplesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByRID(ClinicReception.GridPullSamplesDataTable dataTable, short ReID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((short)(ReID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CountPatientTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CountPatientTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CountPatient";
            tableMapping.ColumnMappings.Add("TotalCount", "TotalCount");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TMS.Properties.Settings.Default.TMSCS;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        COUNT(RecordID) AS TotalCount\r\nFROM            EMR_PF_Basic\r\nWHERE " +
                "       (RegistrationDate BETWEEN @StartDate AND @EndDate)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "RegistrationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "RegistrationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClinicReception.CountPatientDataTable dataTable, string StartDate, string EndDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((StartDate == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(StartDate));
            }
            if ((EndDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(EndDate));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GridExaminationSerialTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GridExaminationSerialTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GridExaminationSerial";
            tableMapping.ColumnMappings.Add("RecordSerial", "RecordSerial");
            tableMapping.ColumnMappings.Add("PID", "PID");
            tableMapping.ColumnMappings.Add("PatientName", "PatientName");
            tableMapping.ColumnMappings.Add("ExaminationName", "ExaminationName");
            tableMapping.ColumnMappings.Add("ExaminationSerial", "ExaminationSerial");
            tableMapping.ColumnMappings.Add("RDate", "RDate");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TMS.Properties.Settings.Default.TMSCS;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        EMR_ExaminationSerial.RecordSerial, EMR_ExaminationSerial.PID, EMR_PF_Basic.PatientName, EMR_ExaminationSerial.ExaminationName, EMR_ExaminationSerial.ExaminationSerial, 
                         EMR_ExaminationSerial.RDate
FROM            EMR_ExaminationSerial INNER JOIN
                         EMR_PF_Basic ON EMR_ExaminationSerial.PID = EMR_PF_Basic.RecordID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        EMR_ExaminationSerial.RecordSerial, EMR_ExaminationSerial.PID, EMR_PF_Basic.PatientName, EMR_ExaminationSerial.ExaminationName, EMR_ExaminationSerial.ExaminationSerial, 
                         EMR_ExaminationSerial.RDate
FROM            EMR_ExaminationSerial INNER JOIN
                         EMR_PF_Basic ON EMR_ExaminationSerial.PID = EMR_PF_Basic.RecordID
WHERE        (EMR_ExaminationSerial.PID = @PID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClinicReception.GridExaminationSerialDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByPID(ClinicReception.GridExaminationSerialDataTable dataTable, short PID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((short)(PID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Inv_ItemsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Inv_ItemsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Inv_Items";
            tableMapping.ColumnMappings.Add("ItemLocalID", "ItemLocalID");
            tableMapping.ColumnMappings.Add("ItemName", "ItemName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TMS.Properties.Settings.Default.TMSCS;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ItemLocalID, ItemName\r\nFROM            Inv_Items";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        ItemLocalID, ItemName\r\nFROM            Inv_Items\r\nWHERE        (IsS" +
                "ervice = 1)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClinicReception.Inv_ItemsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillServiceList(ClinicReception.Inv_ItemsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DrListforRefTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DrListforRefTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DrListforRef";
            tableMapping.ColumnMappings.Add("DrName", "DrName");
            tableMapping.ColumnMappings.Add("AccountID", "AccountID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TMS.Properties.Settings.Default.TMSCS;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        AccountID, AccountTitle AS DrName\r\nFROM            Fin_AccountsInfo" +
                "\r\nWHERE        (IsDeleted = 0) AND (AccountTypeID = 4)\r\nORDER BY AccountID DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClinicReception.DrListforRefDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EMR_PF_BasicTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public EMR_PF_BasicTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EMR_PF_Basic";
            tableMapping.ColumnMappings.Add("RecordID", "RecordID");
            tableMapping.ColumnMappings.Add("PFileID", "PFileID");
            tableMapping.ColumnMappings.Add("PatientName", "PatientName");
            tableMapping.ColumnMappings.Add("PatientBarCode", "PatientBarCode");
            tableMapping.ColumnMappings.Add("AcAge", "AcAge");
            tableMapping.ColumnMappings.Add("GenderNameAr", "GenderNameAr");
            tableMapping.ColumnMappings.Add("BirthDate", "BirthDate");
            tableMapping.ColumnMappings.Add("NationalityNameAr", "NationalityNameAr");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("RegistrationDate", "RegistrationDate");
            tableMapping.ColumnMappings.Add("Contact1", "Contact1");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TMS.Properties.Settings.Default.TMSCS;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        EMR_PF_Basic.RecordID, EMR_PF_Basic.PFileID, EMR_PF_Basic.PatientName, '*' + CONVERT(nvarchar(50), EMR_PF_Basic.PFileID) + '*' AS PatientBarCode, CASE WHEN DATEDIFF(yy, BirthDate, GETDATE()) 
                         < 1 THEN CONVERT(nvarchar(MAX), DATEDIFF(dd, BirthDate, GETDATE())) + N' - يوم' ELSE CONVERT(nvarchar(MAX), DATEDIFF(yy, BirthDate, GETDATE())) + N' - عام' END AS AcAge, 
                         HR_Lup_Gender.GenderNameAr, EMR_PF_Basic.BirthDate, HR_Lup_Nationalities.NationalityNameAr, EMR_PF_Basic.Address,
                             (SELECT        TOP (1) VisitDate
                               FROM            Clinic_Bsk_ReservationTable
                               WHERE        (PID = EMR_PF_Basic.RecordID)
                               ORDER BY VisitDate) AS RegistrationDate, EMR_PF_Basic.Contact1
FROM            EMR_PF_Basic INNER JOIN
                         HR_Lup_Gender ON EMR_PF_Basic.GenderID = HR_Lup_Gender.GenderID LEFT OUTER JOIN
                         HR_Lup_Nationalities ON EMR_PF_Basic.NationalityID = HR_Lup_Nationalities.NationalityID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = new global::System.Data.SqlClient.SqlConnection(global::TMS.Properties.Settings.Default.TMSCS);
            this._commandCollection[1].CommandText = @"SELECT        EMR_PF_Basic.RecordID, EMR_PF_Basic.PFileID, EMR_PF_Basic.PatientName, '*' + CONVERT(nvarchar(50), EMR_PF_Basic.PFileID) + '*' AS PatientBarCode, CASE WHEN DATEDIFF(yy, BirthDate, GETDATE()) 
                         < 1 THEN CONVERT(nvarchar(MAX), DATEDIFF(dd, BirthDate, GETDATE())) + N' - يوم' ELSE CONVERT(nvarchar(MAX), DATEDIFF(yy, BirthDate, GETDATE())) + N' - عام' END AS AcAge, 
                         HR_Lup_Gender.GenderNameAr, EMR_PF_Basic.BirthDate, HR_Lup_Nationalities.NationalityNameAr, EMR_PF_Basic.Address, EMR_PF_Basic.Contact1, CASE WHEN
                             (SELECT        TOP (1) VisitDate
                                FROM            Clinic_Bsk_ReservationTable
                                WHERE        (PID = EMR_PF_Basic.RecordID)
                                ORDER BY VisitDate) = NULL THEN
                             (SELECT        TOP (1) VisitDate
                                FROM            Clinic_Bsk_ReservationTable
                                WHERE        (PID = EMR_PF_Basic.RecordID)
                                ORDER BY VisitDate) ELSE EMR_PF_Basic.RegistrationDate END AS RegistrationDate
FROM            EMR_PF_Basic INNER JOIN
                         HR_Lup_Gender ON EMR_PF_Basic.GenderID = HR_Lup_Gender.GenderID LEFT OUTER JOIN
                         HR_Lup_Nationalities ON EMR_PF_Basic.NationalityID = HR_Lup_Nationalities.NationalityID
WHERE        (EMR_PF_Basic.RecordID = @PID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "RecordID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClinicReception.EMR_PF_BasicDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySinglePatient(ClinicReception.EMR_PF_BasicDataTable dataTable, long PID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((long)(PID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RreservationGrid1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RreservationGrid1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RreservationGrid1";
            tableMapping.ColumnMappings.Add("RecordSerial", "RecordSerial");
            tableMapping.ColumnMappings.Add("PID", "PID");
            tableMapping.ColumnMappings.Add("PatientName", "PatientName");
            tableMapping.ColumnMappings.Add("DrID", "DrID");
            tableMapping.ColumnMappings.Add("DrName", "DrName");
            tableMapping.ColumnMappings.Add("ClinicID", "ClinicID");
            tableMapping.ColumnMappings.Add("ClinicTitle", "ClinicTitle");
            tableMapping.ColumnMappings.Add("VisitDate", "VisitDate");
            tableMapping.ColumnMappings.Add("Notes", "Notes");
            tableMapping.ColumnMappings.Add("IsEstshara", "IsEstshara");
            tableMapping.ColumnMappings.Add("EnterOrder", "EnterOrder");
            tableMapping.ColumnMappings.Add("IsAchived", "IsAchived");
            tableMapping.ColumnMappings.Add("VisitCost", "VisitCost");
            tableMapping.ColumnMappings.Add("HadPayied", "HadPayied");
            tableMapping.ColumnMappings.Add("ServiceLevelID", "ServiceLevelID");
            tableMapping.ColumnMappings.Add("AmountPaid", "AmountPaid");
            tableMapping.ColumnMappings.Add("AccountBalance", "AccountBalance");
            tableMapping.ColumnMappings.Add("InvoiceDetailsRecordID", "InvoiceDetailsRecordID");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("RCDate", "RCDate");
            tableMapping.ColumnMappings.Add("ModifiedBy", "ModifiedBy");
            tableMapping.ColumnMappings.Add("LADate", "LADate");
            tableMapping.ColumnMappings.Add("REye", "REye");
            tableMapping.ColumnMappings.Add("LEye", "LEye");
            tableMapping.ColumnMappings.Add("Late", "Late");
            tableMapping.ColumnMappings.Add("VisitDay", "VisitDay");
            tableMapping.ColumnMappings.Add("Attended", "Attended");
            tableMapping.ColumnMappings.Add("Prepared", "Prepared");
            tableMapping.ColumnMappings.Add("Transferd", "Transferd");
            tableMapping.ColumnMappings.Add("IsCurrent", "IsCurrent");
            tableMapping.ColumnMappings.Add("TakeService", "TakeService");
            tableMapping.ColumnMappings.Add("BookingTimeString", "BookingTimeString");
            tableMapping.ColumnMappings.Add("SubServiceName", "SubServiceName");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("PFileID", "PFileID");
            tableMapping.ColumnMappings.Add("ProfileNotes", "ProfileNotes");
            tableMapping.ColumnMappings.Add("OldID", "OldID");
            tableMapping.ColumnMappings.Add("ArchiveLocation", "ArchiveLocation");
            tableMapping.ColumnMappings.Add("GetFile", "GetFile");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("AttendTime", "AttendTime");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TMS.Properties.Settings.Default.TMSCS;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[11];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Pre_Users_1.DisplayName AS CreatedBy, Clinic_Bsk_ReservationTable.RCDate, Pre" +
                "_Users.DisplayName AS ModifiedBy, Clinic_Bsk_ReservationTable.LADate, Clinic_Bsk" +
                "_ReservationTable.REye, \r\n                         Clinic_Bsk_ReservationTable.L" +
                "Eye, Clinic_Bsk_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountP" +
                "aid AS Late, DATENAME(dw, Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, \r\n" +
                "                         Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_Reserv" +
                "ationTable.Prepared, Clinic_Bsk_ReservationTable.Transferd, Clinic_Bsk_Reservati" +
                "onTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, \r\n                  " +
                "       Clinic_Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList." +
                "SubServiceName, CASE WHEN DATEDIFF(yy, BirthDate, GETDATE()) < 1 THEN CONVERT(nv" +
                "archar(MAX), DATEDIFF(dd, BirthDate, \r\n                         GETDATE())) + N\'" +
                " - يوم\' ELSE CONVERT(nvarchar(MAX), DATEDIFF(yy, BirthDate, GETDATE())) + N\' - ع" +
                "ام\' END AS Age, EMR_PF_Basic.PFileID, EMR_PF_Basic.Notes AS ProfileNotes, EMR_PF" +
                "_Basic.OldID, \r\n                         EMR_PF_Basic.ArchiveLocation, Clinic_Bs" +
                "k_ReservationTable.GetFile, EMR_PF_Basic.Address, Clinic_Bsk_ReservationTable.At" +
                "tendTime\r\nFROM            Pre_Users AS Pre_Users_1 RIGHT OUTER JOIN\r\n           " +
                "              Clinic_Bsk_ReservationTable INNER JOIN\r\n                         E" +
                "MR_PF_Basic ON Clinic_Bsk_ReservationTable.PID = EMR_PF_Basic.RecordID INNER JOI" +
                "N\r\n                         Clinic_Bsk_ClinicList ON Clinic_Bsk_ReservationTable" +
                ".ClinicID = Clinic_Bsk_ClinicList.ClinicID INNER JOIN\r\n                         " +
                "Clinic_Bsk_DoctorsList ON Clinic_Bsk_ReservationTable.DrID = Clinic_Bsk_DoctorsL" +
                "ist.DrID LEFT OUTER JOIN\r\n                         Clinic_Lup_SubSrvicesList ON " +
                "Clinic_Bsk_ReservationTable.SubClinicID = Clinic_Lup_SubSrvicesList.SubServiceID" +
                " LEFT OUTER JOIN\r\n                         Pre_Users ON Clinic_Bsk_ReservationTa" +
                "ble.LABy = Pre_Users.UserID ON Pre_Users_1.UserID = Clinic_Bsk_ReservationTable." +
                "RCBy LEFT OUTER JOIN\r\n                         Fin_AccountStatment ON Clinic_Bsk" +
                "_ReservationTable.PID = Fin_AccountStatment.RecordID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Pre_Users_1.DisplayName AS CreatedBy, Clinic_Bsk_ReservationTable.RCDate, Pre" +
                "_Users.DisplayName AS ModifiedBy, Clinic_Bsk_ReservationTable.LADate, Clinic_Bsk" +
                "_ReservationTable.REye, \r\n                         Clinic_Bsk_ReservationTable.L" +
                "Eye, Clinic_Bsk_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountP" +
                "aid AS Late, DATENAME(dw, Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, \r\n" +
                "                         Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_Reserv" +
                "ationTable.Prepared, Clinic_Bsk_ReservationTable.Transferd, Clinic_Bsk_Reservati" +
                "onTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, \r\n                  " +
                "       Clinic_Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList." +
                "SubServiceName, CASE WHEN DATEDIFF(yy, BirthDate, GETDATE()) < 1 THEN CONVERT(nv" +
                "archar(MAX), DATEDIFF(dd, BirthDate, \r\n                         GETDATE())) + N\'" +
                " - يوم\' ELSE CONVERT(nvarchar(MAX), DATEDIFF(yy, BirthDate, GETDATE())) + N\' - ع" +
                "ام\' END AS Age, EMR_PF_Basic.PFileID, EMR_PF_Basic.Notes AS ProfileNotes, EMR_PF" +
                "_Basic.OldID, \r\n                         EMR_PF_Basic.ArchiveLocation, Clinic_Bs" +
                "k_ReservationTable.GetFile\r\nFROM            Pre_Users AS Pre_Users_1 RIGHT OUTER" +
                " JOIN\r\n                         Clinic_Bsk_ReservationTable INNER JOIN\r\n        " +
                "                 EMR_PF_Basic ON Clinic_Bsk_ReservationTable.PID = EMR_PF_Basic." +
                "RecordID INNER JOIN\r\n                         Clinic_Bsk_ClinicList ON Clinic_Bs" +
                "k_ReservationTable.ClinicID = Clinic_Bsk_ClinicList.ClinicID INNER JOIN\r\n       " +
                "                  Clinic_Bsk_DoctorsList ON Clinic_Bsk_ReservationTable.DrID = C" +
                "linic_Bsk_DoctorsList.DrID LEFT OUTER JOIN\r\n                         Clinic_Lup_" +
                "SubSrvicesList ON Clinic_Bsk_ReservationTable.SubClinicID = Clinic_Lup_SubSrvice" +
                "sList.SubServiceID LEFT OUTER JOIN\r\n                         Pre_Users ON Clinic" +
                "_Bsk_ReservationTable.LABy = Pre_Users.UserID ON Pre_Users_1.UserID = Clinic_Bsk" +
                "_ReservationTable.RCBy LEFT OUTER JOIN\r\n                         Fin_AccountStat" +
                "ment ON Clinic_Bsk_ReservationTable.PID = Fin_AccountStatment.RecordID\r\nWHERE   " +
                "     (Clinic_Bsk_ReservationTable.VisitDate = @VDate)\r\nORDER BY Clinic_Bsk_Reser" +
                "vationTable.GetFile";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Pre_Users.DisplayName AS CreatedBy, Clinic_Bsk_ReservationTable.RCDate, Clini" +
                "c_Bsk_ReservationTable.LABy, Pre_Users_1.DisplayName AS ModifiedBy, Clinic_Bsk_R" +
                "eservationTable.LADate, \r\n                         Clinic_Bsk_ReservationTable.R" +
                "Eye, Clinic_Bsk_ReservationTable.LEye, Clinic_Bsk_ReservationTable.VisitCost - C" +
                "linic_Bsk_ReservationTable.AmountPaid AS Late, DATENAME(dw, \r\n                  " +
                "       Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, Clinic_Bsk_Reservatio" +
                "nTable.Attended, Clinic_Bsk_ReservationTable.Prepared, Clinic_Bsk_ReservationTab" +
                "le.Transferd, \r\n                         Clinic_Bsk_ReservationTable.IsCurrent, " +
                "Clinic_Bsk_ReservationTable.TakeService, Clinic_Bsk_ReservationTable.BookingTime" +
                "String, Clinic_Lup_SubSrvicesList.SubServiceName, CASE WHEN DATEDIFF(yy, \r\n     " +
                "                    BirthDate, GETDATE()) < 1 THEN CONVERT(nvarchar(MAX), DATEDI" +
                "FF(dd, BirthDate, GETDATE())) + N\' - يوم\' ELSE CONVERT(nvarchar(MAX), DATEDIFF(y" +
                "y, BirthDate, GETDATE())) + N\' - عام\' END AS Age, \r\n                         EMR" +
                "_PF_Basic.PFileID\r\nFROM            Fin_AccountStatment RIGHT OUTER JOIN\r\n       " +
                "                  Clinic_Lup_SubSrvicesList RIGHT OUTER JOIN\r\n                  " +
                "       Clinic_Bsk_ReservationTable INNER JOIN\r\n                         EMR_PF_B" +
                "asic ON Clinic_Bsk_ReservationTable.PID = EMR_PF_Basic.RecordID INNER JOIN\r\n    " +
                "                     Clinic_Bsk_ClinicList ON Clinic_Bsk_ReservationTable.Clinic" +
                "ID = Clinic_Bsk_ClinicList.ClinicID INNER JOIN\r\n                         Clinic_" +
                "Bsk_DoctorsList ON Clinic_Bsk_ReservationTable.DrID = Clinic_Bsk_DoctorsList.DrI" +
                "D ON Clinic_Lup_SubSrvicesList.SubServiceID = Clinic_Bsk_ReservationTable.SubCli" +
                "nicID LEFT OUTER JOIN\r\n                         Pre_Users AS Pre_Users_1 ON Clin" +
                "ic_Bsk_ReservationTable.LABy = Pre_Users_1.UserID ON Fin_AccountStatment.RecordI" +
                "D = Clinic_Bsk_ReservationTable.PID LEFT OUTER JOIN\r\n                         Pr" +
                "e_Users ON Clinic_Bsk_ReservationTable.RCBy = Pre_Users.UserID\r\nWHERE        (Cl" +
                "inic_Bsk_ReservationTable.VisitDate = @VDate) AND (Clinic_Bsk_ReservationTable.A" +
                "ttended = @AttendFlag)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttendFlag", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Attended", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Pre_Users_1.DisplayName AS CreatedBy, Clinic_Bsk_ReservationTable.RCDate, Pre" +
                "_Users.DisplayName AS ModifiedBy, Clinic_Bsk_ReservationTable.LADate, Clinic_Bsk" +
                "_ReservationTable.REye, \r\n                         Clinic_Bsk_ReservationTable.L" +
                "Eye, Clinic_Bsk_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountP" +
                "aid AS Late, DATENAME(dw, Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, \r\n" +
                "                         Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_Reserv" +
                "ationTable.Prepared, Clinic_Bsk_ReservationTable.Transferd, Clinic_Bsk_Reservati" +
                "onTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, \r\n                  " +
                "       Clinic_Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList." +
                "SubServiceName, CASE WHEN DATEDIFF(yy, BirthDate, GETDATE()) < 1 THEN CONVERT(nv" +
                "archar(MAX), DATEDIFF(dd, BirthDate, \r\n                         GETDATE())) + N\'" +
                " - يوم\' ELSE CONVERT(nvarchar(MAX), DATEDIFF(yy, BirthDate, GETDATE())) + N\' - ع" +
                "ام\' END AS Age, EMR_PF_Basic.PFileID\r\nFROM            Pre_Users AS Pre_Users_1 R" +
                "IGHT OUTER JOIN\r\n                         Clinic_Bsk_ReservationTable INNER JOIN" +
                "\r\n                         EMR_PF_Basic ON Clinic_Bsk_ReservationTable.PID = EMR" +
                "_PF_Basic.RecordID INNER JOIN\r\n                         Clinic_Bsk_ClinicList ON" +
                " Clinic_Bsk_ReservationTable.ClinicID = Clinic_Bsk_ClinicList.ClinicID INNER JOI" +
                "N\r\n                         Clinic_Bsk_DoctorsList ON Clinic_Bsk_ReservationTabl" +
                "e.DrID = Clinic_Bsk_DoctorsList.DrID LEFT OUTER JOIN\r\n                         C" +
                "linic_Lup_SubSrvicesList ON Clinic_Bsk_ReservationTable.SubClinicID = Clinic_Lup" +
                "_SubSrvicesList.SubServiceID LEFT OUTER JOIN\r\n                         Pre_Users" +
                " ON Clinic_Bsk_ReservationTable.LABy = Pre_Users.UserID ON Pre_Users_1.UserID = " +
                "Clinic_Bsk_ReservationTable.RCBy LEFT OUTER JOIN\r\n                         Fin_A" +
                "ccountStatment ON Clinic_Bsk_ReservationTable.PID = Fin_AccountStatment.RecordID" +
                "\r\nWHERE        (Clinic_Bsk_ReservationTable.RecordSerial = @BookingID)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BookingID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "RecordSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Pre_Users_1.DisplayName AS CreatedBy, Clinic_Bsk_ReservationTable.RCDate, Pre" +
                "_Users.DisplayName AS ModifiedBy, Clinic_Bsk_ReservationTable.LADate, Clinic_Bsk" +
                "_ReservationTable.REye, \r\n                         Clinic_Bsk_ReservationTable.L" +
                "Eye, Clinic_Bsk_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountP" +
                "aid AS Late, DATENAME(dw, Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, \r\n" +
                "                         Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_Reserv" +
                "ationTable.Prepared, Clinic_Bsk_ReservationTable.Transferd, Clinic_Bsk_Reservati" +
                "onTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, \r\n                  " +
                "       Clinic_Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList." +
                "SubServiceName, CASE WHEN DATEDIFF(yy, BirthDate, GETDATE()) < 1 THEN CONVERT(nv" +
                "archar(MAX), DATEDIFF(dd, BirthDate, \r\n                         GETDATE())) + N\'" +
                " - يوم\' ELSE CONVERT(nvarchar(MAX), DATEDIFF(yy, BirthDate, GETDATE())) + N\' - ع" +
                "ام\' END AS Age, EMR_PF_Basic.PFileID\r\nFROM            Pre_Users AS Pre_Users_1 R" +
                "IGHT OUTER JOIN\r\n                         Clinic_Bsk_ReservationTable INNER JOIN" +
                "\r\n                         EMR_PF_Basic ON Clinic_Bsk_ReservationTable.PID = EMR" +
                "_PF_Basic.RecordID INNER JOIN\r\n                         Clinic_Bsk_ClinicList ON" +
                " Clinic_Bsk_ReservationTable.ClinicID = Clinic_Bsk_ClinicList.ClinicID INNER JOI" +
                "N\r\n                         Clinic_Bsk_DoctorsList ON Clinic_Bsk_ReservationTabl" +
                "e.DrID = Clinic_Bsk_DoctorsList.DrID LEFT OUTER JOIN\r\n                         C" +
                "linic_Lup_SubSrvicesList ON Clinic_Bsk_ReservationTable.SubClinicID = Clinic_Lup" +
                "_SubSrvicesList.SubServiceID LEFT OUTER JOIN\r\n                         Pre_Users" +
                " ON Clinic_Bsk_ReservationTable.LABy = Pre_Users.UserID ON Pre_Users_1.UserID = " +
                "Clinic_Bsk_ReservationTable.RCBy LEFT OUTER JOIN\r\n                         Fin_A" +
                "ccountStatment ON Clinic_Bsk_ReservationTable.PID = Fin_AccountStatment.RecordID" +
                "\r\nWHERE        (Clinic_Bsk_ReservationTable.ClinicID = @ClinicID) AND (Clinic_Bs" +
                "k_ReservationTable.VisitDate = @VDate)\r\nORDER BY Clinic_Bsk_ReservationTable.Tak" +
                "eService";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClinicID", global::System.Data.SqlDbType.TinyInt, 1, global::System.Data.ParameterDirection.Input, 0, 0, "ClinicID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Clinic_Bsk_ReservationTable.REye, Clinic_Bsk_ReservationTable.LEye, Clinic_Bs" +
                "k_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountPaid AS Late, D" +
                "ATENAME(dw, \r\n                         Clinic_Bsk_ReservationTable.VisitDate) AS" +
                " VisitDay, Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_ReservationTable.Pre" +
                "pared, Clinic_Bsk_ReservationTable.Transferd, \r\n                         Clinic_" +
                "Bsk_ReservationTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, Clinic_" +
                "Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList.SubServiceName" +
                ", EMR_PF_Basic.PFileID\r\nFROM            Clinic_Bsk_ReservationTable INNER JOIN\r\n" +
                "                         EMR_PF_Basic ON Clinic_Bsk_ReservationTable.PID = EMR_P" +
                "F_Basic.RecordID INNER JOIN\r\n                         Clinic_Bsk_ClinicList ON C" +
                "linic_Bsk_ReservationTable.ClinicID = Clinic_Bsk_ClinicList.ClinicID INNER JOIN\r" +
                "\n                         Clinic_Bsk_DoctorsList ON Clinic_Bsk_ReservationTable." +
                "DrID = Clinic_Bsk_DoctorsList.DrID LEFT OUTER JOIN\r\n                         Cli" +
                "nic_Lup_SubSrvicesList ON Clinic_Bsk_ReservationTable.SubClinicID = Clinic_Lup_S" +
                "ubSrvicesList.SubServiceID LEFT OUTER JOIN\r\n                         Fin_Account" +
                "Statment ON Clinic_Bsk_ReservationTable.PID = Fin_AccountStatment.RecordID\r\nWHER" +
                "E        (Clinic_Bsk_ReservationTable.DrID = @DRID) AND (Clinic_Bsk_ReservationT" +
                "able.VisitDate = @VisitDate) AND (Clinic_Bsk_ReservationTable.IsAchived = 0) AND" +
                " \r\n                         (Clinic_Bsk_ReservationTable.Attended = @Attend) AND" +
                " (Clinic_Bsk_ReservationTable.IsCurrent = @CurrentFlag)";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DRID", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "DrID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VisitDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Attend", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Attended", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentFlag", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "IsCurrent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Clinic_Bsk_ReservationTable.REye, Clinic_Bsk_ReservationTable.LEye, Clinic_Bs" +
                "k_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountPaid AS Late, D" +
                "ATENAME(dw, \r\n                         Clinic_Bsk_ReservationTable.VisitDate) AS" +
                " VisitDay, Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_ReservationTable.Pre" +
                "pared, Clinic_Bsk_ReservationTable.Transferd, \r\n                         Clinic_" +
                "Bsk_ReservationTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, Clinic_" +
                "Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList.SubServiceName" +
                ", EMR_PF_Basic.Address, \r\n                         Clinic_Bsk_ReservationTable.A" +
                "ttendTime, EMR_PF_Basic.PFileID\r\nFROM            Clinic_Bsk_ReservationTable INN" +
                "ER JOIN\r\n                         EMR_PF_Basic ON Clinic_Bsk_ReservationTable.PI" +
                "D = EMR_PF_Basic.RecordID INNER JOIN\r\n                         Clinic_Bsk_Clinic" +
                "List ON Clinic_Bsk_ReservationTable.ClinicID = Clinic_Bsk_ClinicList.ClinicID IN" +
                "NER JOIN\r\n                         Clinic_Bsk_DoctorsList ON Clinic_Bsk_Reservat" +
                "ionTable.DrID = Clinic_Bsk_DoctorsList.DrID LEFT OUTER JOIN\r\n                   " +
                "      Clinic_Lup_SubSrvicesList ON Clinic_Bsk_ReservationTable.SubClinicID = Cli" +
                "nic_Lup_SubSrvicesList.SubServiceID LEFT OUTER JOIN\r\n                         Fi" +
                "n_AccountStatment ON Clinic_Bsk_ReservationTable.PID = Fin_AccountStatment.Recor" +
                "dID\r\nWHERE        (Clinic_Bsk_ReservationTable.DrID = @DRID) AND (Clinic_Bsk_Res" +
                "ervationTable.VisitDate = @VisitDate) AND (Clinic_Bsk_ReservationTable.IsAchived" +
                " = 0) AND \r\n                         (Clinic_Bsk_ReservationTable.Attended = @At" +
                "tend) AND (Clinic_Bsk_ReservationTable.ClinicID <> 44) AND (Clinic_Bsk_Reservati" +
                "onTable.TakeService = 0) AND (Clinic_Bsk_ReservationTable.IsCurrent = 0)";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DRID", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 0, 0, "DrID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VisitDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Attend", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Attended", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Pre_Users_1.DisplayName AS CreatedBy, Clinic_Bsk_ReservationTable.RCDate, Pre" +
                "_Users.DisplayName AS ModifiedBy, Clinic_Bsk_ReservationTable.LADate, Clinic_Bsk" +
                "_ReservationTable.REye, \r\n                         Clinic_Bsk_ReservationTable.L" +
                "Eye, Clinic_Bsk_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountP" +
                "aid AS Late, DATENAME(dw, Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, \r\n" +
                "                         Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_Reserv" +
                "ationTable.Prepared, Clinic_Bsk_ReservationTable.Transferd, Clinic_Bsk_Reservati" +
                "onTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, \r\n                  " +
                "       Clinic_Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList." +
                "SubServiceName, EMR_PF_Basic.PFileID\r\nFROM            Pre_Users AS Pre_Users_1 R" +
                "IGHT OUTER JOIN\r\n                         Clinic_Bsk_ReservationTable INNER JOIN" +
                "\r\n                         EMR_PF_Basic ON Clinic_Bsk_ReservationTable.PID = EMR" +
                "_PF_Basic.RecordID INNER JOIN\r\n                         Clinic_Bsk_ClinicList ON" +
                " Clinic_Bsk_ReservationTable.ClinicID = Clinic_Bsk_ClinicList.ClinicID INNER JOI" +
                "N\r\n                         Clinic_Bsk_DoctorsList ON Clinic_Bsk_ReservationTabl" +
                "e.DrID = Clinic_Bsk_DoctorsList.DrID LEFT OUTER JOIN\r\n                         C" +
                "linic_Lup_SubSrvicesList ON Clinic_Bsk_ReservationTable.SubClinicID = Clinic_Lup" +
                "_SubSrvicesList.SubServiceID LEFT OUTER JOIN\r\n                         Pre_Users" +
                " ON Clinic_Bsk_ReservationTable.LABy = Pre_Users.UserID ON Pre_Users_1.UserID = " +
                "Clinic_Bsk_ReservationTable.RCBy LEFT OUTER JOIN\r\n                         Fin_A" +
                "ccountStatment ON Clinic_Bsk_ReservationTable.PID = Fin_AccountStatment.RecordID" +
                "\r\nWHERE        (EMR_PF_Basic.PatientName LIKE N\'%\' + @NameLike + N\'%\') AND (Clin" +
                "ic_Bsk_ReservationTable.VisitDate = @ReservationDate)";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NameLike", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, "PatientName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReservationDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Pre_Users_1.DisplayName AS CreatedBy, Clinic_Bsk_ReservationTable.RCDate, Pre" +
                "_Users.DisplayName AS ModifiedBy, Clinic_Bsk_ReservationTable.LADate, Clinic_Bsk" +
                "_ReservationTable.REye, \r\n                         Clinic_Bsk_ReservationTable.L" +
                "Eye, Clinic_Bsk_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountP" +
                "aid AS Late, DATENAME(dw, Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, \r\n" +
                "                         Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_Reserv" +
                "ationTable.Prepared, Clinic_Bsk_ReservationTable.Transferd, Clinic_Bsk_Reservati" +
                "onTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, \r\n                  " +
                "       Clinic_Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList." +
                "SubServiceName, EMR_PF_Basic.PFileID\r\nFROM            Pre_Users AS Pre_Users_1 R" +
                "IGHT OUTER JOIN\r\n                         Clinic_Bsk_ReservationTable INNER JOIN" +
                "\r\n                         EMR_PF_Basic ON Clinic_Bsk_ReservationTable.PID = EMR" +
                "_PF_Basic.RecordID INNER JOIN\r\n                         Clinic_Bsk_ClinicList ON" +
                " Clinic_Bsk_ReservationTable.ClinicID = Clinic_Bsk_ClinicList.ClinicID INNER JOI" +
                "N\r\n                         Clinic_Bsk_DoctorsList ON Clinic_Bsk_ReservationTabl" +
                "e.DrID = Clinic_Bsk_DoctorsList.DrID LEFT OUTER JOIN\r\n                         C" +
                "linic_Lup_SubSrvicesList ON Clinic_Bsk_ReservationTable.SubClinicID = Clinic_Lup" +
                "_SubSrvicesList.SubServiceID LEFT OUTER JOIN\r\n                         Pre_Users" +
                " ON Clinic_Bsk_ReservationTable.LABy = Pre_Users.UserID ON Pre_Users_1.UserID = " +
                "Clinic_Bsk_ReservationTable.RCBy LEFT OUTER JOIN\r\n                         Fin_A" +
                "ccountStatment ON Clinic_Bsk_ReservationTable.PID = Fin_AccountStatment.RecordID" +
                "\r\nWHERE        (Clinic_Bsk_ReservationTable.PID = @PID) AND (Clinic_Bsk_Reservat" +
                "ionTable.VisitDate = @VDate)";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Pre_Users.DisplayName AS CreatedBy, Clinic_Bsk_ReservationTable.RCDate, Clini" +
                "c_Bsk_ReservationTable.LABy, Pre_Users_1.DisplayName AS ModifiedBy, Clinic_Bsk_R" +
                "eservationTable.LADate, \r\n                         Clinic_Bsk_ReservationTable.R" +
                "Eye, Clinic_Bsk_ReservationTable.LEye, Clinic_Bsk_ReservationTable.VisitCost - C" +
                "linic_Bsk_ReservationTable.AmountPaid AS Late, DATENAME(dw, \r\n                  " +
                "       Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, Clinic_Bsk_Reservatio" +
                "nTable.Attended, Clinic_Bsk_ReservationTable.Prepared, Clinic_Bsk_ReservationTab" +
                "le.Transferd, \r\n                         Clinic_Bsk_ReservationTable.IsCurrent, " +
                "Clinic_Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList.SubServ" +
                "iceName, EMR_PF_Basic.PFileID, Clinic_Bsk_ReservationTable.TakeService\r\nFROM    " +
                "        Fin_AccountStatment RIGHT OUTER JOIN\r\n                         Clinic_Lu" +
                "p_SubSrvicesList RIGHT OUTER JOIN\r\n                         Clinic_Bsk_Reservati" +
                "onTable INNER JOIN\r\n                         EMR_PF_Basic ON Clinic_Bsk_Reservat" +
                "ionTable.PID = EMR_PF_Basic.RecordID INNER JOIN\r\n                         Clinic" +
                "_Bsk_ClinicList ON Clinic_Bsk_ReservationTable.ClinicID = Clinic_Bsk_ClinicList." +
                "ClinicID INNER JOIN\r\n                         Clinic_Bsk_DoctorsList ON Clinic_B" +
                "sk_ReservationTable.DrID = Clinic_Bsk_DoctorsList.DrID ON Clinic_Lup_SubSrvicesL" +
                "ist.SubServiceID = Clinic_Bsk_ReservationTable.SubClinicID LEFT OUTER JOIN\r\n    " +
                "                     Pre_Users AS Pre_Users_1 ON Clinic_Bsk_ReservationTable.LAB" +
                "y = Pre_Users_1.UserID ON Fin_AccountStatment.RecordID = Clinic_Bsk_ReservationT" +
                "able.PID LEFT OUTER JOIN\r\n                         Pre_Users ON Clinic_Bsk_Reser" +
                "vationTable.RCBy = Pre_Users.UserID\r\nWHERE        (Clinic_Bsk_ReservationTable.V" +
                "isitDate = @VDate)";
            this._commandCollection[9].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = "SELECT        Clinic_Bsk_ReservationTable.RecordSerial, Clinic_Bsk_ReservationTab" +
                "le.PID, EMR_PF_Basic.PatientName, Clinic_Bsk_ReservationTable.DrID, Clinic_Bsk_D" +
                "octorsList.DrName, \r\n                         Clinic_Bsk_ReservationTable.Clinic" +
                "ID, Clinic_Bsk_ClinicList.ClinicTitle, Clinic_Bsk_ReservationTable.VisitDate, Cl" +
                "inic_Bsk_ReservationTable.Notes, Clinic_Bsk_ReservationTable.IsEstshara, \r\n     " +
                "                    Clinic_Bsk_ReservationTable.EnterOrder, Clinic_Bsk_Reservati" +
                "onTable.IsAchived, Clinic_Bsk_ReservationTable.VisitCost, Clinic_Bsk_Reservation" +
                "Table.HadPayied, \r\n                         Clinic_Bsk_ReservationTable.ServiceL" +
                "evelID, Clinic_Bsk_ReservationTable.AmountPaid, Fin_AccountStatment.AccountBalan" +
                "ce, Clinic_Bsk_ReservationTable.InvoiceDetailsRecordID, \r\n                      " +
                "   Pre_Users_1.DisplayName AS CreatedBy, Clinic_Bsk_ReservationTable.RCDate, Pre" +
                "_Users.DisplayName AS ModifiedBy, Clinic_Bsk_ReservationTable.LADate, Clinic_Bsk" +
                "_ReservationTable.REye, \r\n                         Clinic_Bsk_ReservationTable.L" +
                "Eye, Clinic_Bsk_ReservationTable.VisitCost - Clinic_Bsk_ReservationTable.AmountP" +
                "aid AS Late, DATENAME(dw, Clinic_Bsk_ReservationTable.VisitDate) AS VisitDay, \r\n" +
                "                         Clinic_Bsk_ReservationTable.Attended, Clinic_Bsk_Reserv" +
                "ationTable.Prepared, Clinic_Bsk_ReservationTable.Transferd, Clinic_Bsk_Reservati" +
                "onTable.IsCurrent, Clinic_Bsk_ReservationTable.TakeService, \r\n                  " +
                "       Clinic_Bsk_ReservationTable.BookingTimeString, Clinic_Lup_SubSrvicesList." +
                "SubServiceName, EMR_PF_Basic.PFileID\r\nFROM            Pre_Users AS Pre_Users_1 R" +
                "IGHT OUTER JOIN\r\n                         Clinic_Bsk_ReservationTable INNER JOIN" +
                "\r\n                         EMR_PF_Basic ON Clinic_Bsk_ReservationTable.PID = EMR" +
                "_PF_Basic.RecordID INNER JOIN\r\n                         Clinic_Bsk_ClinicList ON" +
                " Clinic_Bsk_ReservationTable.ClinicID = Clinic_Bsk_ClinicList.ClinicID INNER JOI" +
                "N\r\n                         Clinic_Bsk_DoctorsList ON Clinic_Bsk_ReservationTabl" +
                "e.DrID = Clinic_Bsk_DoctorsList.DrID LEFT OUTER JOIN\r\n                         C" +
                "linic_Lup_SubSrvicesList ON Clinic_Bsk_ReservationTable.SubClinicID = Clinic_Lup" +
                "_SubSrvicesList.SubServiceID LEFT OUTER JOIN\r\n                         Pre_Users" +
                " ON Clinic_Bsk_ReservationTable.LABy = Pre_Users.UserID ON Pre_Users_1.UserID = " +
                "Clinic_Bsk_ReservationTable.RCBy LEFT OUTER JOIN\r\n                         Fin_A" +
                "ccountStatment ON Clinic_Bsk_ReservationTable.PID = Fin_AccountStatment.RecordID" +
                "\r\nWHERE        (Clinic_Bsk_ReservationTable.PID = @PID)\r\nORDER BY Clinic_Bsk_Res" +
                "ervationTable.VisitDate DESC";
            this._commandCollection[10].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClinicReception.RreservationGrid1DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByArchiveView(ClinicReception.RreservationGrid1DataTable dataTable, string VDate) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((VDate == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(VDate));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByAttendFlag(ClinicReception.RreservationGrid1DataTable dataTable, string VDate, global::System.Nullable<bool> AttendFlag) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((VDate == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(VDate));
            }
            if ((AttendFlag.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(AttendFlag.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBookingID(ClinicReception.RreservationGrid1DataTable dataTable, int BookingID) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(BookingID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByClinic(ClinicReception.RreservationGrid1DataTable dataTable, global::System.Nullable<byte> ClinicID, string VDate) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((ClinicID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((byte)(ClinicID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((VDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(VDate));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDrDateCurrent(ClinicReception.RreservationGrid1DataTable dataTable, global::System.Nullable<short> DRID, string VisitDate, global::System.Nullable<bool> Attend, global::System.Nullable<bool> CurrentFlag) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((DRID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((short)(DRID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((VisitDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(VisitDate));
            }
            if ((Attend.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(Attend.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((CurrentFlag.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((bool)(CurrentFlag.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDrwithDate(ClinicReception.RreservationGrid1DataTable dataTable, global::System.Nullable<short> DRID, string VisitDate, global::System.Nullable<bool> Attend) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            if ((DRID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((short)(DRID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((VisitDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(VisitDate));
            }
            if ((Attend.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(Attend.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByNameInBookingDay(ClinicReception.RreservationGrid1DataTable dataTable, string NameLike, string ReservationDate) {
            this.Adapter.SelectCommand = this.CommandCollection[7];
            if ((NameLike == null)) {
                throw new global::System.ArgumentNullException("NameLike");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(NameLike));
            }
            if ((ReservationDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ReservationDate));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByPatienr(ClinicReception.RreservationGrid1DataTable dataTable, global::System.Nullable<long> PID, string VDate) {
            this.Adapter.SelectCommand = this.CommandCollection[8];
            if ((PID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((long)(PID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((VDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(VDate));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByVDate(ClinicReception.RreservationGrid1DataTable dataTable, string VDate) {
            this.Adapter.SelectCommand = this.CommandCollection[9];
            if ((VDate == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(VDate));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillPatientHistory(ClinicReception.RreservationGrid1DataTable dataTable, global::System.Nullable<long> PID) {
            this.Adapter.SelectCommand = this.CommandCollection[10];
            if ((PID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((long)(PID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Clinic_Reservation_Lup_HourSlotTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Clinic_Reservation_Lup_HourSlotTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Clinic_Reservation_Lup_HourSlot";
            tableMapping.ColumnMappings.Add("HourSlotID", "HourSlotID");
            tableMapping.ColumnMappings.Add("HourSlotTitle", "HourSlotTitle");
            tableMapping.ColumnMappings.Add("HourAsTime", "HourAsTime");
            tableMapping.ColumnMappings.Add("RealHour", "RealHour");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TMS.Properties.Settings.Default.TMSCS;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        HourSlotID, HourSlotTitle, HourAsTime, RealHour\r\nFROM            Cl" +
                "inic_Reservation_Lup_HourSlot\r\nWHERE        (HourSlotID > 99)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClinicReception.Clinic_Reservation_Lup_HourSlotDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private Clinic_Bsk_ReservationTableTableAdapter _clinic_Bsk_ReservationTableTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Clinic_Bsk_ReservationTableTableAdapter Clinic_Bsk_ReservationTableTableAdapter {
            get {
                return this._clinic_Bsk_ReservationTableTableAdapter;
            }
            set {
                this._clinic_Bsk_ReservationTableTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._clinic_Bsk_ReservationTableTableAdapter != null) 
                            && (this._clinic_Bsk_ReservationTableTableAdapter.Connection != null))) {
                    return this._clinic_Bsk_ReservationTableTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._clinic_Bsk_ReservationTableTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ClinicReception dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._clinic_Bsk_ReservationTableTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Clinic_Bsk_ReservationTable.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._clinic_Bsk_ReservationTableTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ClinicReception dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._clinic_Bsk_ReservationTableTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Clinic_Bsk_ReservationTable.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._clinic_Bsk_ReservationTableTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ClinicReception dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._clinic_Bsk_ReservationTableTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Clinic_Bsk_ReservationTable.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._clinic_Bsk_ReservationTableTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ClinicReception dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._clinic_Bsk_ReservationTableTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._clinic_Bsk_ReservationTableTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._clinic_Bsk_ReservationTableTableAdapter != null)) {
                    revertConnections.Add(this._clinic_Bsk_ReservationTableTableAdapter, this._clinic_Bsk_ReservationTableTableAdapter.Connection);
                    this._clinic_Bsk_ReservationTableTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._clinic_Bsk_ReservationTableTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._clinic_Bsk_ReservationTableTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._clinic_Bsk_ReservationTableTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._clinic_Bsk_ReservationTableTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._clinic_Bsk_ReservationTableTableAdapter != null)) {
                    this._clinic_Bsk_ReservationTableTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._clinic_Bsk_ReservationTableTableAdapter]));
                    this._clinic_Bsk_ReservationTableTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591