@{var collectorName = "";
  List<EIF.Helper.CollectorwithPayment> Reslts = new List<EIF.Helper.CollectorwithPayment>();
   if (ViewBag.CollectorReport != null)
    {
         Reslts = ViewBag.CollectorReport;
   }
  }

@{
    <div id="result">
       
    @if (ViewBag.CollectorReport != null)
    {
         Reslts = ViewBag.CollectorReport;
        var groupResult = Reslts.Distinct().OrderByDescending(c => c.CollectorName).GroupBy(c => new { c.CollectorName });
        foreach (var g in groupResult)
        {
            var allCountCustomers = 0;
            var allTotalBalance = 0.0;
            var allTotalPayment = 0.0;
            var allCountPayment = 0;
            var allTotalPastDue = 0.0;
            var activePercent = 0.0;
            var woPercent = 0.0;

            var activePaymentTotal = 0.0;
            var activePastDueTotal = 0.0;
            var woPaymentTotal = 0.0;
            var woBalanceTotal = 0.0;

            var activePaymentTotal1 = 0.0;
            var activePastDueTotal1 = 0.0;
            var woPaymentTotal1 = 0.0;
            var woBalanceTotal1 = 0.0;

            var k = g.Distinct().OrderByDescending(c => c.MonthYear).GroupBy(c => c.MonthYear);
            var y = "";
             <div style="overflow-x:scroll;">
            <table cellpadding="0" border="0" class="table table-striped table-bordered" id="@g.Key.CollectorName">
                @foreach (var item in k)
                {

                    var countCustomers = 0;
                    var totalBalance = 0.0;
                    var totalPayment = 0.0;
                    var countPayment = 0;
                    var totalPastDue = 0.0;
                    var countCustomersPer = 0;
                    var totalBalancePer = 0.0;
                    var totalPaymentPer = 0.0;
                    var countPaymentPer = 0;
                    var totalPastDuePer = 0.0;
                    var itemi = int.Parse(item.Key);
                    var result2 = item.Distinct().OrderByDescending(c => c.DomainType).GroupBy(c => c.DomainType);
                    <thead>
                        <tr>
                            <th>Collector Code</th>
                            <th>Collector Name</th>
                           @if( ViewBag.type == 1){ <th>Domain Title</th>}
                            <th>Domain Type </th>
                          @if (ViewBag.type == 1){  <th>Product</th>}
                            <th>Bank Name</th>
                            <th>Count Of Customers</th>
                            <th>Count Of Payment</th>
                            <th>Total Payment</th>
                            <th>Past Due</th>
                            <th>Balance</th>
                            <th>Active%</th>
                            <th>W/O%</th>
                        </tr>

                        @foreach (var item2 in result2)
                        {
                            var res = item2.OrderBy(c => c.AgencyTitle).ToList();
                            totalPastDue = 0;
                            countCustomers = 0;
                            totalBalance = 0;
                            totalPayment = 0;
                            countPayment = 0;

                            for (var i = 0; i < res.Count; i++)
                            {
                                totalPastDue += Convert.ToDouble(res[i].PastDue);
                                countCustomers += res[i].CountOfCustomers;
                                totalBalance += Convert.ToDouble(res[i].Balance);
                                totalPayment += Convert.ToDouble(res[i].Payment);
                                countPayment += res[i].CountOfPayment;
                                collectorName = res[i].CollectorName;
                                activePercent = 0.0;
                                woPercent = 0.0;
                                <tr>
                                    <td title="Collector Code">@res[i].CollectorCode</td>
                                    <td title="Collector Name">@res[i].CollectorName</td>
                                   @if(ViewBag.type == 1){ <td title="Domain Name">@res[i].DomainTitle</td>}
                                    <td title="Domain Type">@res[i].DomainType</td>
                                   @if (ViewBag.type == 1){ <td title="Product">@res[i].Product</td>}
                                    <td title="Bank Name">@res[i].AgencyTitle</td>
                                    <td title="Count Of Customers">@res[i].CountOfCustomers</td>
                                    <td title="Count Of Payment">@res[i].CountOfPayment</td>
                                    <td title="Total Payment">@res[i].Payment</td>
                                    <td title="Past Due">@res[i].PastDue</td>
                                    <td title="Balance">@res[i].Balance</td>

                                    @if (item2.Key == "Active")
                                      {
                                     activePercent = double.Parse(res[i].Payment) / double.Parse(res[i].PastDue); activePercent = activePercent * 100; }

                                    else
                                      { woPercent = double.Parse(res[i].Payment) / double.Parse(res[i].Balance); woPercent = woPercent * 100; }
                                    
                                    <td title="Active%"> @Math.Round(activePercent,2)%</td>
                                    <td title="W-of%"> @Math.Round(woPercent,2)%</td>


                                </tr>

                            }


                            var activePercent1 = 0.0; var woPercent1 = 0.0;
                                if (@item2.Key == "Active")
                                {
                                    activePercent1 = totalPayment / totalPastDue; activePercent1 = activePercent1 * 100;
                                    activePastDueTotal = totalPastDue;
                                    activePaymentTotal = totalPayment;
                                }

                                else
                                {
                                    woPercent1 = totalPayment / totalBalance; woPercent1 = woPercent1 * 100;
                                    woBalanceTotal = totalBalance;
                                    woPaymentTotal = totalPayment;


                                }
                                countCustomersPer += countCustomers;
                                totalBalancePer += totalBalance;
                                totalPaymentPer += totalPayment;
                                countPaymentPer += countPayment;
                                totalPastDuePer += totalPastDue;

                            if (ViewBag.type == 1) { 
                            <tr>
                                <th colspan="6">Total Of @item2.Key </th>

                                <td>@countCustomers</td>
                                <td>@countPayment</td>
                                <td>@totalPayment</td>
                                <td>@totalPastDue</td>
                                <td>@totalBalance</td>
                                
                                <td>@Math.Round(activePercent1,2)%</td>
                                <td>@Math.Round(woPercent1,2)%</td>
                                
                            </tr>}
                        }


                        <tr class="collector-name"><th colspan="10"> @{ y = itemi > 12 ? itemi.ToString() : ((enum_Months.eMonths)itemi).ToString();}<h2> @y Data For @collectorName</h2></th></tr>
                    </thead>
                    <tr>
                        @if (ViewBag.type == 1) {<th colspan="6">Total Of @y  </th>}
                         else
                        {
                            <th colspan="4">Total Of @y  </th>

                        }

                        <td title="Count Of Customers">@countCustomersPer</td>
                        <td title="Count Of Payment">@countPaymentPer</td>
                        <td title="Total Payment">@totalPaymentPer</td>

                        <td title="Past Due">@totalPastDuePer</td>
                        <td title="Balance">@totalBalancePer</td>
                        @{var activePercent2 = 0.0; var woPercent2 = 0.0;
                          
                          
                              activePaymentTotal1 +=activePaymentTotal;
                              activePastDueTotal1 += activePastDueTotal;
                              woPaymentTotal1+=woPaymentTotal;
                              woBalanceTotal1 += woBalanceTotal;
                              
                            activePercent2 = activePaymentTotal / activePastDueTotal; activePercent2 = activePercent2 * 100; 

                        woPercent2 = woPaymentTotal / woBalanceTotal; woPercent2 = woPercent2 * 100; 
                        }
                        <td>@Math.Round(activePercent2,2)%</td>
                        <td>@Math.Round(woPercent2,2)%</td>

                    </tr>



                        allCountCustomers += countCustomersPer;
                        allTotalBalance += totalBalancePer;
                        allTotalPayment += totalPaymentPer;
                        allCountPayment += countPaymentPer;
                        allTotalPastDue += totalPastDuePer;



                }
                <tr>@if (ViewBag.type == 1) { 
                    <th colspan="6">Total Of @collectorName </th>}
                                                                 else
                    {
                        <th colspan="4">Total Of @collectorName </th>
                    }
                                                                 
                    <td title="Count Of Customers">@allCountCustomers</td>
                    <td title="Count Of Payment">@allCountPayment</td>
                    <td title="Total Payment">@allTotalPayment</td>
                    <td title="Past Due">@allTotalPastDue</td>
                    <td title="Balance">@allTotalBalance</td>
                    @{var activePercent3 = activePaymentTotal1 / activePastDueTotal1; activePercent3 = activePercent3 * 100; 

                    
                    var woPercent3 = woPaymentTotal1 / woBalanceTotal1; woPercent3 = woPercent3 * 100; }
                    <td>@Math.Round(activePercent3,2)%</td>
                    <td>@Math.Round(woPercent3,2)%</td>
                </tr>
            </table>                              
        </div>
        
        
        }
    }

    else if (ViewBag.CollectorReportwarning != null)
    {
        <p class="text-warning"><span class="fa fa-warning text-yellow"></span> Collector Report : @ViewBag.CollectorReportwarning</p>
    }
        
    </div>
}

                           
<script>
    $(function () {
        $('.collector-name').each(function () { var t = $(this).parent(t); $(t).prepend(this) })
    })
</script>
